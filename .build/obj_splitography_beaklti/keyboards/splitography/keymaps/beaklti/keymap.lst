   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.equal_reset,"ax",@progbits
  11               	.global	equal_reset
  13               	equal_reset:
  14               	.LFB132:
  15               		.file 1 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c
   1:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
   2:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // ................................................................... Mod Masks
   3:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
   4:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // tap dance persistant mods, see process_record_user()
   5:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // keyboard_report->mods (?) appears to be cleared by tap dance
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t mods = 0;
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
   8:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_mods(keyrecord_t *record, uint16_t keycode)
   9:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  10:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) { mods |= MOD_BIT(keycode); }
  11:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else                       { mods &= ~(MOD_BIT(keycode)); }
  12:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  13:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  14:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // (un)register modifiers
  15:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void modifier(void (*f)(uint8_t))
  16:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  17:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LCTL)) { f(KC_LCTL); }
  18:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LGUI)) { f(KC_LGUI); }
  19:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LALT)) { f(KC_LALT); }
  20:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LSFT)) { f(KC_LSFT); }
  21:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_RSFT)) { f(KC_RSFT); }  // note: qmk macros all use left modifiers
  22:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  23:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  24:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // .................................................................. Key event
  25:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  26:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** int8_t key_event(keyrecord_t *record, int8_t state)
  27:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  28:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) { return state; }
  29:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   return 0;
  30:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  31:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  32:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // .......................................................... Keycode Primitives
  33:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  34:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // register shift keycode
  35:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void register_shift(uint16_t keycode)
  36:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  37:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code(KC_LSFT);
  38:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code(keycode);
  39:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  40:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  41:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // unregister shift keycode
  42:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void unregister_shift(uint16_t keycode)
  43:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  44:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(keycode);
  45:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_LSFT);
  46:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  47:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  48:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // register simple key press
  49:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_key(uint16_t keycode)
  50:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  51:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code  (keycode);
  52:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(keycode);
  53:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  54:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  55:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_shift(uint16_t keycode)
  56:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  57:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code  (KC_LSFT);
  58:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_key        (keycode);
  59:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_LSFT);
  60:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  61:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  62:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define SHIFT   1
  63:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define NOSHIFT 0
  64:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  65:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_mod(uint16_t mod, uint16_t keycode)
  66:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  67:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   switch (mod) {
  68:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case NOSHIFT:
  69:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_key(keycode);
  70:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     break;
  71:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case SHIFT:
  72:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_shift(keycode);
  73:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     break;
  74:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   default:
  75:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     register_code  (mod);
  76:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_key        (keycode);
  77:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     unregister_code(mod);
  78:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
  79:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  80:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  81:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint16_t key_timer = 0;
  82:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  83:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // key press for thumb_roll() and lt_shift() macros
  84:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** bool key_press(uint8_t shift, uint16_t keycode)
  85:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  86:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (keycode) {
  87:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (timer_elapsed(key_timer) < TAPPING_TERM) {
  88:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       tap_mod(shift, keycode);
  89:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       return true;
  90:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
  91:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
  92:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   return false;
  93:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  94:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
  95:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // ALT_T, CTL_T, GUI_T, SFT_T for shifted keycodes
  96:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void mt_shift(keyrecord_t *record, uint16_t modifier, uint16_t modifier2, uint16_t keycode)
  97:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  98:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
  99:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = timer_read();
 100:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     register_code(modifier);
 101:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (modifier2) { register_code(modifier2); }
 102:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 103:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else {
 104:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     unregister_code(modifier);
 105:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (modifier2) { unregister_code(modifier2); }
 106:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (timer_elapsed(key_timer) < TAPPING_TERM) { tap_shift(keycode); }
 107:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 108:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 109:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 110:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 111:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // remap keycodes to other keycode values via shift for base and caps layers, see process_record_us
 112:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** bool map_shift(keyrecord_t *record, uint16_t shift_key, uint8_t shift, uint16_t keycode)
 113:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 114:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   // if modifier and only shift modifier and base layer..
 115:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods && ((mods & MOD_BIT(shift_key)) == mods) && (biton32(layer_state) == _BASE || biton32(la
 116:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (record->event.pressed) {
 117:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (!shift) { unregister_code(KC_LSFT); }  // in event of unshifted keycode
 118:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       register_code(keycode);
 119:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 120:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else {
 121:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       unregister_code(keycode);
 122:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (!shift) { register_code(KC_LSFT); }    // restore SFT_T
 123:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 124:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return true;                                 // remap complete, see process_record_user()
 125:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 126:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   return false;
 127:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 128:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 129:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // .................................................... Triple Dance Shift/Layer
 130:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 131:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t dt_shift = 0;
 132:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 133:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void double_shift(uint16_t keycode, uint8_t layer)
 134:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 135:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_key (keycode);
 136:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (DT_SHIFT) {
 137:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     // set_oneshot_mods(MOD_LSFT);
 138:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     // layer_on(layer);
 139:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on         (_SHIFT);
 140:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     set_oneshot_layer(_SHIFT, ONESHOT_START);
 141:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     dt_shift = 1;
 142:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 143:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else { layer_on(layer); }
 144:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 145:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 146:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t tap_rule = 0;                        // down_rule persistance, see process_record_us
 147:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 148:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // tap dance LT (LAYER, KEY) emulation with <KEY><DOWN> -> <KEY><SHIFT> and auto-repeat extensions!
 149:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_lt(qk_tap_dance_state_t *state, uint16_t keycode, uint8_t triple, uint8_t layer, uint8_t r
 150:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 151:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 152:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 2) {
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_code(keycode); } // double tap down -> keycode...
 154:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == triple) {              // triple tap -> double keycode + shift
 155:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       tap_key     (keycode);
 156:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       double_shift(keycode, layer);
 157:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 158:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_key(keycode); }
 159:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 160:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else if (state->count > 1) {
 161:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->count == triple - 1) {
 162:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (rule == 2) { tap_key(keycode); }          // (.) double tap -> keycode keycode + shift
 163:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       double_shift(keycode, layer);
 164:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 165:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     // just works out that existing function call can apply rule . space space -> . enter + shift
 166:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (rule == 2) { double_shift(altcode ? altcode : keycode, layer); } // (.) double tap -> 
 167:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else                { double_shift(keycode, layer); }                     // tap down or double
 168:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 169:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else if (state->pressed) { layer_on(layer); }     // down -> shift
 170:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else switch (rule) {                              // see process_record_user()
 171:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case 0:
 172:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     modifier(register_code);
 173:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_key (keycode);
 174:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     modifier(unregister_code);
 175:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return;
 176:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case 1:
 177:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (altcode) { tap_key (altcode); }
 178:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return;
 179:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case 2:
 180:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     double_shift(keycode, layer);
 181:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 183:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 184:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_reset(uint16_t keycode, uint8_t layer)
 185:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 186:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(keycode);
 187:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift ? clear_oneshot_layer_state(ONESHOT_PRESSED) : layer_off(layer);
 188:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift = 0;
 189:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_rule = 0;                                     // clear retained down_rule, see process_record
 190:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 191:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 192:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define REPEATING    0
 193:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define TRIPLE       3
 194:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 195:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // augment pseudo LT (_RSHIFT, KC_ENT) handling below for rapid <ENTER><SHIFT> sequences
 196:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void enter(qk_tap_dance_state_t *state, void *user_data)
 197:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 198:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_lt(state, KC_ENT, TRIPLE, _RSHIFT, tap_rule, 0);  // triple tap -> double enter + shift, down
 199:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 200:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 201:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void enter_reset(qk_tap_dance_state_t *state, void *user_data)
 202:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 203:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_reset(KC_ENT, _RSHIFT);
 204:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 205:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 206:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // augment pseudo LT (_LSHIFT, KC_SPC) handling below for rapid <SPACE><SHIFT> sequences
 207:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void space(qk_tap_dance_state_t *state, void *user_data)
 208:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 209:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_lt(state, KC_SPC, REPEATING, _RSHIFT, tap_rule, KC_ENT); // triple tap down -> space...
 210:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 211:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 212:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void space_reset(qk_tap_dance_state_t *state, void *user_data)
 213:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 214:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_reset(KC_SPC, _RSHIFT);
 215:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 216:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 217:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // ......................................................... Triple Dance Insert
 218:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 219:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifdef HASKELL
 220:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void double_max(uint8_t count, uint8_t shift, uint16_t keycode)
 221:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 222:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (shift) {
 223:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_shift(keycode);
 224:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (count > 1) { tap_shift(keycode); }
 225:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 226:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else {
 227:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_key(keycode);
 228:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (count > 1) { tap_key(keycode); }
 229:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 230:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 231:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 232:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void colon(qk_tap_dance_state_t *state, void *user_data)
 233:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 234:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 235:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 2) {
 236:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_SCLN); }
 237:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" :: "); }
 238:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_SCLN); }
 239:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 240:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else { state->pressed ? register_shift(KC_SCLN) : double_max(state->count, SHIFT, KC_SCLN); }
 241:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 242:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 243:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 244:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void colon_reset(qk_tap_dance_state_t *state, void *user_data)
 245:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 246:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_SCLN);
 247:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 248:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 249:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifndef EQL_LT
 250:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define EQL_LT _EDIT
 251:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 252:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 253:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void equal(qk_tap_dance_state_t *state, void *user_data)
 254:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 255:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 256:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 2) {
 257:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_code(KC_EQL); }
 258:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" /= "); }
 259:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_key(KC_EQL); }
 260:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 261:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else { state->pressed ? layer_on(EQL_LT) : double_max(state->count, NOSHIFT, KC_EQL); }
 262:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 263:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 264:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 265:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void equal_reset(qk_tap_dance_state_t *state, void *user_data)
 266:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  16               		.loc 1 266 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 267:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_EQL);
  23               		.loc 1 267 0
  24 0000 8EE2      		ldi r24,lo8(46)
  25               	.LVL1:
  26 0002 0E94 0000 		call unregister_code
  27               	.LVL2:
 268:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   layer_off(EQL_LT);
  28               		.loc 1 268 0
  29 0006 89E0      		ldi r24,lo8(9)
  30 0008 0C94 0000 		jmp layer_off
  31               	.LVL3:
  32               		.cfi_endproc
  33               	.LFE132:
  35               		.section	.text.private,"ax",@progbits
  36               	.global	private
  38               	private:
  39               	.LFB142:
 269:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 270:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 271:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void lesser(qk_tap_dance_state_t *state, void *user_data)
 272:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 273:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 274:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 2) {
 275:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_COMM); }
 276:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" <- "); }
 277:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_COMM); }
 278:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 279:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else { state->pressed ? register_code(KC_LCTL) : double_max(state->count, SHIFT, KC_COMM); }
 280:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 281:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 282:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 283:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void lesser_reset(qk_tap_dance_state_t *state, void *user_data)
 284:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 285:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_COMM);
 286:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_LCTL);
 287:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 288:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 289:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void greater(qk_tap_dance_state_t *state, void *user_data)
 290:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 291:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 292:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 2) {
 293:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_DOT); }
 294:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" -> "); }
 295:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_DOT); }
 296:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 297:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else { state->pressed ? register_code(KC_LSFT) : double_max(state->count, SHIFT, KC_DOT); }
 298:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 299:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 300:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 301:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void greater_reset(qk_tap_dance_state_t *state, void *user_data)
 302:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 303:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_DOT);
 304:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 305:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 306:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 307:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tilde(qk_tap_dance_state_t *state, void *user_data)
 308:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 309:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 310:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) {
 311:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_GRV); }
 312:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 2) { send_string("~/"); }
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_GRV); }
 314:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 315:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else { state->pressed ? register_shift(KC_GRV) : tap_shift(KC_GRV); }
 316:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 317:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 318:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 319:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tilde_reset(qk_tap_dance_state_t *state, void *user_data)
 320:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 321:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_GRV);
 322:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 323:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 324:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // ............................................................ Tap Dance Insert
 325:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 326:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void asterisk(qk_tap_dance_state_t *state, void *user_data)
 327:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) { tap_key(KC_DOT); }
 329:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_shift(KC_8);
 330:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 331:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 332:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 333:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void comma(qk_tap_dance_state_t *state, void *user_data)
 334:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 335:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_key(KC_COMM);
 336:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) { tap_key(KC_SPC); }
 337:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 338:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 339:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 340:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void dot(qk_tap_dance_state_t *state, void *user_data)
 341:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 342:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   state->count > 1 ? tap_shift(KC_COLN) : tap_key(KC_DOT);
 343:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 344:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 345:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 346:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // compile time macro string, see functions/hardware planck script
 347:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void private(qk_tap_dance_state_t *state, void *user_data)
 348:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  40               		.loc 1 348 0
  41               		.cfi_startproc
  42               	.LVL4:
  43 0000 CF93      		push r28
  44               	.LCFI0:
  45               		.cfi_def_cfa_offset 3
  46               		.cfi_offset 28, -2
  47 0002 DF93      		push r29
  48               	.LCFI1:
  49               		.cfi_def_cfa_offset 4
  50               		.cfi_offset 29, -3
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 2 */
  54               	.L__stack_usage = 2
  55 0004 EC01      		movw r28,r24
 349:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifdef PRIVATE_STRING
 350:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) {
  56               		.loc 1 350 0
  57 0006 8881      		ld r24,Y
  58               	.LVL5:
  59 0008 8230      		cpi r24,lo8(2)
  60 000a 00F0      		brlo .L3
  61               		.file 2 "keyboards/splitography/keymaps/beaklti/private_string.h"
   1:keyboards/splitography/keymaps/beaklti/private_string.h **** SEND_STRING("the keys of enoch");
  62               		.loc 2 1 0
  63 000c 80E0      		ldi r24,lo8(__c.5777)
  64 000e 90E0      		ldi r25,hi8(__c.5777)
  65 0010 0E94 0000 		call send_string_P
  66               	.LVL6:
  67               	.L3:
 351:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #include "private_string.h"
 352:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 353:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 354:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
  68               		.loc 1 354 0
  69 0014 CE01      		movw r24,r28
  70               	/* epilogue start */
 355:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  71               		.loc 1 355 0
  72 0016 DF91      		pop r29
  73 0018 CF91      		pop r28
  74               	.LVL7:
 354:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
  75               		.loc 1 354 0
  76 001a 0C94 0000 		jmp reset_tap_dance
  77               	.LVL8:
  78               		.cfi_endproc
  79               	.LFE142:
  81               		.section	.text.send,"ax",@progbits
  82               	.global	send
  84               	send:
  85               	.LFB143:
 356:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 357:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // config.h defined string
 358:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void send(qk_tap_dance_state_t *state, void *user_data)
 359:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
  86               		.loc 1 359 0
  87               		.cfi_startproc
  88               	.LVL9:
  89 0000 CF93      		push r28
  90               	.LCFI2:
  91               		.cfi_def_cfa_offset 3
  92               		.cfi_offset 28, -2
  93 0002 DF93      		push r29
  94               	.LCFI3:
  95               		.cfi_def_cfa_offset 4
  96               		.cfi_offset 29, -3
  97               	/* prologue: function */
  98               	/* frame size = 0 */
  99               	/* stack size = 2 */
 100               	.L__stack_usage = 2
 101 0004 EC01      		movw r28,r24
 360:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) { SEND_STRING(PUBLIC_STRING); }
 102               		.loc 1 360 0
 103 0006 8881      		ld r24,Y
 104               	.LVL10:
 105 0008 8230      		cpi r24,lo8(2)
 106 000a 00F0      		brlo .L5
 107               		.loc 1 360 0 is_stmt 0 discriminator 1
 108 000c 80E0      		ldi r24,lo8(__c.5783)
 109 000e 90E0      		ldi r25,hi8(__c.5783)
 110 0010 0E94 0000 		call send_string_P
 111               	.LVL11:
 112               	.L5:
 361:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 113               		.loc 1 361 0 is_stmt 1
 114 0014 CE01      		movw r24,r28
 115               	/* epilogue start */
 362:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 116               		.loc 1 362 0
 117 0016 DF91      		pop r29
 118 0018 CF91      		pop r28
 119               	.LVL12:
 361:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 120               		.loc 1 361 0
 121 001a 0C94 0000 		jmp reset_tap_dance
 122               	.LVL13:
 123               		.cfi_endproc
 124               	.LFE143:
 126               		.section	.text.tap_mods,"ax",@progbits
 127               	.global	tap_mods
 129               	tap_mods:
 130               	.LFB110:
   9:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) { mods |= MOD_BIT(keycode); }
 131               		.loc 1 9 0
 132               		.cfi_startproc
 133               	.LVL14:
 134               	/* prologue: function */
 135               	/* frame size = 0 */
 136               	/* stack size = 0 */
 137               	.L__stack_usage = 0
 138 0000 6770      		andi r22,7
 139 0002 7727      		clr r23
 140               	.LVL15:
 141 0004 21E0      		ldi r18,lo8(1)
 142 0006 30E0      		ldi r19,0
 143 0008 00C0      		rjmp 2f
 144               		1:
 145 000a 220F      		lsl r18
 146               		2:
 147 000c 6A95      		dec r22
 148 000e 02F4      		brpl 1b
 149 0010 4091 0000 		lds r20,mods
  10:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else                       { mods &= ~(MOD_BIT(keycode)); }
 150               		.loc 1 10 0
 151 0014 FC01      		movw r30,r24
 152 0016 8281      		ldd r24,Z+2
 153               	.LVL16:
 154 0018 8823      		tst r24
 155 001a 01F0      		breq .L7
  10:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else                       { mods &= ~(MOD_BIT(keycode)); }
 156               		.loc 1 10 0 is_stmt 0 discriminator 1
 157 001c 242B      		or r18,r20
 158               	.L9:
  11:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 159               		.loc 1 11 0 is_stmt 1
 160 001e 2093 0000 		sts mods,r18
 161               	/* epilogue start */
  12:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 162               		.loc 1 12 0
 163 0022 0895      		ret
 164               	.L7:
  11:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 165               		.loc 1 11 0
 166 0024 2095      		com r18
 167 0026 2423      		and r18,r20
 168 0028 00C0      		rjmp .L9
 169               		.cfi_endproc
 170               	.LFE110:
 172               		.section	.text.modifier,"ax",@progbits
 173               	.global	modifier
 175               	modifier:
 176               	.LFB111:
  16:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LCTL)) { f(KC_LCTL); }
 177               		.loc 1 16 0
 178               		.cfi_startproc
 179               	.LVL17:
 180 0000 CF93      		push r28
 181               	.LCFI4:
 182               		.cfi_def_cfa_offset 3
 183               		.cfi_offset 28, -2
 184 0002 DF93      		push r29
 185               	.LCFI5:
 186               		.cfi_def_cfa_offset 4
 187               		.cfi_offset 29, -3
 188               	/* prologue: function */
 189               	/* frame size = 0 */
 190               	/* stack size = 2 */
 191               	.L__stack_usage = 2
 192 0004 EC01      		movw r28,r24
  17:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LGUI)) { f(KC_LGUI); }
 193               		.loc 1 17 0
 194 0006 8091 0000 		lds r24,mods
 195               	.LVL18:
 196 000a 80FF      		sbrs r24,0
 197 000c 00C0      		rjmp .L11
  17:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LGUI)) { f(KC_LGUI); }
 198               		.loc 1 17 0 is_stmt 0 discriminator 1
 199 000e 80EE      		ldi r24,lo8(-32)
 200 0010 FE01      		movw r30,r28
 201 0012 0995      		icall
 202               	.LVL19:
 203               	.L11:
  18:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LALT)) { f(KC_LALT); }
 204               		.loc 1 18 0 is_stmt 1
 205 0014 8091 0000 		lds r24,mods
 206 0018 83FF      		sbrs r24,3
 207 001a 00C0      		rjmp .L12
  18:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LALT)) { f(KC_LALT); }
 208               		.loc 1 18 0 is_stmt 0 discriminator 1
 209 001c 83EE      		ldi r24,lo8(-29)
 210 001e FE01      		movw r30,r28
 211 0020 0995      		icall
 212               	.LVL20:
 213               	.L12:
  19:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LSFT)) { f(KC_LSFT); }
 214               		.loc 1 19 0 is_stmt 1
 215 0022 8091 0000 		lds r24,mods
 216 0026 82FF      		sbrs r24,2
 217 0028 00C0      		rjmp .L13
  19:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_LSFT)) { f(KC_LSFT); }
 218               		.loc 1 19 0 is_stmt 0 discriminator 1
 219 002a 82EE      		ldi r24,lo8(-30)
 220 002c FE01      		movw r30,r28
 221 002e 0995      		icall
 222               	.LVL21:
 223               	.L13:
  20:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_RSFT)) { f(KC_RSFT); }  // note: qmk macros all use left modifiers
 224               		.loc 1 20 0 is_stmt 1
 225 0030 8091 0000 		lds r24,mods
 226 0034 81FF      		sbrs r24,1
 227 0036 00C0      		rjmp .L14
  20:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (mods & MOD_BIT(KC_RSFT)) { f(KC_RSFT); }  // note: qmk macros all use left modifiers
 228               		.loc 1 20 0 is_stmt 0 discriminator 1
 229 0038 81EE      		ldi r24,lo8(-31)
 230 003a FE01      		movw r30,r28
 231 003c 0995      		icall
 232               	.LVL22:
 233               	.L14:
  21:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 234               		.loc 1 21 0 is_stmt 1
 235 003e 8091 0000 		lds r24,mods
 236 0042 85FF      		sbrs r24,5
 237 0044 00C0      		rjmp .L10
  21:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 238               		.loc 1 21 0 is_stmt 0 discriminator 1
 239 0046 85EE      		ldi r24,lo8(-27)
 240 0048 FE01      		movw r30,r28
 241               	/* epilogue start */
  22:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 242               		.loc 1 22 0 is_stmt 1 discriminator 1
 243 004a DF91      		pop r29
 244 004c CF91      		pop r28
 245               	.LVL23:
  21:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 246               		.loc 1 21 0 discriminator 1
 247 004e 0994      		ijmp
 248               	.LVL24:
 249               	.L10:
 250               	/* epilogue start */
  22:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 251               		.loc 1 22 0
 252 0050 DF91      		pop r29
 253 0052 CF91      		pop r28
 254               	.LVL25:
 255 0054 0895      		ret
 256               		.cfi_endproc
 257               	.LFE111:
 259               		.section	.text.key_event,"ax",@progbits
 260               	.global	key_event
 262               	key_event:
 263               	.LFB112:
  27:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) { return state; }
 264               		.loc 1 27 0
 265               		.cfi_startproc
 266               	.LVL26:
 267               	/* prologue: function */
 268               	/* frame size = 0 */
 269               	/* stack size = 0 */
 270               	.L__stack_usage = 0
  28:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   return 0;
 271               		.loc 1 28 0
 272 0000 FC01      		movw r30,r24
 273 0002 8281      		ldd r24,Z+2
 274               	.LVL27:
 275 0004 8111      		cpse r24,__zero_reg__
 276 0006 00C0      		rjmp .L29
  29:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 277               		.loc 1 29 0
 278 0008 60E0      		ldi r22,0
 279               	.LVL28:
 280               	.L29:
  30:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 281               		.loc 1 30 0
 282 000a 862F      		mov r24,r22
 283               	/* epilogue start */
 284 000c 0895      		ret
 285               		.cfi_endproc
 286               	.LFE112:
 288               		.section	.text.register_shift,"ax",@progbits
 289               	.global	register_shift
 291               	register_shift:
 292               	.LFB113:
  36:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code(KC_LSFT);
 293               		.loc 1 36 0
 294               		.cfi_startproc
 295               	.LVL29:
 296 0000 CF93      		push r28
 297               	.LCFI6:
 298               		.cfi_def_cfa_offset 3
 299               		.cfi_offset 28, -2
 300               	/* prologue: function */
 301               	/* frame size = 0 */
 302               	/* stack size = 1 */
 303               	.L__stack_usage = 1
 304 0002 C82F      		mov r28,r24
  37:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code(keycode);
 305               		.loc 1 37 0
 306 0004 81EE      		ldi r24,lo8(-31)
 307               	.LVL30:
 308 0006 0E94 0000 		call register_code
 309               	.LVL31:
  38:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 310               		.loc 1 38 0
 311 000a 8C2F      		mov r24,r28
 312               	/* epilogue start */
  39:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 313               		.loc 1 39 0
 314 000c CF91      		pop r28
  38:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 315               		.loc 1 38 0
 316 000e 0C94 0000 		jmp register_code
 317               	.LVL32:
 318               		.cfi_endproc
 319               	.LFE113:
 321               		.section	.text.unregister_shift,"ax",@progbits
 322               	.global	unregister_shift
 324               	unregister_shift:
 325               	.LFB114:
  43:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(keycode);
 326               		.loc 1 43 0
 327               		.cfi_startproc
 328               	.LVL33:
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
  44:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_LSFT);
 333               		.loc 1 44 0
 334 0000 0E94 0000 		call unregister_code
 335               	.LVL34:
  45:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 336               		.loc 1 45 0
 337 0004 81EE      		ldi r24,lo8(-31)
 338 0006 0C94 0000 		jmp unregister_code
 339               	.LVL35:
 340               		.cfi_endproc
 341               	.LFE114:
 343               		.section	.text.colon_reset,"ax",@progbits
 344               	.global	colon_reset
 346               	colon_reset:
 347               	.LFB130:
 245:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_SCLN);
 348               		.loc 1 245 0
 349               		.cfi_startproc
 350               	.LVL36:
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 246:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 355               		.loc 1 246 0
 356 0000 83E3      		ldi r24,lo8(51)
 357 0002 90E0      		ldi r25,0
 358               	.LVL37:
 359 0004 0C94 0000 		jmp unregister_shift
 360               	.LVL38:
 361               		.cfi_endproc
 362               	.LFE130:
 364               		.section	.text.lesser_reset,"ax",@progbits
 365               	.global	lesser_reset
 367               	lesser_reset:
 368               	.LFB134:
 284:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_COMM);
 369               		.loc 1 284 0
 370               		.cfi_startproc
 371               	.LVL39:
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 285:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_LCTL);
 376               		.loc 1 285 0
 377 0000 86E3      		ldi r24,lo8(54)
 378 0002 90E0      		ldi r25,0
 379               	.LVL40:
 380 0004 0E94 0000 		call unregister_shift
 381               	.LVL41:
 286:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 382               		.loc 1 286 0
 383 0008 80EE      		ldi r24,lo8(-32)
 384 000a 0C94 0000 		jmp unregister_code
 385               	.LVL42:
 386               		.cfi_endproc
 387               	.LFE134:
 389               		.section	.text.greater_reset,"ax",@progbits
 390               	.global	greater_reset
 392               	greater_reset:
 393               	.LFB136:
 302:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_DOT);
 394               		.loc 1 302 0
 395               		.cfi_startproc
 396               	.LVL43:
 397               	/* prologue: function */
 398               	/* frame size = 0 */
 399               	/* stack size = 0 */
 400               	.L__stack_usage = 0
 303:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 401               		.loc 1 303 0
 402 0000 87E3      		ldi r24,lo8(55)
 403 0002 90E0      		ldi r25,0
 404               	.LVL44:
 405 0004 0C94 0000 		jmp unregister_shift
 406               	.LVL45:
 407               		.cfi_endproc
 408               	.LFE136:
 410               		.section	.text.tilde_reset,"ax",@progbits
 411               	.global	tilde_reset
 413               	tilde_reset:
 414               	.LFB138:
 320:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_shift(KC_GRV);
 415               		.loc 1 320 0
 416               		.cfi_startproc
 417               	.LVL46:
 418               	/* prologue: function */
 419               	/* frame size = 0 */
 420               	/* stack size = 0 */
 421               	.L__stack_usage = 0
 321:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 422               		.loc 1 321 0
 423 0000 85E3      		ldi r24,lo8(53)
 424 0002 90E0      		ldi r25,0
 425               	.LVL47:
 426 0004 0C94 0000 		jmp unregister_shift
 427               	.LVL48:
 428               		.cfi_endproc
 429               	.LFE138:
 431               		.section	.text.tap_key,"ax",@progbits
 432               	.global	tap_key
 434               	tap_key:
 435               	.LFB115:
  50:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code  (keycode);
 436               		.loc 1 50 0
 437               		.cfi_startproc
 438               	.LVL49:
 439 0000 CF93      		push r28
 440               	.LCFI7:
 441               		.cfi_def_cfa_offset 3
 442               		.cfi_offset 28, -2
 443               	/* prologue: function */
 444               	/* frame size = 0 */
 445               	/* stack size = 1 */
 446               	.L__stack_usage = 1
 447 0002 C82F      		mov r28,r24
  51:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(keycode);
 448               		.loc 1 51 0
 449 0004 0E94 0000 		call register_code
 450               	.LVL50:
  52:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 451               		.loc 1 52 0
 452 0008 8C2F      		mov r24,r28
 453               	/* epilogue start */
  53:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 454               		.loc 1 53 0
 455 000a CF91      		pop r28
  52:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 456               		.loc 1 52 0
 457 000c 0C94 0000 		jmp unregister_code
 458               	.LVL51:
 459               		.cfi_endproc
 460               	.LFE115:
 462               		.section	.text.comma,"ax",@progbits
 463               	.global	comma
 465               	comma:
 466               	.LFB140:
 334:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_key(KC_COMM);
 467               		.loc 1 334 0
 468               		.cfi_startproc
 469               	.LVL52:
 470 0000 CF93      		push r28
 471               	.LCFI8:
 472               		.cfi_def_cfa_offset 3
 473               		.cfi_offset 28, -2
 474 0002 DF93      		push r29
 475               	.LCFI9:
 476               		.cfi_def_cfa_offset 4
 477               		.cfi_offset 29, -3
 478               	/* prologue: function */
 479               	/* frame size = 0 */
 480               	/* stack size = 2 */
 481               	.L__stack_usage = 2
 482 0004 EC01      		movw r28,r24
 335:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) { tap_key(KC_SPC); }
 483               		.loc 1 335 0
 484 0006 86E3      		ldi r24,lo8(54)
 485 0008 90E0      		ldi r25,0
 486               	.LVL53:
 487 000a 0E94 0000 		call tap_key
 488               	.LVL54:
 336:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 489               		.loc 1 336 0
 490 000e 8881      		ld r24,Y
 491 0010 8230      		cpi r24,lo8(2)
 492 0012 00F0      		brlo .L38
 336:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 493               		.loc 1 336 0 is_stmt 0 discriminator 1
 494 0014 8CE2      		ldi r24,lo8(44)
 495 0016 90E0      		ldi r25,0
 496 0018 0E94 0000 		call tap_key
 497               	.LVL55:
 498               	.L38:
 337:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 499               		.loc 1 337 0 is_stmt 1
 500 001c CE01      		movw r24,r28
 501               	/* epilogue start */
 338:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 502               		.loc 1 338 0
 503 001e DF91      		pop r29
 504 0020 CF91      		pop r28
 505               	.LVL56:
 337:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 506               		.loc 1 337 0
 507 0022 0C94 0000 		jmp reset_tap_dance
 508               	.LVL57:
 509               		.cfi_endproc
 510               	.LFE140:
 512               		.section	.text.tap_shift,"ax",@progbits
 513               	.global	tap_shift
 515               	tap_shift:
 516               	.LFB116:
  56:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   register_code  (KC_LSFT);
 517               		.loc 1 56 0
 518               		.cfi_startproc
 519               	.LVL58:
 520 0000 CF93      		push r28
 521               	.LCFI10:
 522               		.cfi_def_cfa_offset 3
 523               		.cfi_offset 28, -2
 524 0002 DF93      		push r29
 525               	.LCFI11:
 526               		.cfi_def_cfa_offset 4
 527               		.cfi_offset 29, -3
 528               	/* prologue: function */
 529               	/* frame size = 0 */
 530               	/* stack size = 2 */
 531               	.L__stack_usage = 2
 532 0004 EC01      		movw r28,r24
  57:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_key        (keycode);
 533               		.loc 1 57 0
 534 0006 81EE      		ldi r24,lo8(-31)
 535               	.LVL59:
 536 0008 0E94 0000 		call register_code
 537               	.LVL60:
  58:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(KC_LSFT);
 538               		.loc 1 58 0
 539 000c CE01      		movw r24,r28
 540 000e 0E94 0000 		call tap_key
 541               	.LVL61:
  59:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 542               		.loc 1 59 0
 543 0012 81EE      		ldi r24,lo8(-31)
 544               	/* epilogue start */
  60:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 545               		.loc 1 60 0
 546 0014 DF91      		pop r29
 547 0016 CF91      		pop r28
 548               	.LVL62:
  59:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 549               		.loc 1 59 0
 550 0018 0C94 0000 		jmp unregister_code
 551               	.LVL63:
 552               		.cfi_endproc
 553               	.LFE116:
 555               		.section	.rodata.tilde.str1.1,"aMS",@progbits,1
 556               	.LC0:
 557 0000 7E2F 00   		.string	"~/"
 558               		.section	.text.tilde,"ax",@progbits
 559               	.global	tilde
 561               	tilde:
 562               	.LFB137:
 308:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 563               		.loc 1 308 0
 564               		.cfi_startproc
 565               	.LVL64:
 566 0000 1F93      		push r17
 567               	.LCFI12:
 568               		.cfi_def_cfa_offset 3
 569               		.cfi_offset 17, -2
 570 0002 CF93      		push r28
 571               	.LCFI13:
 572               		.cfi_def_cfa_offset 4
 573               		.cfi_offset 28, -3
 574 0004 DF93      		push r29
 575               	.LCFI14:
 576               		.cfi_def_cfa_offset 5
 577               		.cfi_offset 29, -4
 578               	/* prologue: function */
 579               	/* frame size = 0 */
 580               	/* stack size = 3 */
 581               	.L__stack_usage = 3
 582 0006 EC01      		movw r28,r24
 310:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_GRV); }
 583               		.loc 1 310 0
 584 0008 9881      		ld r25,Y
 585 000a 8F81      		ldd r24,Y+7
 586               	.LVL65:
 587 000c 9230      		cpi r25,lo8(2)
 588 000e 00F0      		brlo .L41
 311:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 2) { send_string("~/"); }
 589               		.loc 1 311 0
 590 0010 8823      		tst r24
 591 0012 01F0      		breq .L42
 592               	.L46:
 311:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 2) { send_string("~/"); }
 593               		.loc 1 311 0 is_stmt 0 discriminator 1
 594 0014 85E3      		ldi r24,lo8(53)
 595 0016 90E0      		ldi r25,0
 596 0018 0E94 0000 		call register_shift
 597               	.LVL66:
 598               	.L43:
 316:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 599               		.loc 1 316 0 is_stmt 1
 600 001c CE01      		movw r24,r28
 601               	/* epilogue start */
 317:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 602               		.loc 1 317 0
 603 001e DF91      		pop r29
 604 0020 CF91      		pop r28
 605               	.LVL67:
 606 0022 1F91      		pop r17
 316:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 607               		.loc 1 316 0
 608 0024 0C94 0000 		jmp reset_tap_dance
 609               	.LVL68:
 610               	.L42:
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 611               		.loc 1 313 0
 612 0028 10E0      		ldi r17,0
 312:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_GRV); }
 613               		.loc 1 312 0
 614 002a 9230      		cpi r25,lo8(2)
 615 002c 01F4      		brne .L44
 312:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_GRV); }
 616               		.loc 1 312 0 is_stmt 0 discriminator 1
 617 002e 80E0      		ldi r24,lo8(.LC0)
 618 0030 90E0      		ldi r25,hi8(.LC0)
 619 0032 0E94 0000 		call send_string
 620               	.LVL69:
 621 0036 00C0      		rjmp .L43
 622               	.LVL70:
 623               	.L45:
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 624               		.loc 1 313 0 is_stmt 1 discriminator 3
 625 0038 85E3      		ldi r24,lo8(53)
 626 003a 90E0      		ldi r25,0
 627 003c 0E94 0000 		call tap_shift
 628               	.LVL71:
 629 0040 1F5F      		subi r17,lo8(-(1))
 630               	.LVL72:
 631               	.L44:
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 632               		.loc 1 313 0 is_stmt 0 discriminator 1
 633 0042 8881      		ld r24,Y
 634 0044 1817      		cp r17,r24
 635 0046 00F0      		brlo .L45
 636 0048 00C0      		rjmp .L43
 637               	.LVL73:
 638               	.L41:
 315:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 639               		.loc 1 315 0 is_stmt 1
 640 004a 8111      		cpse r24,__zero_reg__
 641 004c 00C0      		rjmp .L46
 315:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 642               		.loc 1 315 0 is_stmt 0 discriminator 2
 643 004e 85E3      		ldi r24,lo8(53)
 644 0050 90E0      		ldi r25,0
 645 0052 0E94 0000 		call tap_shift
 646               	.LVL74:
 647 0056 00C0      		rjmp .L43
 648               		.cfi_endproc
 649               	.LFE137:
 651               		.section	.text.asterisk,"ax",@progbits
 652               	.global	asterisk
 654               	asterisk:
 655               	.LFB139:
 327:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (state->count > 1) { tap_key(KC_DOT); }
 656               		.loc 1 327 0 is_stmt 1
 657               		.cfi_startproc
 658               	.LVL75:
 659 0000 CF93      		push r28
 660               	.LCFI15:
 661               		.cfi_def_cfa_offset 3
 662               		.cfi_offset 28, -2
 663 0002 DF93      		push r29
 664               	.LCFI16:
 665               		.cfi_def_cfa_offset 4
 666               		.cfi_offset 29, -3
 667               	/* prologue: function */
 668               	/* frame size = 0 */
 669               	/* stack size = 2 */
 670               	.L__stack_usage = 2
 671 0004 EC01      		movw r28,r24
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_shift(KC_8);
 672               		.loc 1 328 0
 673 0006 8881      		ld r24,Y
 674               	.LVL76:
 675 0008 8230      		cpi r24,lo8(2)
 676 000a 00F0      		brlo .L49
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_shift(KC_8);
 677               		.loc 1 328 0 is_stmt 0 discriminator 1
 678 000c 87E3      		ldi r24,lo8(55)
 679 000e 90E0      		ldi r25,0
 680 0010 0E94 0000 		call tap_key
 681               	.LVL77:
 682               	.L49:
 329:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 683               		.loc 1 329 0 is_stmt 1
 684 0014 85E2      		ldi r24,lo8(37)
 685 0016 90E0      		ldi r25,0
 686 0018 0E94 0000 		call tap_shift
 687               	.LVL78:
 330:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 688               		.loc 1 330 0
 689 001c CE01      		movw r24,r28
 690               	/* epilogue start */
 331:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 691               		.loc 1 331 0
 692 001e DF91      		pop r29
 693 0020 CF91      		pop r28
 694               	.LVL79:
 330:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 695               		.loc 1 330 0
 696 0022 0C94 0000 		jmp reset_tap_dance
 697               	.LVL80:
 698               		.cfi_endproc
 699               	.LFE139:
 701               		.section	.text.dot,"ax",@progbits
 702               	.global	dot
 704               	dot:
 705               	.LFB141:
 341:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   state->count > 1 ? tap_shift(KC_COLN) : tap_key(KC_DOT);
 706               		.loc 1 341 0
 707               		.cfi_startproc
 708               	.LVL81:
 709 0000 CF93      		push r28
 710               	.LCFI17:
 711               		.cfi_def_cfa_offset 3
 712               		.cfi_offset 28, -2
 713 0002 DF93      		push r29
 714               	.LCFI18:
 715               		.cfi_def_cfa_offset 4
 716               		.cfi_offset 29, -3
 717               	/* prologue: function */
 718               	/* frame size = 0 */
 719               	/* stack size = 2 */
 720               	.L__stack_usage = 2
 721 0004 EC01      		movw r28,r24
 342:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 722               		.loc 1 342 0
 723 0006 8881      		ld r24,Y
 724               	.LVL82:
 725 0008 8230      		cpi r24,lo8(2)
 726 000a 00F0      		brlo .L51
 342:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 727               		.loc 1 342 0 is_stmt 0 discriminator 1
 728 000c 83E3      		ldi r24,lo8(51)
 729 000e 92E0      		ldi r25,lo8(2)
 730 0010 0E94 0000 		call tap_shift
 731               	.LVL83:
 732               	.L52:
 343:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 733               		.loc 1 343 0 is_stmt 1
 734 0014 CE01      		movw r24,r28
 735               	/* epilogue start */
 344:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 736               		.loc 1 344 0
 737 0016 DF91      		pop r29
 738 0018 CF91      		pop r28
 739               	.LVL84:
 343:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 740               		.loc 1 343 0
 741 001a 0C94 0000 		jmp reset_tap_dance
 742               	.LVL85:
 743               	.L51:
 342:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 744               		.loc 1 342 0 discriminator 2
 745 001e 87E3      		ldi r24,lo8(55)
 746 0020 90E0      		ldi r25,0
 747 0022 0E94 0000 		call tap_key
 748               	.LVL86:
 749 0026 00C0      		rjmp .L52
 750               		.cfi_endproc
 751               	.LFE141:
 753               		.section	.text.tap_mod,"ax",@progbits
 754               	.global	tap_mod
 756               	tap_mod:
 757               	.LFB117:
  66:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   switch (mod) {
 758               		.loc 1 66 0
 759               		.cfi_startproc
 760               	.LVL87:
 761 0000 0F93      		push r16
 762               	.LCFI19:
 763               		.cfi_def_cfa_offset 3
 764               		.cfi_offset 16, -2
 765 0002 1F93      		push r17
 766               	.LCFI20:
 767               		.cfi_def_cfa_offset 4
 768               		.cfi_offset 17, -3
 769 0004 CF93      		push r28
 770               	.LCFI21:
 771               		.cfi_def_cfa_offset 5
 772               		.cfi_offset 28, -4
 773 0006 DF93      		push r29
 774               	.LCFI22:
 775               		.cfi_def_cfa_offset 6
 776               		.cfi_offset 29, -5
 777               	/* prologue: function */
 778               	/* frame size = 0 */
 779               	/* stack size = 4 */
 780               	.L__stack_usage = 4
 781 0008 EC01      		movw r28,r24
 782 000a 8B01      		movw r16,r22
  67:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case NOSHIFT:
 783               		.loc 1 67 0
 784 000c 0097      		sbiw r24,0
 785 000e 01F0      		breq .L55
 786 0010 8130      		cpi r24,1
 787 0012 9105      		cpc r25,__zero_reg__
 788 0014 01F0      		breq .L56
  75:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_key        (keycode);
 789               		.loc 1 75 0
 790 0016 0E94 0000 		call register_code
 791               	.LVL88:
  76:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     unregister_code(mod);
 792               		.loc 1 76 0
 793 001a C801      		movw r24,r16
 794 001c 0E94 0000 		call tap_key
 795               	.LVL89:
  77:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 796               		.loc 1 77 0
 797 0020 8C2F      		mov r24,r28
 798               	/* epilogue start */
  79:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 799               		.loc 1 79 0
 800 0022 DF91      		pop r29
 801 0024 CF91      		pop r28
 802               	.LVL90:
 803 0026 1F91      		pop r17
 804 0028 0F91      		pop r16
 805               	.LVL91:
  77:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 806               		.loc 1 77 0
 807 002a 0C94 0000 		jmp unregister_code
 808               	.LVL92:
 809               	.L55:
  69:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     break;
 810               		.loc 1 69 0
 811 002e CB01      		movw r24,r22
 812               	.LVL93:
 813               	/* epilogue start */
  79:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 814               		.loc 1 79 0
 815 0030 DF91      		pop r29
 816 0032 CF91      		pop r28
 817               	.LVL94:
 818 0034 1F91      		pop r17
 819 0036 0F91      		pop r16
 820               	.LVL95:
  69:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     break;
 821               		.loc 1 69 0
 822 0038 0C94 0000 		jmp tap_key
 823               	.LVL96:
 824               	.L56:
  72:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     break;
 825               		.loc 1 72 0
 826 003c CB01      		movw r24,r22
 827               	.LVL97:
 828               	/* epilogue start */
  79:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 829               		.loc 1 79 0
 830 003e DF91      		pop r29
 831 0040 CF91      		pop r28
 832               	.LVL98:
 833 0042 1F91      		pop r17
 834 0044 0F91      		pop r16
 835               	.LVL99:
  72:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     break;
 836               		.loc 1 72 0
 837 0046 0C94 0000 		jmp tap_shift
 838               	.LVL100:
 839               		.cfi_endproc
 840               	.LFE117:
 842               		.section	.text.key_press,"ax",@progbits
 843               	.global	key_press
 845               	key_press:
 846               	.LFB118:
  85:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (keycode) {
 847               		.loc 1 85 0
 848               		.cfi_startproc
 849               	.LVL101:
 850 0000 1F93      		push r17
 851               	.LCFI23:
 852               		.cfi_def_cfa_offset 3
 853               		.cfi_offset 17, -2
 854 0002 CF93      		push r28
 855               	.LCFI24:
 856               		.cfi_def_cfa_offset 4
 857               		.cfi_offset 28, -3
 858 0004 DF93      		push r29
 859               	.LCFI25:
 860               		.cfi_def_cfa_offset 5
 861               		.cfi_offset 29, -4
 862               	/* prologue: function */
 863               	/* frame size = 0 */
 864               	/* stack size = 3 */
 865               	.L__stack_usage = 3
 866 0006 182F      		mov r17,r24
 867 0008 EB01      		movw r28,r22
  86:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (timer_elapsed(key_timer) < TAPPING_TERM) {
 868               		.loc 1 86 0
 869 000a 2097      		sbiw r28,0
 870 000c 01F4      		brne .L59
 871               	.LVL102:
 872               	.L61:
  92:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 873               		.loc 1 92 0
 874 000e 80E0      		ldi r24,0
 875               	.L58:
 876               	/* epilogue start */
  93:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 877               		.loc 1 93 0
 878 0010 DF91      		pop r29
 879 0012 CF91      		pop r28
 880               	.LVL103:
 881 0014 1F91      		pop r17
 882               	.LVL104:
 883 0016 0895      		ret
 884               	.LVL105:
 885               	.L59:
  87:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       tap_mod(shift, keycode);
 886               		.loc 1 87 0
 887 0018 8091 0000 		lds r24,key_timer
 888 001c 9091 0000 		lds r25,key_timer+1
 889 0020 0E94 0000 		call timer_elapsed
 890               	.LVL106:
 891 0024 8A3F      		cpi r24,-6
 892 0026 9105      		cpc r25,__zero_reg__
 893 0028 00F4      		brsh .L61
  88:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       return true;
 894               		.loc 1 88 0
 895 002a BE01      		movw r22,r28
 896 002c 812F      		mov r24,r17
 897 002e 90E0      		ldi r25,0
 898 0030 0E94 0000 		call tap_mod
 899               	.LVL107:
  89:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 900               		.loc 1 89 0
 901 0034 81E0      		ldi r24,lo8(1)
 902 0036 00C0      		rjmp .L58
 903               		.cfi_endproc
 904               	.LFE118:
 906               		.section	.text.mt_shift,"ax",@progbits
 907               	.global	mt_shift
 909               	mt_shift:
 910               	.LFB119:
  97:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
 911               		.loc 1 97 0
 912               		.cfi_startproc
 913               	.LVL108:
 914 0000 EF92      		push r14
 915               	.LCFI26:
 916               		.cfi_def_cfa_offset 3
 917               		.cfi_offset 14, -2
 918 0002 FF92      		push r15
 919               	.LCFI27:
 920               		.cfi_def_cfa_offset 4
 921               		.cfi_offset 15, -3
 922 0004 1F93      		push r17
 923               	.LCFI28:
 924               		.cfi_def_cfa_offset 5
 925               		.cfi_offset 17, -4
 926 0006 CF93      		push r28
 927               	.LCFI29:
 928               		.cfi_def_cfa_offset 6
 929               		.cfi_offset 28, -5
 930 0008 DF93      		push r29
 931               	.LCFI30:
 932               		.cfi_def_cfa_offset 7
 933               		.cfi_offset 29, -6
 934               	/* prologue: function */
 935               	/* frame size = 0 */
 936               	/* stack size = 5 */
 937               	.L__stack_usage = 5
 938 000a 162F      		mov r17,r22
 939 000c EA01      		movw r28,r20
 940 000e 7901      		movw r14,r18
  98:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = timer_read();
 941               		.loc 1 98 0
 942 0010 FC01      		movw r30,r24
 943 0012 8281      		ldd r24,Z+2
 944               	.LVL109:
 945 0014 8823      		tst r24
 946 0016 01F0      		breq .L63
  99:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     register_code(modifier);
 947               		.loc 1 99 0
 948 0018 0E94 0000 		call timer_read
 949               	.LVL110:
 950 001c 9093 0000 		sts key_timer+1,r25
 951 0020 8093 0000 		sts key_timer,r24
 100:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (modifier2) { register_code(modifier2); }
 952               		.loc 1 100 0
 953 0024 812F      		mov r24,r17
 954 0026 0E94 0000 		call register_code
 955               	.LVL111:
 101:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 956               		.loc 1 101 0
 957 002a 2097      		sbiw r28,0
 958 002c 01F0      		breq .L62
 101:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 959               		.loc 1 101 0 is_stmt 0 discriminator 1
 960 002e 8C2F      		mov r24,r28
 961               	/* epilogue start */
 109:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 962               		.loc 1 109 0 is_stmt 1 discriminator 1
 963 0030 DF91      		pop r29
 964 0032 CF91      		pop r28
 965               	.LVL112:
 966 0034 1F91      		pop r17
 967 0036 FF90      		pop r15
 968 0038 EF90      		pop r14
 969               	.LVL113:
 101:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 970               		.loc 1 101 0 discriminator 1
 971 003a 0C94 0000 		jmp register_code
 972               	.LVL114:
 973               	.L63:
 104:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (modifier2) { unregister_code(modifier2); }
 974               		.loc 1 104 0
 975 003e 862F      		mov r24,r22
 976 0040 0E94 0000 		call unregister_code
 977               	.LVL115:
 105:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (timer_elapsed(key_timer) < TAPPING_TERM) { tap_shift(keycode); }
 978               		.loc 1 105 0
 979 0044 2097      		sbiw r28,0
 980 0046 01F0      		breq .L65
 105:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (timer_elapsed(key_timer) < TAPPING_TERM) { tap_shift(keycode); }
 981               		.loc 1 105 0 is_stmt 0 discriminator 1
 982 0048 8C2F      		mov r24,r28
 983 004a 0E94 0000 		call unregister_code
 984               	.LVL116:
 985               	.L65:
 106:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 986               		.loc 1 106 0 is_stmt 1
 987 004e 8091 0000 		lds r24,key_timer
 988 0052 9091 0000 		lds r25,key_timer+1
 989 0056 0E94 0000 		call timer_elapsed
 990               	.LVL117:
 991 005a 8A3F      		cpi r24,-6
 992 005c 9105      		cpc r25,__zero_reg__
 993 005e 00F4      		brsh .L66
 106:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 994               		.loc 1 106 0 is_stmt 0 discriminator 1
 995 0060 C701      		movw r24,r14
 996 0062 0E94 0000 		call tap_shift
 997               	.LVL118:
 998               	.L66:
 107:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 999               		.loc 1 107 0 is_stmt 1
 1000 0066 1092 0000 		sts key_timer+1,__zero_reg__
 1001 006a 1092 0000 		sts key_timer,__zero_reg__
 1002               	.L62:
 1003               	/* epilogue start */
 109:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1004               		.loc 1 109 0
 1005 006e DF91      		pop r29
 1006 0070 CF91      		pop r28
 1007               	.LVL119:
 1008 0072 1F91      		pop r17
 1009 0074 FF90      		pop r15
 1010 0076 EF90      		pop r14
 1011               	.LVL120:
 1012 0078 0895      		ret
 1013               		.cfi_endproc
 1014               	.LFE119:
 1016               		.section	.text.map_shift,"ax",@progbits
 1017               	.global	map_shift
 1019               	map_shift:
 1020               	.LFB120:
 113:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   // if modifier and only shift modifier and base layer..
 1021               		.loc 1 113 0
 1022               		.cfi_startproc
 1023               	.LVL121:
 1024 0000 0F93      		push r16
 1025               	.LCFI31:
 1026               		.cfi_def_cfa_offset 3
 1027               		.cfi_offset 16, -2
 1028 0002 1F93      		push r17
 1029               	.LCFI32:
 1030               		.cfi_def_cfa_offset 4
 1031               		.cfi_offset 17, -3
 1032 0004 CF93      		push r28
 1033               	.LCFI33:
 1034               		.cfi_def_cfa_offset 5
 1035               		.cfi_offset 28, -4
 1036 0006 DF93      		push r29
 1037               	.LCFI34:
 1038               		.cfi_def_cfa_offset 6
 1039               		.cfi_offset 29, -5
 1040               	/* prologue: function */
 1041               	/* frame size = 0 */
 1042               	/* stack size = 4 */
 1043               	.L__stack_usage = 4
 1044 0008 EC01      		movw r28,r24
 1045 000a 142F      		mov r17,r20
 1046 000c 022F      		mov r16,r18
 115:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (record->event.pressed) {
 1047               		.loc 1 115 0
 1048 000e 2091 0000 		lds r18,mods
 1049               	.LVL122:
 1050 0012 2111      		cpse r18,__zero_reg__
 1051 0014 00C0      		rjmp .L74
 1052               	.LVL123:
 1053               	.L76:
 126:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1054               		.loc 1 126 0
 1055 0016 C0E0      		ldi r28,0
 1056               	.LVL124:
 1057               	.L73:
 127:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1058               		.loc 1 127 0
 1059 0018 8C2F      		mov r24,r28
 1060               	/* epilogue start */
 1061 001a DF91      		pop r29
 1062 001c CF91      		pop r28
 1063 001e 1F91      		pop r17
 1064               	.LVL125:
 1065 0020 0F91      		pop r16
 1066 0022 0895      		ret
 1067               	.LVL126:
 1068               	.L74:
 115:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (record->event.pressed) {
 1069               		.loc 1 115 0 discriminator 1
 1070 0024 30E0      		ldi r19,0
 1071 0026 6770      		andi r22,7
 1072 0028 7727      		clr r23
 1073               	.LVL127:
 1074 002a 81E0      		ldi r24,lo8(1)
 1075 002c 90E0      		ldi r25,0
 1076               	.LVL128:
 1077 002e 00C0      		rjmp 2f
 1078               		1:
 1079 0030 880F      		lsl r24
 1080 0032 991F      		rol r25
 1081               		2:
 1082 0034 6A95      		dec r22
 1083 0036 02F4      		brpl 1b
 1084 0038 8223      		and r24,r18
 1085 003a 9323      		and r25,r19
 1086 003c 2817      		cp r18,r24
 1087 003e 3907      		cpc r19,r25
 1088 0040 01F4      		brne .L76
 115:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (record->event.pressed) {
 1089               		.loc 1 115 0 is_stmt 0 discriminator 2
 1090 0042 6091 0000 		lds r22,layer_state
 1091 0046 7091 0000 		lds r23,layer_state+1
 1092 004a 8091 0000 		lds r24,layer_state+2
 1093 004e 9091 0000 		lds r25,layer_state+3
 1094 0052 0E94 0000 		call biton32
 1095               	.LVL129:
 1096 0056 8111      		cpse r24,__zero_reg__
 1097 0058 00C0      		rjmp .L77
 1098               	.L80:
 116:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (!shift) { unregister_code(KC_LSFT); }  // in event of unshifted keycode
 1099               		.loc 1 116 0 is_stmt 1
 1100 005a CA81      		ldd r28,Y+2
 1101               	.LVL130:
 1102 005c C111      		cpse r28,__zero_reg__
 1103 005e 00C0      		rjmp .L78
 121:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (!shift) { register_code(KC_LSFT); }    // restore SFT_T
 1104               		.loc 1 121 0
 1105 0060 802F      		mov r24,r16
 1106 0062 0E94 0000 		call unregister_code
 1107               	.LVL131:
 122:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 1108               		.loc 1 122 0
 1109 0066 1111      		cpse r17,__zero_reg__
 1110 0068 00C0      		rjmp .L82
 122:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 1111               		.loc 1 122 0 is_stmt 0 discriminator 1
 1112 006a 81EE      		ldi r24,lo8(-31)
 1113 006c 0E94 0000 		call register_code
 1114               	.LVL132:
 1115               	.L82:
 124:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1116               		.loc 1 124 0 is_stmt 1
 1117 0070 C1E0      		ldi r28,lo8(1)
 1118 0072 00C0      		rjmp .L73
 1119               	.LVL133:
 1120               	.L77:
 115:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (record->event.pressed) {
 1121               		.loc 1 115 0 discriminator 3
 1122 0074 6091 0000 		lds r22,layer_state
 1123 0078 7091 0000 		lds r23,layer_state+1
 1124 007c 8091 0000 		lds r24,layer_state+2
 1125 0080 9091 0000 		lds r25,layer_state+3
 1126 0084 0E94 0000 		call biton32
 1127               	.LVL134:
 1128 0088 8B30      		cpi r24,lo8(11)
 1129 008a 01F4      		brne .L76
 1130 008c 00C0      		rjmp .L80
 1131               	.LVL135:
 1132               	.L78:
 117:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       register_code(keycode);
 1133               		.loc 1 117 0
 1134 008e 1111      		cpse r17,__zero_reg__
 1135 0090 00C0      		rjmp .L81
 117:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       register_code(keycode);
 1136               		.loc 1 117 0 is_stmt 0 discriminator 1
 1137 0092 81EE      		ldi r24,lo8(-31)
 1138 0094 0E94 0000 		call unregister_code
 1139               	.LVL136:
 1140               	.L81:
 118:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 1141               		.loc 1 118 0 is_stmt 1
 1142 0098 802F      		mov r24,r16
 1143 009a 0E94 0000 		call register_code
 1144               	.LVL137:
 1145 009e 00C0      		rjmp .L73
 1146               		.cfi_endproc
 1147               	.LFE120:
 1149               		.section	.text.double_shift,"ax",@progbits
 1150               	.global	double_shift
 1152               	double_shift:
 1153               	.LFB121:
 134:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_key (keycode);
 1154               		.loc 1 134 0
 1155               		.cfi_startproc
 1156               	.LVL138:
 1157               	/* prologue: function */
 1158               	/* frame size = 0 */
 1159               	/* stack size = 0 */
 1160               	.L__stack_usage = 0
 135:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (DT_SHIFT) {
 1161               		.loc 1 135 0
 1162 0000 0E94 0000 		call tap_key
 1163               	.LVL139:
 139:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     set_oneshot_layer(_SHIFT, ONESHOT_START);
 1164               		.loc 1 139 0
 1165 0004 81E0      		ldi r24,lo8(1)
 1166 0006 0E94 0000 		call layer_on
 1167               	.LVL140:
 140:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     dt_shift = 1;
 1168               		.loc 1 140 0
 1169 000a 63E0      		ldi r22,lo8(3)
 1170 000c 81E0      		ldi r24,lo8(1)
 1171 000e 0E94 0000 		call set_oneshot_layer
 1172               	.LVL141:
 141:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1173               		.loc 1 141 0
 1174 0012 81E0      		ldi r24,lo8(1)
 1175 0014 8093 0000 		sts dt_shift,r24
 1176               	/* epilogue start */
 144:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1177               		.loc 1 144 0
 1178 0018 0895      		ret
 1179               		.cfi_endproc
 1180               	.LFE121:
 1182               		.section	.text.tap_lt,"ax",@progbits
 1183               	.global	tap_lt
 1185               	tap_lt:
 1186               	.LFB122:
 150:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 1187               		.loc 1 150 0
 1188               		.cfi_startproc
 1189               	.LVL142:
 1190 0000 CF92      		push r12
 1191               	.LCFI35:
 1192               		.cfi_def_cfa_offset 3
 1193               		.cfi_offset 12, -2
 1194 0002 DF92      		push r13
 1195               	.LCFI36:
 1196               		.cfi_def_cfa_offset 4
 1197               		.cfi_offset 13, -3
 1198 0004 EF92      		push r14
 1199               	.LCFI37:
 1200               		.cfi_def_cfa_offset 5
 1201               		.cfi_offset 14, -4
 1202 0006 FF92      		push r15
 1203               	.LCFI38:
 1204               		.cfi_def_cfa_offset 6
 1205               		.cfi_offset 15, -5
 1206 0008 0F93      		push r16
 1207               	.LCFI39:
 1208               		.cfi_def_cfa_offset 7
 1209               		.cfi_offset 16, -6
 1210 000a 1F93      		push r17
 1211               	.LCFI40:
 1212               		.cfi_def_cfa_offset 8
 1213               		.cfi_offset 17, -7
 1214 000c CF93      		push r28
 1215               	.LCFI41:
 1216               		.cfi_def_cfa_offset 9
 1217               		.cfi_offset 28, -8
 1218 000e DF93      		push r29
 1219               	.LCFI42:
 1220               		.cfi_def_cfa_offset 10
 1221               		.cfi_offset 29, -9
 1222               	/* prologue: function */
 1223               	/* frame size = 0 */
 1224               	/* stack size = 8 */
 1225               	.L__stack_usage = 8
 1226 0010 6C01      		movw r12,r24
 1227 0012 EB01      		movw r28,r22
 1228 0014 122F      		mov r17,r18
 1229 0016 C701      		movw r24,r14
 1230               	.LVL143:
 152:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_code(keycode); } // double tap down -> keycode...
 1231               		.loc 1 152 0
 1232 0018 F601      		movw r30,r12
 1233 001a 2081      		ld r18,Z
 1234               	.LVL144:
 1235 001c 2330      		cpi r18,lo8(3)
 1236 001e 00F0      		brlo .L89
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == triple) {              // triple tap -> double keycode + shift
 1237               		.loc 1 153 0
 1238 0020 8781      		ldd r24,Z+7
 1239 0022 8823      		tst r24
 1240 0024 01F0      		breq .L90
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == triple) {              // triple tap -> double keycode + shift
 1241               		.loc 1 153 0 is_stmt 0 discriminator 1
 1242 0026 862F      		mov r24,r22
 1243               	/* epilogue start */
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1244               		.loc 1 182 0 is_stmt 1 discriminator 1
 1245 0028 DF91      		pop r29
 1246 002a CF91      		pop r28
 1247 002c 1F91      		pop r17
 1248               	.LVL145:
 1249 002e 0F91      		pop r16
 1250               	.LVL146:
 1251 0030 FF90      		pop r15
 1252 0032 EF90      		pop r14
 1253               	.LVL147:
 1254 0034 DF90      		pop r13
 1255 0036 CF90      		pop r12
 1256               	.LVL148:
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == triple) {              // triple tap -> double keycode + shift
 1257               		.loc 1 153 0 discriminator 1
 1258 0038 0C94 0000 		jmp register_code
 1259               	.LVL149:
 1260               	.L90:
 154:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       tap_key     (keycode);
 1261               		.loc 1 154 0
 1262 003c 2413      		cpse r18,r20
 1263 003e 00C0      		rjmp .L103
 1264               	.L108:
 162:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       double_shift(keycode, layer);
 1265               		.loc 1 162 0 discriminator 1
 1266 0040 CE01      		movw r24,r28
 1267 0042 0E94 0000 		call tap_key
 1268               	.LVL150:
 1269 0046 00C0      		rjmp .L101
 1270               	.LVL151:
 1271               	.L92:
 158:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1272               		.loc 1 158 0 discriminator 3
 1273 0048 CE01      		movw r24,r28
 1274 004a 0E94 0000 		call tap_key
 1275               	.LVL152:
 1276 004e 1F5F      		subi r17,lo8(-(1))
 1277               	.LVL153:
 1278               	.L91:
 158:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1279               		.loc 1 158 0 is_stmt 0 discriminator 1
 1280 0050 F601      		movw r30,r12
 1281 0052 8081      		ld r24,Z
 1282 0054 1817      		cp r17,r24
 1283 0056 00F0      		brlo .L92
 1284               	.LVL154:
 1285               	.L88:
 1286               	/* epilogue start */
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1287               		.loc 1 182 0 is_stmt 1
 1288 0058 DF91      		pop r29
 1289 005a CF91      		pop r28
 1290               	.LVL155:
 1291 005c 1F91      		pop r17
 1292 005e 0F91      		pop r16
 1293               	.LVL156:
 1294 0060 FF90      		pop r15
 1295 0062 EF90      		pop r14
 1296               	.LVL157:
 1297 0064 DF90      		pop r13
 1298 0066 CF90      		pop r12
 1299               	.LVL158:
 1300 0068 0895      		ret
 1301               	.LVL159:
 1302               	.L103:
 158:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1303               		.loc 1 158 0
 1304 006a 10E0      		ldi r17,0
 1305               	.LVL160:
 1306 006c 00C0      		rjmp .L91
 1307               	.LVL161:
 1308               	.L89:
 160:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->count == triple - 1) {
 1309               		.loc 1 160 0
 1310 006e 2230      		cpi r18,lo8(2)
 1311 0070 01F4      		brne .L94
 161:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (rule == 2) { tap_key(keycode); }          // (.) double tap -> keycode keycode + shift
 1312               		.loc 1 161 0
 1313 0072 4330      		cpi r20,lo8(3)
 1314 0074 01F4      		brne .L95
 162:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       double_shift(keycode, layer);
 1315               		.loc 1 162 0
 1316 0076 0230      		cpi r16,lo8(2)
 1317 0078 01F0      		breq .L108
 1318               	.LVL162:
 1319               	.L101:
 180:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1320               		.loc 1 180 0
 1321 007a 612F      		mov r22,r17
 1322 007c CE01      		movw r24,r28
 1323 007e 00C0      		rjmp .L107
 1324               	.LVL163:
 1325               	.L95:
 166:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else                { double_shift(keycode, layer); }                     // tap down or double
 1326               		.loc 1 166 0
 1327 0080 0230      		cpi r16,lo8(2)
 1328 0082 01F4      		brne .L101
 166:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else                { double_shift(keycode, layer); }                     // tap down or double
 1329               		.loc 1 166 0 is_stmt 0 discriminator 1
 1330 0084 0097      		sbiw r24,0
 1331 0086 01F4      		brne .L97
 166:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else                { double_shift(keycode, layer); }                     // tap down or double
 1332               		.loc 1 166 0
 1333 0088 CB01      		movw r24,r22
 1334               	.L97:
 166:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else                { double_shift(keycode, layer); }                     // tap down or double
 1335               		.loc 1 166 0 discriminator 5
 1336 008a 612F      		mov r22,r17
 1337               	.LVL164:
 1338               	.L107:
 1339               	/* epilogue start */
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1340               		.loc 1 182 0 is_stmt 1
 1341 008c DF91      		pop r29
 1342 008e CF91      		pop r28
 1343               	.LVL165:
 1344 0090 1F91      		pop r17
 1345               	.LVL166:
 1346 0092 0F91      		pop r16
 1347               	.LVL167:
 1348 0094 FF90      		pop r15
 1349 0096 EF90      		pop r14
 1350               	.LVL168:
 1351 0098 DF90      		pop r13
 1352 009a CF90      		pop r12
 1353               	.LVL169:
 180:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1354               		.loc 1 180 0
 1355 009c 0C94 0000 		jmp double_shift
 1356               	.LVL170:
 1357               	.L94:
 169:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else switch (rule) {                              // see process_record_user()
 1358               		.loc 1 169 0
 1359 00a0 2781      		ldd r18,Z+7
 1360 00a2 2223      		tst r18
 1361 00a4 01F0      		breq .L98
 169:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else switch (rule) {                              // see process_record_user()
 1362               		.loc 1 169 0 is_stmt 0 discriminator 1
 1363 00a6 812F      		mov r24,r17
 1364               	/* epilogue start */
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1365               		.loc 1 182 0 is_stmt 1 discriminator 1
 1366 00a8 DF91      		pop r29
 1367 00aa CF91      		pop r28
 1368 00ac 1F91      		pop r17
 1369               	.LVL171:
 1370 00ae 0F91      		pop r16
 1371               	.LVL172:
 1372 00b0 FF90      		pop r15
 1373 00b2 EF90      		pop r14
 1374               	.LVL173:
 1375 00b4 DF90      		pop r13
 1376 00b6 CF90      		pop r12
 1377               	.LVL174:
 169:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else switch (rule) {                              // see process_record_user()
 1378               		.loc 1 169 0 discriminator 1
 1379 00b8 0C94 0000 		jmp layer_on
 1380               	.LVL175:
 1381               	.L98:
 170:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   case 0:
 1382               		.loc 1 170 0
 1383 00bc 0130      		cpi r16,lo8(1)
 1384 00be 01F0      		breq .L99
 1385 00c0 00F0      		brlo .L100
 1386 00c2 0230      		cpi r16,lo8(2)
 1387 00c4 01F0      		breq .L101
 1388 00c6 00C0      		rjmp .L88
 1389               	.L100:
 172:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_key (keycode);
 1390               		.loc 1 172 0
 1391 00c8 80E0      		ldi r24,lo8(gs(register_code))
 1392 00ca 90E0      		ldi r25,hi8(gs(register_code))
 1393 00cc 0E94 0000 		call modifier
 1394               	.LVL176:
 173:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     modifier(unregister_code);
 1395               		.loc 1 173 0
 1396 00d0 CE01      		movw r24,r28
 1397 00d2 0E94 0000 		call tap_key
 1398               	.LVL177:
 174:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return;
 1399               		.loc 1 174 0
 1400 00d6 80E0      		ldi r24,lo8(gs(unregister_code))
 1401 00d8 90E0      		ldi r25,hi8(gs(unregister_code))
 1402               	/* epilogue start */
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1403               		.loc 1 182 0
 1404 00da DF91      		pop r29
 1405 00dc CF91      		pop r28
 1406               	.LVL178:
 1407 00de 1F91      		pop r17
 1408               	.LVL179:
 1409 00e0 0F91      		pop r16
 1410               	.LVL180:
 1411 00e2 FF90      		pop r15
 1412 00e4 EF90      		pop r14
 1413               	.LVL181:
 1414 00e6 DF90      		pop r13
 1415 00e8 CF90      		pop r12
 1416               	.LVL182:
 174:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return;
 1417               		.loc 1 174 0
 1418 00ea 0C94 0000 		jmp modifier
 1419               	.LVL183:
 1420               	.L99:
 177:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return;
 1421               		.loc 1 177 0
 1422 00ee 0097      		sbiw r24,0
 1423 00f0 01F4      		brne .+2
 1424 00f2 00C0      		rjmp .L88
 1425               	/* epilogue start */
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1426               		.loc 1 182 0 discriminator 1
 1427 00f4 DF91      		pop r29
 1428 00f6 CF91      		pop r28
 1429 00f8 1F91      		pop r17
 1430               	.LVL184:
 1431 00fa 0F91      		pop r16
 1432               	.LVL185:
 1433 00fc FF90      		pop r15
 1434 00fe EF90      		pop r14
 1435               	.LVL186:
 1436 0100 DF90      		pop r13
 1437 0102 CF90      		pop r12
 1438               	.LVL187:
 177:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     return;
 1439               		.loc 1 177 0 discriminator 1
 1440 0104 0C94 0000 		jmp tap_key
 1441               	.LVL188:
 1442               		.cfi_endproc
 1443               	.LFE122:
 1445               		.section	.text.enter,"ax",@progbits
 1446               	.global	enter
 1448               	enter:
 1449               	.LFB124:
 197:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_lt(state, KC_ENT, TRIPLE, _RSHIFT, tap_rule, 0);  // triple tap -> double enter + shift, down
 1450               		.loc 1 197 0
 1451               		.cfi_startproc
 1452               	.LVL189:
 1453 0000 EF92      		push r14
 1454               	.LCFI43:
 1455               		.cfi_def_cfa_offset 3
 1456               		.cfi_offset 14, -2
 1457 0002 FF92      		push r15
 1458               	.LCFI44:
 1459               		.cfi_def_cfa_offset 4
 1460               		.cfi_offset 15, -3
 1461 0004 0F93      		push r16
 1462               	.LCFI45:
 1463               		.cfi_def_cfa_offset 5
 1464               		.cfi_offset 16, -4
 1465               	/* prologue: function */
 1466               	/* frame size = 0 */
 1467               	/* stack size = 3 */
 1468               	.L__stack_usage = 3
 198:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1469               		.loc 1 198 0
 1470 0006 F12C      		mov r15,__zero_reg__
 1471 0008 E12C      		mov r14,__zero_reg__
 1472 000a 0091 0000 		lds r16,tap_rule
 1473 000e 23E0      		ldi r18,lo8(3)
 1474 0010 43E0      		ldi r20,lo8(3)
 1475 0012 68E2      		ldi r22,lo8(40)
 1476 0014 70E0      		ldi r23,0
 1477               	.LVL190:
 1478 0016 0E94 0000 		call tap_lt
 1479               	.LVL191:
 1480               	/* epilogue start */
 199:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1481               		.loc 1 199 0
 1482 001a 0F91      		pop r16
 1483 001c FF90      		pop r15
 1484 001e EF90      		pop r14
 1485 0020 0895      		ret
 1486               		.cfi_endproc
 1487               	.LFE124:
 1489               		.section	.text.space,"ax",@progbits
 1490               	.global	space
 1492               	space:
 1493               	.LFB126:
 208:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_lt(state, KC_SPC, REPEATING, _RSHIFT, tap_rule, KC_ENT); // triple tap down -> space...
 1494               		.loc 1 208 0
 1495               		.cfi_startproc
 1496               	.LVL192:
 1497 0000 EF92      		push r14
 1498               	.LCFI46:
 1499               		.cfi_def_cfa_offset 3
 1500               		.cfi_offset 14, -2
 1501 0002 FF92      		push r15
 1502               	.LCFI47:
 1503               		.cfi_def_cfa_offset 4
 1504               		.cfi_offset 15, -3
 1505 0004 0F93      		push r16
 1506               	.LCFI48:
 1507               		.cfi_def_cfa_offset 5
 1508               		.cfi_offset 16, -4
 1509               	/* prologue: function */
 1510               	/* frame size = 0 */
 1511               	/* stack size = 3 */
 1512               	.L__stack_usage = 3
 209:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1513               		.loc 1 209 0
 1514 0006 28E2      		ldi r18,lo8(40)
 1515 0008 E22E      		mov r14,r18
 1516 000a F12C      		mov r15,__zero_reg__
 1517 000c 0091 0000 		lds r16,tap_rule
 1518 0010 23E0      		ldi r18,lo8(3)
 1519 0012 40E0      		ldi r20,0
 1520 0014 6CE2      		ldi r22,lo8(44)
 1521 0016 70E0      		ldi r23,0
 1522               	.LVL193:
 1523 0018 0E94 0000 		call tap_lt
 1524               	.LVL194:
 1525               	/* epilogue start */
 210:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1526               		.loc 1 210 0
 1527 001c 0F91      		pop r16
 1528 001e FF90      		pop r15
 1529 0020 EF90      		pop r14
 1530 0022 0895      		ret
 1531               		.cfi_endproc
 1532               	.LFE126:
 1534               		.section	.text.tap_reset,"ax",@progbits
 1535               	.global	tap_reset
 1537               	tap_reset:
 1538               	.LFB123:
 185:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   unregister_code(keycode);
 1539               		.loc 1 185 0
 1540               		.cfi_startproc
 1541               	.LVL195:
 1542 0000 CF93      		push r28
 1543               	.LCFI49:
 1544               		.cfi_def_cfa_offset 3
 1545               		.cfi_offset 28, -2
 1546               	/* prologue: function */
 1547               	/* frame size = 0 */
 1548               	/* stack size = 1 */
 1549               	.L__stack_usage = 1
 1550 0002 C62F      		mov r28,r22
 186:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift ? clear_oneshot_layer_state(ONESHOT_PRESSED) : layer_off(layer);
 1551               		.loc 1 186 0
 1552 0004 0E94 0000 		call unregister_code
 1553               	.LVL196:
 187:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift = 0;
 1554               		.loc 1 187 0
 1555 0008 8091 0000 		lds r24,dt_shift
 1556 000c 8823      		tst r24
 1557 000e 01F0      		breq .L112
 187:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift = 0;
 1558               		.loc 1 187 0 is_stmt 0 discriminator 1
 1559 0010 81E0      		ldi r24,lo8(1)
 1560 0012 0E94 0000 		call clear_oneshot_layer_state
 1561               	.LVL197:
 1562               	.L113:
 188:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_rule = 0;                                     // clear retained down_rule, see process_record
 1563               		.loc 1 188 0 is_stmt 1
 1564 0016 1092 0000 		sts dt_shift,__zero_reg__
 189:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1565               		.loc 1 189 0
 1566 001a 1092 0000 		sts tap_rule,__zero_reg__
 1567               	/* epilogue start */
 190:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1568               		.loc 1 190 0
 1569 001e CF91      		pop r28
 1570               	.LVL198:
 1571 0020 0895      		ret
 1572               	.LVL199:
 1573               	.L112:
 187:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift = 0;
 1574               		.loc 1 187 0 discriminator 2
 1575 0022 8C2F      		mov r24,r28
 1576 0024 0E94 0000 		call layer_off
 1577               	.LVL200:
 1578 0028 00C0      		rjmp .L113
 1579               		.cfi_endproc
 1580               	.LFE123:
 1582               		.section	.text.enter_reset,"ax",@progbits
 1583               	.global	enter_reset
 1585               	enter_reset:
 1586               	.LFB125:
 202:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_reset(KC_ENT, _RSHIFT);
 1587               		.loc 1 202 0
 1588               		.cfi_startproc
 1589               	.LVL201:
 1590               	/* prologue: function */
 1591               	/* frame size = 0 */
 1592               	/* stack size = 0 */
 1593               	.L__stack_usage = 0
 203:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1594               		.loc 1 203 0
 1595 0000 63E0      		ldi r22,lo8(3)
 1596               	.LVL202:
 1597 0002 88E2      		ldi r24,lo8(40)
 1598 0004 90E0      		ldi r25,0
 1599               	.LVL203:
 1600 0006 0C94 0000 		jmp tap_reset
 1601               	.LVL204:
 1602               		.cfi_endproc
 1603               	.LFE125:
 1605               		.section	.text.space_reset,"ax",@progbits
 1606               	.global	space_reset
 1608               	space_reset:
 1609               	.LFB127:
 213:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tap_reset(KC_SPC, _RSHIFT);
 1610               		.loc 1 213 0
 1611               		.cfi_startproc
 1612               	.LVL205:
 1613               	/* prologue: function */
 1614               	/* frame size = 0 */
 1615               	/* stack size = 0 */
 1616               	.L__stack_usage = 0
 214:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1617               		.loc 1 214 0
 1618 0000 63E0      		ldi r22,lo8(3)
 1619               	.LVL206:
 1620 0002 8CE2      		ldi r24,lo8(44)
 1621 0004 90E0      		ldi r25,0
 1622               	.LVL207:
 1623 0006 0C94 0000 		jmp tap_reset
 1624               	.LVL208:
 1625               		.cfi_endproc
 1626               	.LFE127:
 1628               		.section	.text.double_max,"ax",@progbits
 1629               	.global	double_max
 1631               	double_max:
 1632               	.LFB128:
 221:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (shift) {
 1633               		.loc 1 221 0
 1634               		.cfi_startproc
 1635               	.LVL209:
 1636 0000 1F93      		push r17
 1637               	.LCFI50:
 1638               		.cfi_def_cfa_offset 3
 1639               		.cfi_offset 17, -2
 1640 0002 CF93      		push r28
 1641               	.LCFI51:
 1642               		.cfi_def_cfa_offset 4
 1643               		.cfi_offset 28, -3
 1644 0004 DF93      		push r29
 1645               	.LCFI52:
 1646               		.cfi_def_cfa_offset 5
 1647               		.cfi_offset 29, -4
 1648               	/* prologue: function */
 1649               	/* frame size = 0 */
 1650               	/* stack size = 3 */
 1651               	.L__stack_usage = 3
 1652 0006 182F      		mov r17,r24
 1653 0008 EA01      		movw r28,r20
 223:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (count > 1) { tap_shift(keycode); }
 1654               		.loc 1 223 0
 1655 000a CA01      		movw r24,r20
 1656               	.LVL210:
 222:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     tap_shift(keycode);
 1657               		.loc 1 222 0
 1658 000c 6623      		tst r22
 1659 000e 01F0      		breq .L117
 223:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (count > 1) { tap_shift(keycode); }
 1660               		.loc 1 223 0
 1661 0010 0E94 0000 		call tap_shift
 1662               	.LVL211:
 224:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1663               		.loc 1 224 0
 1664 0014 1230      		cpi r17,lo8(2)
 1665 0016 00F0      		brlo .L116
 224:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1666               		.loc 1 224 0 is_stmt 0 discriminator 1
 1667 0018 CE01      		movw r24,r28
 1668               	/* epilogue start */
 230:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1669               		.loc 1 230 0 is_stmt 1 discriminator 1
 1670 001a DF91      		pop r29
 1671 001c CF91      		pop r28
 1672               	.LVL212:
 1673 001e 1F91      		pop r17
 1674               	.LVL213:
 224:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1675               		.loc 1 224 0 discriminator 1
 1676 0020 0C94 0000 		jmp tap_shift
 1677               	.LVL214:
 1678               	.L117:
 227:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (count > 1) { tap_key(keycode); }
 1679               		.loc 1 227 0
 1680 0024 0E94 0000 		call tap_key
 1681               	.LVL215:
 228:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1682               		.loc 1 228 0
 1683 0028 1230      		cpi r17,lo8(2)
 1684 002a 00F0      		brlo .L116
 228:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1685               		.loc 1 228 0 is_stmt 0 discriminator 1
 1686 002c CE01      		movw r24,r28
 1687               	/* epilogue start */
 230:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1688               		.loc 1 230 0 is_stmt 1 discriminator 1
 1689 002e DF91      		pop r29
 1690 0030 CF91      		pop r28
 1691               	.LVL216:
 1692 0032 1F91      		pop r17
 1693               	.LVL217:
 228:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1694               		.loc 1 228 0 discriminator 1
 1695 0034 0C94 0000 		jmp tap_key
 1696               	.LVL218:
 1697               	.L116:
 1698               	/* epilogue start */
 230:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1699               		.loc 1 230 0
 1700 0038 DF91      		pop r29
 1701 003a CF91      		pop r28
 1702               	.LVL219:
 1703 003c 1F91      		pop r17
 1704               	.LVL220:
 1705 003e 0895      		ret
 1706               		.cfi_endproc
 1707               	.LFE128:
 1709               		.section	.rodata.colon.str1.1,"aMS",@progbits,1
 1710               	.LC1:
 1711 0000 203A 3A20 		.string	" :: "
 1711      00
 1712               		.section	.text.colon,"ax",@progbits
 1713               	.global	colon
 1715               	colon:
 1716               	.LFB129:
 233:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 1717               		.loc 1 233 0
 1718               		.cfi_startproc
 1719               	.LVL221:
 1720 0000 1F93      		push r17
 1721               	.LCFI53:
 1722               		.cfi_def_cfa_offset 3
 1723               		.cfi_offset 17, -2
 1724 0002 CF93      		push r28
 1725               	.LCFI54:
 1726               		.cfi_def_cfa_offset 4
 1727               		.cfi_offset 28, -3
 1728 0004 DF93      		push r29
 1729               	.LCFI55:
 1730               		.cfi_def_cfa_offset 5
 1731               		.cfi_offset 29, -4
 1732               	/* prologue: function */
 1733               	/* frame size = 0 */
 1734               	/* stack size = 3 */
 1735               	.L__stack_usage = 3
 1736 0006 EC01      		movw r28,r24
 235:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_SCLN); }
 1737               		.loc 1 235 0
 1738 0008 8881      		ld r24,Y
 1739               	.LVL222:
 1740 000a 9F81      		ldd r25,Y+7
 1741 000c 8330      		cpi r24,lo8(3)
 1742 000e 00F0      		brlo .L122
 236:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" :: "); }
 1743               		.loc 1 236 0
 1744 0010 9923      		tst r25
 1745 0012 01F0      		breq .L123
 1746               	.L127:
 236:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" :: "); }
 1747               		.loc 1 236 0 is_stmt 0 discriminator 1
 1748 0014 83E3      		ldi r24,lo8(51)
 1749 0016 90E0      		ldi r25,0
 1750 0018 0E94 0000 		call register_shift
 1751               	.LVL223:
 1752               	.L124:
 241:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1753               		.loc 1 241 0 is_stmt 1
 1754 001c CE01      		movw r24,r28
 1755               	/* epilogue start */
 242:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1756               		.loc 1 242 0
 1757 001e DF91      		pop r29
 1758 0020 CF91      		pop r28
 1759               	.LVL224:
 1760 0022 1F91      		pop r17
 241:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1761               		.loc 1 241 0
 1762 0024 0C94 0000 		jmp reset_tap_dance
 1763               	.LVL225:
 1764               	.L123:
 238:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1765               		.loc 1 238 0
 1766 0028 10E0      		ldi r17,0
 237:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_SCLN); }
 1767               		.loc 1 237 0
 1768 002a 8330      		cpi r24,lo8(3)
 1769 002c 01F4      		brne .L125
 237:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_SCLN); }
 1770               		.loc 1 237 0 is_stmt 0 discriminator 1
 1771 002e 80E0      		ldi r24,lo8(.LC1)
 1772 0030 90E0      		ldi r25,hi8(.LC1)
 1773 0032 0E94 0000 		call send_string
 1774               	.LVL226:
 1775 0036 00C0      		rjmp .L124
 1776               	.LVL227:
 1777               	.L126:
 238:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1778               		.loc 1 238 0 is_stmt 1 discriminator 3
 1779 0038 83E3      		ldi r24,lo8(51)
 1780 003a 90E0      		ldi r25,0
 1781 003c 0E94 0000 		call tap_shift
 1782               	.LVL228:
 1783 0040 1F5F      		subi r17,lo8(-(1))
 1784               	.LVL229:
 1785               	.L125:
 238:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1786               		.loc 1 238 0 is_stmt 0 discriminator 1
 1787 0042 8881      		ld r24,Y
 1788 0044 1817      		cp r17,r24
 1789 0046 00F0      		brlo .L126
 1790 0048 00C0      		rjmp .L124
 1791               	.LVL230:
 1792               	.L122:
 240:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1793               		.loc 1 240 0 is_stmt 1
 1794 004a 9111      		cpse r25,__zero_reg__
 1795 004c 00C0      		rjmp .L127
 240:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1796               		.loc 1 240 0 is_stmt 0 discriminator 2
 1797 004e 43E3      		ldi r20,lo8(51)
 1798 0050 50E0      		ldi r21,0
 1799 0052 61E0      		ldi r22,lo8(1)
 1800               	.LVL231:
 1801 0054 0E94 0000 		call double_max
 1802               	.LVL232:
 1803 0058 00C0      		rjmp .L124
 1804               		.cfi_endproc
 1805               	.LFE129:
 1807               		.section	.rodata.equal.str1.1,"aMS",@progbits,1
 1808               	.LC2:
 1809 0000 202F 3D20 		.string	" /= "
 1809      00
 1810               		.section	.text.equal,"ax",@progbits
 1811               	.global	equal
 1813               	equal:
 1814               	.LFB131:
 254:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 1815               		.loc 1 254 0 is_stmt 1
 1816               		.cfi_startproc
 1817               	.LVL233:
 1818 0000 1F93      		push r17
 1819               	.LCFI56:
 1820               		.cfi_def_cfa_offset 3
 1821               		.cfi_offset 17, -2
 1822 0002 CF93      		push r28
 1823               	.LCFI57:
 1824               		.cfi_def_cfa_offset 4
 1825               		.cfi_offset 28, -3
 1826 0004 DF93      		push r29
 1827               	.LCFI58:
 1828               		.cfi_def_cfa_offset 5
 1829               		.cfi_offset 29, -4
 1830               	/* prologue: function */
 1831               	/* frame size = 0 */
 1832               	/* stack size = 3 */
 1833               	.L__stack_usage = 3
 1834 0006 EC01      		movw r28,r24
 256:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_code(KC_EQL); }
 1835               		.loc 1 256 0
 1836 0008 8881      		ld r24,Y
 1837               	.LVL234:
 1838 000a 9F81      		ldd r25,Y+7
 1839 000c 8330      		cpi r24,lo8(3)
 1840 000e 00F0      		brlo .L130
 257:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" /= "); }
 1841               		.loc 1 257 0
 1842 0010 9923      		tst r25
 1843 0012 01F0      		breq .L131
 257:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" /= "); }
 1844               		.loc 1 257 0 is_stmt 0 discriminator 1
 1845 0014 8EE2      		ldi r24,lo8(46)
 1846 0016 0E94 0000 		call register_code
 1847               	.LVL235:
 1848               	.L132:
 262:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1849               		.loc 1 262 0 is_stmt 1
 1850 001a CE01      		movw r24,r28
 1851               	/* epilogue start */
 263:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1852               		.loc 1 263 0
 1853 001c DF91      		pop r29
 1854 001e CF91      		pop r28
 1855               	.LVL236:
 1856 0020 1F91      		pop r17
 262:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1857               		.loc 1 262 0
 1858 0022 0C94 0000 		jmp reset_tap_dance
 1859               	.LVL237:
 1860               	.L131:
 259:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1861               		.loc 1 259 0
 1862 0026 10E0      		ldi r17,0
 258:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_key(KC_EQL); }
 1863               		.loc 1 258 0
 1864 0028 8330      		cpi r24,lo8(3)
 1865 002a 01F4      		brne .L133
 258:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_key(KC_EQL); }
 1866               		.loc 1 258 0 is_stmt 0 discriminator 1
 1867 002c 80E0      		ldi r24,lo8(.LC2)
 1868 002e 90E0      		ldi r25,hi8(.LC2)
 1869 0030 0E94 0000 		call send_string
 1870               	.LVL238:
 1871 0034 00C0      		rjmp .L132
 1872               	.LVL239:
 1873               	.L134:
 259:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1874               		.loc 1 259 0 is_stmt 1 discriminator 3
 1875 0036 8EE2      		ldi r24,lo8(46)
 1876 0038 90E0      		ldi r25,0
 1877 003a 0E94 0000 		call tap_key
 1878               	.LVL240:
 1879 003e 1F5F      		subi r17,lo8(-(1))
 1880               	.LVL241:
 1881               	.L133:
 259:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1882               		.loc 1 259 0 is_stmt 0 discriminator 1
 1883 0040 8881      		ld r24,Y
 1884 0042 1817      		cp r17,r24
 1885 0044 00F0      		brlo .L134
 1886 0046 00C0      		rjmp .L132
 1887               	.LVL242:
 1888               	.L130:
 261:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1889               		.loc 1 261 0 is_stmt 1
 1890 0048 9923      		tst r25
 1891 004a 01F0      		breq .L135
 261:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1892               		.loc 1 261 0 is_stmt 0 discriminator 1
 1893 004c 89E0      		ldi r24,lo8(9)
 1894 004e 0E94 0000 		call layer_on
 1895               	.LVL243:
 1896 0052 00C0      		rjmp .L132
 1897               	.LVL244:
 1898               	.L135:
 261:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1899               		.loc 1 261 0 discriminator 2
 1900 0054 4EE2      		ldi r20,lo8(46)
 1901 0056 50E0      		ldi r21,0
 1902 0058 60E0      		ldi r22,0
 1903               	.LVL245:
 1904 005a 0E94 0000 		call double_max
 1905               	.LVL246:
 1906 005e 00C0      		rjmp .L132
 1907               		.cfi_endproc
 1908               	.LFE131:
 1910               		.section	.rodata.lesser.str1.1,"aMS",@progbits,1
 1911               	.LC3:
 1912 0000 203C 2D20 		.string	" <- "
 1912      00
 1913               		.section	.text.lesser,"ax",@progbits
 1914               	.global	lesser
 1916               	lesser:
 1917               	.LFB133:
 272:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 1918               		.loc 1 272 0 is_stmt 1
 1919               		.cfi_startproc
 1920               	.LVL247:
 1921 0000 1F93      		push r17
 1922               	.LCFI59:
 1923               		.cfi_def_cfa_offset 3
 1924               		.cfi_offset 17, -2
 1925 0002 CF93      		push r28
 1926               	.LCFI60:
 1927               		.cfi_def_cfa_offset 4
 1928               		.cfi_offset 28, -3
 1929 0004 DF93      		push r29
 1930               	.LCFI61:
 1931               		.cfi_def_cfa_offset 5
 1932               		.cfi_offset 29, -4
 1933               	/* prologue: function */
 1934               	/* frame size = 0 */
 1935               	/* stack size = 3 */
 1936               	.L__stack_usage = 3
 1937 0006 EC01      		movw r28,r24
 274:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_COMM); }
 1938               		.loc 1 274 0
 1939 0008 8881      		ld r24,Y
 1940               	.LVL248:
 1941 000a 9F81      		ldd r25,Y+7
 1942 000c 8330      		cpi r24,lo8(3)
 1943 000e 00F0      		brlo .L138
 275:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" <- "); }
 1944               		.loc 1 275 0
 1945 0010 9923      		tst r25
 1946 0012 01F0      		breq .L139
 275:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" <- "); }
 1947               		.loc 1 275 0 is_stmt 0 discriminator 1
 1948 0014 86E3      		ldi r24,lo8(54)
 1949 0016 90E0      		ldi r25,0
 1950 0018 0E94 0000 		call register_shift
 1951               	.LVL249:
 1952               	.L140:
 280:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1953               		.loc 1 280 0 is_stmt 1
 1954 001c CE01      		movw r24,r28
 1955               	/* epilogue start */
 281:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 1956               		.loc 1 281 0
 1957 001e DF91      		pop r29
 1958 0020 CF91      		pop r28
 1959               	.LVL250:
 1960 0022 1F91      		pop r17
 280:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 1961               		.loc 1 280 0
 1962 0024 0C94 0000 		jmp reset_tap_dance
 1963               	.LVL251:
 1964               	.L139:
 277:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1965               		.loc 1 277 0
 1966 0028 10E0      		ldi r17,0
 276:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_COMM); }
 1967               		.loc 1 276 0
 1968 002a 8330      		cpi r24,lo8(3)
 1969 002c 01F4      		brne .L141
 276:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_COMM); }
 1970               		.loc 1 276 0 is_stmt 0 discriminator 1
 1971 002e 80E0      		ldi r24,lo8(.LC3)
 1972 0030 90E0      		ldi r25,hi8(.LC3)
 1973 0032 0E94 0000 		call send_string
 1974               	.LVL252:
 1975 0036 00C0      		rjmp .L140
 1976               	.LVL253:
 1977               	.L142:
 277:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1978               		.loc 1 277 0 is_stmt 1 discriminator 3
 1979 0038 86E3      		ldi r24,lo8(54)
 1980 003a 90E0      		ldi r25,0
 1981 003c 0E94 0000 		call tap_shift
 1982               	.LVL254:
 1983 0040 1F5F      		subi r17,lo8(-(1))
 1984               	.LVL255:
 1985               	.L141:
 277:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 1986               		.loc 1 277 0 is_stmt 0 discriminator 1
 1987 0042 8881      		ld r24,Y
 1988 0044 1817      		cp r17,r24
 1989 0046 00F0      		brlo .L142
 1990 0048 00C0      		rjmp .L140
 1991               	.LVL256:
 1992               	.L138:
 279:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1993               		.loc 1 279 0 is_stmt 1
 1994 004a 9923      		tst r25
 1995 004c 01F0      		breq .L143
 279:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 1996               		.loc 1 279 0 is_stmt 0 discriminator 1
 1997 004e 80EE      		ldi r24,lo8(-32)
 1998 0050 0E94 0000 		call register_code
 1999               	.LVL257:
 2000 0054 00C0      		rjmp .L140
 2001               	.LVL258:
 2002               	.L143:
 279:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 2003               		.loc 1 279 0 discriminator 2
 2004 0056 46E3      		ldi r20,lo8(54)
 2005 0058 50E0      		ldi r21,0
 2006 005a 61E0      		ldi r22,lo8(1)
 2007               	.LVL259:
 2008 005c 0E94 0000 		call double_max
 2009               	.LVL260:
 2010 0060 00C0      		rjmp .L140
 2011               		.cfi_endproc
 2012               	.LFE133:
 2014               		.section	.rodata.greater.str1.1,"aMS",@progbits,1
 2015               	.LC4:
 2016 0000 202D 3E20 		.string	" -> "
 2016      00
 2017               		.section	.text.greater,"ax",@progbits
 2018               	.global	greater
 2020               	greater:
 2021               	.LFB135:
 290:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t i;
 2022               		.loc 1 290 0 is_stmt 1
 2023               		.cfi_startproc
 2024               	.LVL261:
 2025 0000 1F93      		push r17
 2026               	.LCFI62:
 2027               		.cfi_def_cfa_offset 3
 2028               		.cfi_offset 17, -2
 2029 0002 CF93      		push r28
 2030               	.LCFI63:
 2031               		.cfi_def_cfa_offset 4
 2032               		.cfi_offset 28, -3
 2033 0004 DF93      		push r29
 2034               	.LCFI64:
 2035               		.cfi_def_cfa_offset 5
 2036               		.cfi_offset 29, -4
 2037               	/* prologue: function */
 2038               	/* frame size = 0 */
 2039               	/* stack size = 3 */
 2040               	.L__stack_usage = 3
 2041 0006 EC01      		movw r28,r24
 292:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (state->pressed) { register_shift(KC_DOT); }
 2042               		.loc 1 292 0
 2043 0008 8881      		ld r24,Y
 2044               	.LVL262:
 2045 000a 9F81      		ldd r25,Y+7
 2046 000c 8330      		cpi r24,lo8(3)
 2047 000e 00F0      		brlo .L146
 293:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" -> "); }
 2048               		.loc 1 293 0
 2049 0010 9923      		tst r25
 2050 0012 01F0      		breq .L147
 293:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (state->count == 3) { send_string(" -> "); }
 2051               		.loc 1 293 0 is_stmt 0 discriminator 1
 2052 0014 87E3      		ldi r24,lo8(55)
 2053 0016 90E0      		ldi r25,0
 2054 0018 0E94 0000 		call register_shift
 2055               	.LVL263:
 2056               	.L148:
 298:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2057               		.loc 1 298 0 is_stmt 1
 2058 001c CE01      		movw r24,r28
 2059               	/* epilogue start */
 299:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 2060               		.loc 1 299 0
 2061 001e DF91      		pop r29
 2062 0020 CF91      		pop r28
 2063               	.LVL264:
 2064 0022 1F91      		pop r17
 298:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2065               		.loc 1 298 0
 2066 0024 0C94 0000 		jmp reset_tap_dance
 2067               	.LVL265:
 2068               	.L147:
 295:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2069               		.loc 1 295 0
 2070 0028 10E0      		ldi r17,0
 294:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_DOT); }
 2071               		.loc 1 294 0
 2072 002a 8330      		cpi r24,lo8(3)
 2073 002c 01F4      		brne .L149
 294:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else for (i = 0; i < state->count; i++) { tap_shift(KC_DOT); }
 2074               		.loc 1 294 0 is_stmt 0 discriminator 1
 2075 002e 80E0      		ldi r24,lo8(.LC4)
 2076 0030 90E0      		ldi r25,hi8(.LC4)
 2077 0032 0E94 0000 		call send_string
 2078               	.LVL266:
 2079 0036 00C0      		rjmp .L148
 2080               	.LVL267:
 2081               	.L150:
 295:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2082               		.loc 1 295 0 is_stmt 1 discriminator 3
 2083 0038 87E3      		ldi r24,lo8(55)
 2084 003a 90E0      		ldi r25,0
 2085 003c 0E94 0000 		call tap_shift
 2086               	.LVL268:
 2087 0040 1F5F      		subi r17,lo8(-(1))
 2088               	.LVL269:
 2089               	.L149:
 295:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2090               		.loc 1 295 0 is_stmt 0 discriminator 1
 2091 0042 8881      		ld r24,Y
 2092 0044 1817      		cp r17,r24
 2093 0046 00F0      		brlo .L150
 2094 0048 00C0      		rjmp .L148
 2095               	.LVL270:
 2096               	.L146:
 297:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 2097               		.loc 1 297 0 is_stmt 1
 2098 004a 9923      		tst r25
 2099 004c 01F0      		breq .L151
 297:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 2100               		.loc 1 297 0 is_stmt 0 discriminator 1
 2101 004e 81EE      		ldi r24,lo8(-31)
 2102 0050 0E94 0000 		call register_code
 2103               	.LVL271:
 2104 0054 00C0      		rjmp .L148
 2105               	.LVL272:
 2106               	.L151:
 297:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   reset_tap_dance(state);
 2107               		.loc 1 297 0 discriminator 2
 2108 0056 47E3      		ldi r20,lo8(55)
 2109 0058 50E0      		ldi r21,0
 2110 005a 61E0      		ldi r22,lo8(1)
 2111               	.LVL273:
 2112 005c 0E94 0000 		call double_max
 2113               	.LVL274:
 2114 0060 00C0      		rjmp .L148
 2115               		.cfi_endproc
 2116               	.LFE135:
 2118               		.section	.text.thumb_roll,"ax",@progbits
 2119               	.global	thumb_roll
 2121               	thumb_roll:
 2122               	.LFB144:
 363:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 364:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // ................................................................... Tap Dance
 365:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 366:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** qk_tap_dance_action_t tap_dance_actions[] = {
 367:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   [_ASTR] = ACTION_TAP_DANCE_FN         (asterisk)
 368:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_COMM] = ACTION_TAP_DANCE_FN         (comma)
 369:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_DOT]  = ACTION_TAP_DANCE_FN         (dot)
 370:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_ENT]  = ACTION_TAP_DANCE_FN_ADVANCED(NULL, enter, enter_reset)
 371:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_PRIV] = ACTION_TAP_DANCE_FN         (private)
 372:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_SEND] = ACTION_TAP_DANCE_FN         (send)
 373:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_SPC]  = ACTION_TAP_DANCE_FN_ADVANCED(NULL, space, space_reset)
 374:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_TILD] = ACTION_TAP_DANCE_FN_ADVANCED(NULL, tilde, tilde_reset)
 375:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifdef HASKELL
 376:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_COLN] = ACTION_TAP_DANCE_FN_ADVANCED(NULL, colon, colon_reset)
 377:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_LT]   = ACTION_TAP_DANCE_FN_ADVANCED(NULL, lesser, lesser_reset)
 378:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_GT]   = ACTION_TAP_DANCE_FN_ADVANCED(NULL, greater, greater_reset)
 379:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****  ,[_EQL]  = ACTION_TAP_DANCE_FN_ADVANCED(NULL, equal, equal_reset)
 380:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 381:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** };
 382:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 383:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // .............................................................. Dynamic Layers
 384:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 385:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define        LEFT    1
 386:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #define        RIGHT   2
 387:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t thumb = 0;
 388:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 389:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // rolling thumb combinations, see process_record_user()
 390:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // up,   up   -> _BASE
 391:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // up,   down -> _RSYMBOL
 392:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // down, up   -> _LSYMBOL
 393:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // down, down -> _MOUSE                     // see layer keycodes that raise mouse layer
 394:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 395:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t overlayer = 0;
 396:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 397:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // seamlessly switch left / right thumb layer combinations
 398:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void thumb_roll(keyrecord_t *record, uint8_t side, uint8_t shift, uint16_t keycode, uint8_t repeati
 399:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2123               		.loc 1 399 0 is_stmt 1
 2124               		.cfi_startproc
 2125               	.LVL275:
 2126 0000 AF92      		push r10
 2127               	.LCFI65:
 2128               		.cfi_def_cfa_offset 3
 2129               		.cfi_offset 10, -2
 2130 0002 BF92      		push r11
 2131               	.LCFI66:
 2132               		.cfi_def_cfa_offset 4
 2133               		.cfi_offset 11, -3
 2134 0004 CF92      		push r12
 2135               	.LCFI67:
 2136               		.cfi_def_cfa_offset 5
 2137               		.cfi_offset 12, -4
 2138 0006 EF92      		push r14
 2139               	.LCFI68:
 2140               		.cfi_def_cfa_offset 6
 2141               		.cfi_offset 14, -5
 2142 0008 0F93      		push r16
 2143               	.LCFI69:
 2144               		.cfi_def_cfa_offset 7
 2145               		.cfi_offset 16, -6
 2146 000a CF93      		push r28
 2147               	.LCFI70:
 2148               		.cfi_def_cfa_offset 8
 2149               		.cfi_offset 28, -7
 2150 000c DF93      		push r29
 2151               	.LCFI71:
 2152               		.cfi_def_cfa_offset 9
 2153               		.cfi_offset 29, -8
 2154               	/* prologue: function */
 2155               	/* frame size = 0 */
 2156               	/* stack size = 7 */
 2157               	.L__stack_usage = 7
 2158 000e C62F      		mov r28,r22
 2159 0010 D42F      		mov r29,r20
 2160 0012 5901      		movw r10,r18
 400:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
 2161               		.loc 1 400 0
 2162 0014 FC01      		movw r30,r24
 2163 0016 8281      		ldd r24,Z+2
 2164               	.LVL276:
 2165 0018 8823      		tst r24
 2166 001a 01F0      		breq .L154
 401:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     // repeating key does not trigger on first keypress, see process_record_user()
 402:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (repeating) { tap_mod(shift, keycode); return; }
 2167               		.loc 1 402 0
 2168 001c 0023      		tst r16
 2169 001e 01F0      		breq .L155
 2170               		.loc 1 402 0 is_stmt 0 discriminator 1
 2171 0020 B901      		movw r22,r18
 2172               	.LVL277:
 2173 0022 842F      		mov r24,r20
 2174 0024 90E0      		ldi r25,0
 2175               	/* epilogue start */
 403:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on(thumb_dn_layer);
 404:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer  = timer_read();
 405:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     thumb     |= side;
 406:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 407:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else {
 408:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (biton32(layer_state) == _MOUSE) { layer_off(_MOUSE); }  // both thumbs needed
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (thumb_dn_layer != _MOUSE) { layer_off(thumb_dn_layer); }
 410:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!key_press(shift, keycode)) {
 411:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       // release any opposing thumb_roll() layer
 412:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (overlayer) {
 413:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         layer_off(overlayer);
 414:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         overlayer = 0;
 415:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       }
 416:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       // opposite thumb down? see left right combination layer table above
 417:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       if (thumb & (side == LEFT ? RIGHT : LEFT)) {
 418:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         layer_on(thumb_up_layer);
 419:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         overlayer = thumb_up_layer;
 420:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       }
 421:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 422:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     clear_mods();
 423:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     thumb     &= ~side;
 424:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer  = 0;
 425:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 426:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2176               		.loc 1 426 0 is_stmt 1 discriminator 1
 2177 0026 DF91      		pop r29
 2178 0028 CF91      		pop r28
 2179               	.LVL278:
 2180 002a 0F91      		pop r16
 2181               	.LVL279:
 2182 002c EF90      		pop r14
 2183               	.LVL280:
 2184 002e CF90      		pop r12
 2185               	.LVL281:
 2186 0030 BF90      		pop r11
 2187 0032 AF90      		pop r10
 402:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on(thumb_dn_layer);
 2188               		.loc 1 402 0 discriminator 1
 2189 0034 0C94 0000 		jmp tap_mod
 2190               	.LVL282:
 2191               	.L155:
 403:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on(thumb_dn_layer);
 2192               		.loc 1 403 0
 2193 0038 8E2D      		mov r24,r14
 2194 003a 0E94 0000 		call layer_on
 2195               	.LVL283:
 404:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     thumb     |= side;
 2196               		.loc 1 404 0
 2197 003e 0E94 0000 		call timer_read
 2198               	.LVL284:
 2199 0042 9093 0000 		sts key_timer+1,r25
 2200 0046 8093 0000 		sts key_timer,r24
 405:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2201               		.loc 1 405 0
 2202 004a 8091 0000 		lds r24,thumb
 2203 004e C82B      		or r28,r24
 2204               	.LVL285:
 2205 0050 C093 0000 		sts thumb,r28
 2206               	.L153:
 2207               	/* epilogue start */
 2208               		.loc 1 426 0
 2209 0054 DF91      		pop r29
 2210               	.LVL286:
 2211 0056 CF91      		pop r28
 2212 0058 0F91      		pop r16
 2213               	.LVL287:
 2214 005a EF90      		pop r14
 2215               	.LVL288:
 2216 005c CF90      		pop r12
 2217               	.LVL289:
 2218 005e BF90      		pop r11
 2219 0060 AF90      		pop r10
 2220               	.LVL290:
 2221 0062 0895      		ret
 2222               	.LVL291:
 2223               	.L154:
 408:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     else if (thumb_dn_layer != _MOUSE) { layer_off(thumb_dn_layer); }
 2224               		.loc 1 408 0
 2225 0064 6091 0000 		lds r22,layer_state
 2226 0068 7091 0000 		lds r23,layer_state+1
 2227 006c 8091 0000 		lds r24,layer_state+2
 2228 0070 9091 0000 		lds r25,layer_state+3
 2229               	.LVL292:
 2230 0074 0E94 0000 		call biton32
 2231               	.LVL293:
 2232 0078 8830      		cpi r24,lo8(8)
 2233 007a 01F4      		brne .L157
 2234               	.L174:
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!key_press(shift, keycode)) {
 2235               		.loc 1 409 0 discriminator 1
 2236 007c 0E94 0000 		call layer_off
 2237               	.LVL294:
 2238               	.L158:
 410:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       // release any opposing thumb_roll() layer
 2239               		.loc 1 410 0
 2240 0080 B501      		movw r22,r10
 2241 0082 8D2F      		mov r24,r29
 2242 0084 0E94 0000 		call key_press
 2243               	.LVL295:
 2244 0088 8111      		cpse r24,__zero_reg__
 2245 008a 00C0      		rjmp .L160
 412:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         layer_off(overlayer);
 2246               		.loc 1 412 0
 2247 008c 8091 0000 		lds r24,overlayer
 2248 0090 8823      		tst r24
 2249 0092 01F0      		breq .L161
 413:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         overlayer = 0;
 2250               		.loc 1 413 0
 2251 0094 0E94 0000 		call layer_off
 2252               	.LVL296:
 414:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       }
 2253               		.loc 1 414 0
 2254 0098 1092 0000 		sts overlayer,__zero_reg__
 2255               	.L161:
 417:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         layer_on(thumb_up_layer);
 2256               		.loc 1 417 0
 2257 009c 8091 0000 		lds r24,thumb
 2258 00a0 90E0      		ldi r25,0
 2259 00a2 21E0      		ldi r18,lo8(1)
 2260 00a4 30E0      		ldi r19,0
 2261 00a6 C130      		cpi r28,lo8(1)
 2262 00a8 01F4      		brne .L162
 2263 00aa 22E0      		ldi r18,lo8(2)
 2264 00ac 30E0      		ldi r19,0
 2265               	.L162:
 417:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         layer_on(thumb_up_layer);
 2266               		.loc 1 417 0 is_stmt 0 discriminator 4
 2267 00ae 8223      		and r24,r18
 2268 00b0 9323      		and r25,r19
 2269 00b2 892B      		or r24,r25
 2270 00b4 01F0      		breq .L160
 418:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****         overlayer = thumb_up_layer;
 2271               		.loc 1 418 0 is_stmt 1
 2272 00b6 8C2D      		mov r24,r12
 2273 00b8 0E94 0000 		call layer_on
 2274               	.LVL297:
 419:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       }
 2275               		.loc 1 419 0
 2276 00bc C092 0000 		sts overlayer,r12
 2277               	.L160:
 422:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     thumb     &= ~side;
 2278               		.loc 1 422 0
 2279 00c0 0E94 0000 		call clear_mods
 2280               	.LVL298:
 423:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer  = 0;
 2281               		.loc 1 423 0
 2282 00c4 C095      		com r28
 2283               	.LVL299:
 2284 00c6 8091 0000 		lds r24,thumb
 2285 00ca C823      		and r28,r24
 2286               	.LVL300:
 2287 00cc C093 0000 		sts thumb,r28
 424:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2288               		.loc 1 424 0
 2289 00d0 1092 0000 		sts key_timer+1,__zero_reg__
 2290 00d4 1092 0000 		sts key_timer,__zero_reg__
 2291 00d8 00C0      		rjmp .L153
 2292               	.LVL301:
 2293               	.L157:
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!key_press(shift, keycode)) {
 2294               		.loc 1 409 0
 2295 00da F8E0      		ldi r31,lo8(8)
 2296 00dc EF16      		cp r14,r31
 2297 00de 01F0      		breq .L158
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!key_press(shift, keycode)) {
 2298               		.loc 1 409 0 is_stmt 0 discriminator 1
 2299 00e0 8E2D      		mov r24,r14
 2300 00e2 00C0      		rjmp .L174
 2301               		.cfi_endproc
 2302               	.LFE144:
 2304               		.section	.text.lt,"ax",@progbits
 2305               	.global	lt
 2307               	lt:
 2308               	.LFB145:
 427:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 428:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // extended LT macro for [shift]keycode [modifier]layer
 429:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void lt(keyrecord_t *record, uint8_t shift, uint16_t keycode, uint16_t modifier, uint8_t layer)
 430:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2309               		.loc 1 430 0 is_stmt 1
 2310               		.cfi_startproc
 2311               	.LVL302:
 2312 0000 EF92      		push r14
 2313               	.LCFI72:
 2314               		.cfi_def_cfa_offset 3
 2315               		.cfi_offset 14, -2
 2316 0002 FF92      		push r15
 2317               	.LCFI73:
 2318               		.cfi_def_cfa_offset 4
 2319               		.cfi_offset 15, -3
 2320 0004 0F93      		push r16
 2321               	.LCFI74:
 2322               		.cfi_def_cfa_offset 5
 2323               		.cfi_offset 16, -4
 2324 0006 1F93      		push r17
 2325               	.LCFI75:
 2326               		.cfi_def_cfa_offset 6
 2327               		.cfi_offset 17, -5
 2328 0008 CF93      		push r28
 2329               	.LCFI76:
 2330               		.cfi_def_cfa_offset 7
 2331               		.cfi_offset 28, -6
 2332 000a DF93      		push r29
 2333               	.LCFI77:
 2334               		.cfi_def_cfa_offset 8
 2335               		.cfi_offset 29, -7
 2336               	/* prologue: function */
 2337               	/* frame size = 0 */
 2338               	/* stack size = 6 */
 2339               	.L__stack_usage = 6
 2340 000c 162F      		mov r17,r22
 2341 000e 7A01      		movw r14,r20
 2342 0010 E901      		movw r28,r18
 431:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
 2343               		.loc 1 431 0
 2344 0012 FC01      		movw r30,r24
 2345 0014 8281      		ldd r24,Z+2
 2346               	.LVL303:
 2347 0016 8823      		tst r24
 2348 0018 01F0      		breq .L176
 432:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = timer_read();
 2349               		.loc 1 432 0
 2350 001a 0E94 0000 		call timer_read
 2351               	.LVL304:
 2352 001e 9093 0000 		sts key_timer+1,r25
 2353 0022 8093 0000 		sts key_timer,r24
 433:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (modifier) { register_code(modifier); }
 2354               		.loc 1 433 0
 2355 0026 2097      		sbiw r28,0
 2356 0028 01F0      		breq .L177
 2357               		.loc 1 433 0 is_stmt 0 discriminator 1
 2358 002a 8C2F      		mov r24,r28
 2359 002c 0E94 0000 		call register_code
 2360               	.LVL305:
 2361               	.L177:
 434:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on(layer);
 2362               		.loc 1 434 0 is_stmt 1
 2363 0030 802F      		mov r24,r16
 2364               	/* epilogue start */
 435:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 436:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else {
 437:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (modifier) { unregister_code(modifier); }
 438:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_off(layer);
 439:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     // for shifted keycodes, hence, LT_SHIFT
 440:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_press(shift, keycode);
 441:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     clear_mods();
 442:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 443:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 444:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2365               		.loc 1 444 0
 2366 0032 DF91      		pop r29
 2367 0034 CF91      		pop r28
 2368               	.LVL306:
 2369 0036 1F91      		pop r17
 2370               	.LVL307:
 2371 0038 0F91      		pop r16
 2372               	.LVL308:
 2373 003a FF90      		pop r15
 2374 003c EF90      		pop r14
 2375               	.LVL309:
 434:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on(layer);
 2376               		.loc 1 434 0
 2377 003e 0C94 0000 		jmp layer_on
 2378               	.LVL310:
 2379               	.L176:
 437:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_off(layer);
 2380               		.loc 1 437 0
 2381 0042 CD2B      		or r28,r29
 2382 0044 01F0      		breq .L178
 437:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_off(layer);
 2383               		.loc 1 437 0 is_stmt 0 discriminator 1
 2384 0046 822F      		mov r24,r18
 2385 0048 0E94 0000 		call unregister_code
 2386               	.LVL311:
 2387               	.L178:
 438:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     // for shifted keycodes, hence, LT_SHIFT
 2388               		.loc 1 438 0 is_stmt 1
 2389 004c 802F      		mov r24,r16
 2390 004e 0E94 0000 		call layer_off
 2391               	.LVL312:
 440:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     clear_mods();
 2392               		.loc 1 440 0
 2393 0052 B701      		movw r22,r14
 2394 0054 812F      		mov r24,r17
 2395 0056 0E94 0000 		call key_press
 2396               	.LVL313:
 441:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 2397               		.loc 1 441 0
 2398 005a 0E94 0000 		call clear_mods
 2399               	.LVL314:
 442:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2400               		.loc 1 442 0
 2401 005e 1092 0000 		sts key_timer+1,__zero_reg__
 2402 0062 1092 0000 		sts key_timer,__zero_reg__
 2403               	/* epilogue start */
 2404               		.loc 1 444 0
 2405 0066 DF91      		pop r29
 2406 0068 CF91      		pop r28
 2407               	.LVL315:
 2408 006a 1F91      		pop r17
 2409               	.LVL316:
 2410 006c 0F91      		pop r16
 2411               	.LVL317:
 2412 006e FF90      		pop r15
 2413 0070 EF90      		pop r14
 2414               	.LVL318:
 2415 0072 0895      		ret
 2416               		.cfi_endproc
 2417               	.LFE145:
 2419               		.section	.text.lt_shift,"ax",@progbits
 2420               	.global	lt_shift
 2422               	lt_shift:
 2423               	.LFB146:
 445:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 446:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // LT for S(keycode)
 447:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void lt_shift(keyrecord_t *record, uint16_t keycode, uint8_t layer)
 448:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2424               		.loc 1 448 0
 2425               		.cfi_startproc
 2426               	.LVL319:
 2427 0000 0F93      		push r16
 2428               	.LCFI78:
 2429               		.cfi_def_cfa_offset 3
 2430               		.cfi_offset 16, -2
 2431               	/* prologue: function */
 2432               	/* frame size = 0 */
 2433               	/* stack size = 1 */
 2434               	.L__stack_usage = 1
 449:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   lt(record, SHIFT, keycode, 0, layer);
 2435               		.loc 1 449 0
 2436 0002 042F      		mov r16,r20
 2437 0004 30E0      		ldi r19,0
 2438 0006 20E0      		ldi r18,0
 2439 0008 AB01      		movw r20,r22
 2440               	.LVL320:
 2441 000a 61E0      		ldi r22,lo8(1)
 2442               	.LVL321:
 2443 000c 0E94 0000 		call lt
 2444               	.LVL322:
 2445               	/* epilogue start */
 450:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2446               		.loc 1 450 0
 2447 0010 0F91      		pop r16
 2448               	.LVL323:
 2449 0012 0895      		ret
 2450               		.cfi_endproc
 2451               	.LFE146:
 2453               		.section	.text.tap_layer,"ax",@progbits
 2454               	.global	tap_layer
 2456               	tap_layer:
 2457               	.LFB147:
 451:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 452:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // set layer asap to overcome macro latency errors, notably tap dance, LT usage and..
 453:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // inexplicably sets layer_on() faster than can be done in thumb_roll() !!
 454:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tap_layer(keyrecord_t *record, uint8_t layer)
 455:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2458               		.loc 1 455 0
 2459               		.cfi_startproc
 2460               	.LVL324:
 2461               	/* prologue: function */
 2462               	/* frame size = 0 */
 2463               	/* stack size = 0 */
 2464               	.L__stack_usage = 0
 456:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   record->event.pressed ? layer_on(layer) : layer_off(layer);
 2465               		.loc 1 456 0
 2466 0000 FC01      		movw r30,r24
 2467 0002 8281      		ldd r24,Z+2
 2468               	.LVL325:
 2469 0004 8823      		tst r24
 2470 0006 01F0      		breq .L187
 2471               		.loc 1 456 0 is_stmt 0 discriminator 1
 2472 0008 862F      		mov r24,r22
 2473 000a 0C94 0000 		jmp layer_on
 2474               	.LVL326:
 2475               	.L187:
 2476               		.loc 1 456 0 discriminator 2
 2477 000e 862F      		mov r24,r22
 2478 0010 0C94 0000 		jmp layer_off
 2479               	.LVL327:
 2480               		.cfi_endproc
 2481               	.LFE147:
 2483               		.section	.text.clear_layers,"ax",@progbits
 2484               	.global	clear_layers
 2486               	clear_layers:
 2487               	.LFB148:
 457:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 458:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 459:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // ..................................................................... Keymaps
 460:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 461:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // void persistant_default_layer_set(uint16_t default_layer)
 462:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // {
 463:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** //   eeconfig_update_default_layer(default_layer);
 464:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** //   default_layer_set            (default_layer);
 465:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // }
 466:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 467:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint16_t tt_keycode = 0;             // current TT keycode
 468:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 469:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void clear_layers(void)
 470:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2488               		.loc 1 470 0 is_stmt 1
 2489               		.cfi_startproc
 2490 0000 CF93      		push r28
 2491               	.LCFI79:
 2492               		.cfi_def_cfa_offset 3
 2493               		.cfi_offset 28, -2
 2494               	/* prologue: function */
 2495               	/* frame size = 0 */
 2496               	/* stack size = 1 */
 2497               	.L__stack_usage = 1
 2498               	.LVL328:
 471:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   uint8_t layer;
 472:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   for (layer = 0; layer < _END_LAYERS; layer++) { layer_off(layer); }
 2499               		.loc 1 472 0
 2500 0002 C0E0      		ldi r28,0
 2501               	.LVL329:
 2502               	.L189:
 2503               		.loc 1 472 0 is_stmt 0 discriminator 3
 2504 0004 8C2F      		mov r24,r28
 2505 0006 0E94 0000 		call layer_off
 2506               	.LVL330:
 2507 000a CF5F      		subi r28,lo8(-(1))
 2508               	.LVL331:
 2509 000c C031      		cpi r28,lo8(16)
 2510 000e 01F4      		brne .L189
 473:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   mods       = 0;
 2511               		.loc 1 473 0 is_stmt 1
 2512 0010 1092 0000 		sts mods,__zero_reg__
 474:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   key_timer  = 0;
 2513               		.loc 1 474 0
 2514 0014 1092 0000 		sts key_timer+1,__zero_reg__
 2515 0018 1092 0000 		sts key_timer,__zero_reg__
 475:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   dt_shift   = 0;
 2516               		.loc 1 475 0
 2517 001c 1092 0000 		sts dt_shift,__zero_reg__
 476:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   thumb      = 0;
 2518               		.loc 1 476 0
 2519 0020 1092 0000 		sts thumb,__zero_reg__
 477:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   overlayer  = 0;
 2520               		.loc 1 477 0
 2521 0024 1092 0000 		sts overlayer,__zero_reg__
 478:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   tt_keycode = 0;
 2522               		.loc 1 478 0
 2523 0028 1092 0000 		sts tt_keycode+1,__zero_reg__
 2524 002c 1092 0000 		sts tt_keycode,__zero_reg__
 2525               	/* epilogue start */
 479:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2526               		.loc 1 479 0
 2527 0030 CF91      		pop r28
 2528               	.LVL332:
 2529 0032 0895      		ret
 2530               		.cfi_endproc
 2531               	.LFE148:
 2533               		.section	.text.raise_number,"ax",@progbits
 2534               	.global	raise_number
 2536               	raise_number:
 2537               	.LFB149:
 480:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 481:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t double_key = 0;
 482:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 483:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // dual thumb key to raise number layer
 484:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** bool raise_number(keyrecord_t *record, uint8_t side)
 485:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2538               		.loc 1 485 0
 2539               		.cfi_startproc
 2540               	.LVL333:
 2541 0000 CF93      		push r28
 2542               	.LCFI80:
 2543               		.cfi_def_cfa_offset 3
 2544               		.cfi_offset 28, -2
 2545               	/* prologue: function */
 2546               	/* frame size = 0 */
 2547               	/* stack size = 1 */
 2548               	.L__stack_usage = 1
 486:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
 2549               		.loc 1 486 0
 2550 0002 FC01      		movw r30,r24
 2551 0004 C281      		ldd r28,Z+2
 2552 0006 8091 0000 		lds r24,double_key
 2553               	.LVL334:
 2554 000a CC23      		tst r28
 2555 000c 01F0      		breq .L192
 487:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     double_key |= side;
 2556               		.loc 1 487 0
 2557 000e 682B      		or r22,r24
 2558               	.LVL335:
 2559 0010 6093 0000 		sts double_key,r22
 488:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (double_key == (LEFT | RIGHT)) {
 2560               		.loc 1 488 0
 2561 0014 6330      		cpi r22,lo8(3)
 2562 0016 01F0      		breq .L193
 2563               	.L195:
 489:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       layer_on(_NUMBER);
 490:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       return true;
 491:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 492:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 493:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else {
 494:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     double_key &= ~side;
 495:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!double_key) { layer_off(_NUMBER); }  // allow single key to continue on layer :-)
 496:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 497:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   return false;
 2564               		.loc 1 497 0
 2565 0018 C0E0      		ldi r28,0
 2566               	.LVL336:
 2567               	.L191:
 498:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2568               		.loc 1 498 0
 2569 001a 8C2F      		mov r24,r28
 2570               	/* epilogue start */
 2571 001c CF91      		pop r28
 2572 001e 0895      		ret
 2573               	.LVL337:
 2574               	.L193:
 489:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****       layer_on(_NUMBER);
 2575               		.loc 1 489 0
 2576 0020 87E0      		ldi r24,lo8(7)
 2577 0022 0E94 0000 		call layer_on
 2578               	.LVL338:
 490:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     }
 2579               		.loc 1 490 0
 2580 0026 00C0      		rjmp .L191
 2581               	.LVL339:
 2582               	.L192:
 494:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!double_key) { layer_off(_NUMBER); }  // allow single key to continue on layer :-)
 2583               		.loc 1 494 0
 2584 0028 6095      		com r22
 2585               	.LVL340:
 2586 002a 6823      		and r22,r24
 2587               	.LVL341:
 2588 002c 6093 0000 		sts double_key,r22
 495:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2589               		.loc 1 495 0
 2590 0030 6111      		cpse r22,__zero_reg__
 2591 0032 00C0      		rjmp .L195
 495:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2592               		.loc 1 495 0 is_stmt 0 discriminator 1
 2593 0034 87E0      		ldi r24,lo8(7)
 2594 0036 0E94 0000 		call layer_off
 2595               	.LVL342:
 2596 003a 00C0      		rjmp .L191
 2597               		.cfi_endproc
 2598               	.LFE149:
 2600               		.section	.text.tt_clear,"ax",@progbits
 2601               	.global	tt_clear
 2603               	tt_clear:
 2604               	.LFB150:
 499:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 500:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tt_clear(void)
 501:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2605               		.loc 1 501 0 is_stmt 1
 2606               		.cfi_startproc
 2607               	/* prologue: function */
 2608               	/* frame size = 0 */
 2609               	/* stack size = 0 */
 2610               	.L__stack_usage = 0
 502:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   clear_layers();
 2611               		.loc 1 502 0
 2612 0000 0E94 0000 		call clear_layers
 2613               	.LVL343:
 503:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   set_single_persistent_default_layer(_BASE);
 2614               		.loc 1 503 0
 2615 0004 80E0      		ldi r24,0
 2616 0006 0C94 0000 		jmp set_single_persistent_default_layer
 2617               	.LVL344:
 2618               		.cfi_endproc
 2619               	.LFE150:
 2621               		.section	.text.tt_escape,"ax",@progbits
 2622               	.global	tt_escape
 2624               	tt_escape:
 2625               	.LFB151:
 504:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 505:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 506:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // alternate escape for TT layers, see process_record_user()
 507:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void tt_escape(keyrecord_t *record, uint16_t keycode)
 508:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2626               		.loc 1 508 0
 2627               		.cfi_startproc
 2628               	.LVL345:
 2629 0000 CF93      		push r28
 2630               	.LCFI81:
 2631               		.cfi_def_cfa_offset 3
 2632               		.cfi_offset 28, -2
 2633 0002 DF93      		push r29
 2634               	.LCFI82:
 2635               		.cfi_def_cfa_offset 4
 2636               		.cfi_offset 29, -3
 2637               	/* prologue: function */
 2638               	/* frame size = 0 */
 2639               	/* stack size = 2 */
 2640               	.L__stack_usage = 2
 2641 0004 EB01      		movw r28,r22
 509:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) { key_timer = timer_read(); }
 2642               		.loc 1 509 0
 2643 0006 FC01      		movw r30,r24
 2644 0008 8281      		ldd r24,Z+2
 2645               	.LVL346:
 2646 000a 8823      		tst r24
 2647 000c 01F0      		breq .L198
 2648               		.loc 1 509 0 is_stmt 0 discriminator 1
 2649 000e 0E94 0000 		call timer_read
 2650               	.LVL347:
 2651 0012 9093 0000 		sts key_timer+1,r25
 2652 0016 8093 0000 		sts key_timer,r24
 2653               	.L197:
 2654               	/* epilogue start */
 510:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   else {
 511:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (timer_elapsed(key_timer) < TAPPING_TERM) { tt_keycode = keycode; }
 512:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 513:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 514:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2655               		.loc 1 514 0 is_stmt 1
 2656 001a DF91      		pop r29
 2657 001c CF91      		pop r28
 2658               	.LVL348:
 2659 001e 0895      		ret
 2660               	.LVL349:
 2661               	.L198:
 511:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 2662               		.loc 1 511 0
 2663 0020 8091 0000 		lds r24,key_timer
 2664 0024 9091 0000 		lds r25,key_timer+1
 2665 0028 0E94 0000 		call timer_elapsed
 2666               	.LVL350:
 2667 002c 8A3F      		cpi r24,-6
 2668 002e 9105      		cpc r25,__zero_reg__
 2669 0030 00F4      		brsh .L200
 511:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     key_timer = 0;
 2670               		.loc 1 511 0 is_stmt 0 discriminator 1
 2671 0032 D093 0000 		sts tt_keycode+1,r29
 2672 0036 C093 0000 		sts tt_keycode,r28
 2673               	.L200:
 512:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 2674               		.loc 1 512 0 is_stmt 1
 2675 003a 1092 0000 		sts key_timer+1,__zero_reg__
 2676 003e 1092 0000 		sts key_timer,__zero_reg__
 2677               		.loc 1 514 0
 2678 0042 00C0      		rjmp .L197
 2679               		.cfi_endproc
 2680               	.LFE151:
 2682               		.section	.text.toggle_plover,"ax",@progbits
 2683               	.global	toggle_plover
 2685               	toggle_plover:
 2686               	.LFB152:
 515:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 516:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** // txbolt plover run state
 517:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** static uint8_t plover = 0;
 518:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 519:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void toggle_plover(uint8_t state)
 520:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2687               		.loc 1 520 0
 2688               		.cfi_startproc
 2689               	.LVL351:
 2690 0000 CF93      		push r28
 2691               	.LCFI83:
 2692               		.cfi_def_cfa_offset 3
 2693               		.cfi_offset 28, -2
 2694               	/* prologue: function */
 2695               	/* frame size = 0 */
 2696               	/* stack size = 1 */
 2697               	.L__stack_usage = 1
 2698 0002 C82F      		mov r28,r24
 521:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (plover != state) {
 2699               		.loc 1 521 0
 2700 0004 8091 0000 		lds r24,plover
 2701               	.LVL352:
 2702 0008 8C17      		cp r24,r28
 2703 000a 01F0      		breq .L201
 2704               		.file 3 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h"
   1:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** 
   2:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** // simple window manager specific plover keybind hook
   3:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** 
   4:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** // toggle plover application, see herbstluftwm/config/appbinds
   5:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** register_code  (KC_LGUI);
 2705               		.loc 3 5 0
 2706 000c 83EE      		ldi r24,lo8(-29)
 2707 000e 0E94 0000 		call register_code
 2708               	.LVL353:
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** register_code  (KC_LCTL);
 2709               		.loc 3 6 0
 2710 0012 80EE      		ldi r24,lo8(-32)
 2711 0014 0E94 0000 		call register_code
 2712               	.LVL354:
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** tap_key        (KC_EQL);
 2713               		.loc 3 7 0
 2714 0018 8EE2      		ldi r24,lo8(46)
 2715 001a 90E0      		ldi r25,0
 2716 001c 0E94 0000 		call tap_key
 2717               	.LVL355:
   8:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** unregister_code(KC_LCTL);
 2718               		.loc 3 8 0
 2719 0020 80EE      		ldi r24,lo8(-32)
 2720 0022 0E94 0000 		call unregister_code
 2721               	.LVL356:
   9:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/plover_keybind.h **** unregister_code(KC_LGUI);
 2722               		.loc 3 9 0
 2723 0026 83EE      		ldi r24,lo8(-29)
 2724 0028 0E94 0000 		call unregister_code
 2725               	.LVL357:
 522:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifdef PLOVER_KEYBIND
 523:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #include "plover_keybind.h"
 524:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 525:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     plover = state;
 2726               		.loc 1 525 0
 2727 002c C093 0000 		sts plover,r28
 2728               	.L201:
 2729               	/* epilogue start */
 526:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 527:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2730               		.loc 1 527 0
 2731 0030 CF91      		pop r28
 2732               	.LVL358:
 2733 0032 0895      		ret
 2734               		.cfi_endproc
 2735               	.LFE152:
 2737               		.section	.text.base_layer,"ax",@progbits
 2738               	.global	base_layer
 2740               	base_layer:
 2741               	.LFB153:
 528:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 529:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void base_layer(void)
 530:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2742               		.loc 1 530 0
 2743               		.cfi_startproc
 2744               	/* prologue: function */
 2745               	/* frame size = 0 */
 2746               	/* stack size = 0 */
 2747               	.L__stack_usage = 0
 531:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifdef AUDIO_ENABLE
 532:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   plover ? PLAY_SONG(song_plover_gb) : PLAY_SONG(song_qwerty);
 533:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 534:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   clear_layers();
 2748               		.loc 1 534 0
 2749 0000 0E94 0000 		call clear_layers
 2750               	.LVL359:
 535:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   set_single_persistent_default_layer(_BASE);
 2751               		.loc 1 535 0
 2752 0004 80E0      		ldi r24,0
 2753 0006 0E94 0000 		call set_single_persistent_default_layer
 2754               	.LVL360:
 536:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   toggle_plover(0);
 2755               		.loc 1 536 0
 2756 000a 80E0      		ldi r24,0
 2757 000c 0C94 0000 		jmp toggle_plover
 2758               	.LVL361:
 2759               		.cfi_endproc
 2760               	.LFE153:
 2762               		.section	.text.steno,"ax",@progbits
 2763               	.global	steno
 2765               	steno:
 2766               	.LFB154:
 537:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 538:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 539:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void steno(keyrecord_t *record)
 540:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2767               		.loc 1 540 0
 2768               		.cfi_startproc
 2769               	.LVL362:
 2770               	/* prologue: function */
 2771               	/* frame size = 0 */
 2772               	/* stack size = 0 */
 2773               	.L__stack_usage = 0
 541:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
 2774               		.loc 1 541 0
 2775 0000 FC01      		movw r30,r24
 2776 0002 8281      		ldd r24,Z+2
 2777               	.LVL363:
 2778 0004 8823      		tst r24
 2779 0006 01F0      		breq .L204
 542:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #ifdef AUDIO_ENABLE
 543:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     PLAY_SONG(song_plover);
 544:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** #endif
 545:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     clear_layers();
 2780               		.loc 1 545 0
 2781 0008 0E94 0000 		call clear_layers
 2782               	.LVL364:
 546:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     layer_on(_PLOVER);
 2783               		.loc 1 546 0
 2784 000c 86E0      		ldi r24,lo8(6)
 2785 000e 0E94 0000 		call layer_on
 2786               	.LVL365:
 547:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!eeconfig_is_enabled()) { eeconfig_init(); }
 2787               		.loc 1 547 0
 2788 0012 0E94 0000 		call eeconfig_is_enabled
 2789               	.LVL366:
 2790 0016 8111      		cpse r24,__zero_reg__
 2791 0018 00C0      		rjmp .L207
 2792               		.loc 1 547 0 is_stmt 0 discriminator 1
 2793 001a 0E94 0000 		call eeconfig_init
 2794               	.LVL367:
 2795               	.L207:
 548:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     keymap_config.raw  = eeconfig_read_keymap();
 2796               		.loc 1 548 0 is_stmt 1
 2797 001e 0E94 0000 		call eeconfig_read_keymap
 2798               	.LVL368:
 2799 0022 90E0      		ldi r25,0
 2800 0024 9093 0000 		sts keymap_config+1,r25
 2801 0028 8093 0000 		sts keymap_config,r24
 549:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     keymap_config.nkro = 1;
 2802               		.loc 1 549 0
 2803 002c 8068      		ori r24,lo8(1<<7)
 2804 002e 8093 0000 		sts keymap_config,r24
 550:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     eeconfig_update_keymap(keymap_config.raw);
 2805               		.loc 1 550 0
 2806 0032 0E94 0000 		call eeconfig_update_keymap
 2807               	.LVL369:
 551:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     if (!plover) { toggle_plover(1); }
 2808               		.loc 1 551 0
 2809 0036 8091 0000 		lds r24,plover
 2810 003a 8111      		cpse r24,__zero_reg__
 2811 003c 00C0      		rjmp .L204
 2812               		.loc 1 551 0 is_stmt 0 discriminator 1
 2813 003e 81E0      		ldi r24,lo8(1)
 2814 0040 0C94 0000 		jmp toggle_plover
 2815               	.LVL370:
 2816               	.L204:
 2817               	/* epilogue start */
 552:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 553:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2818               		.loc 1 553 0 is_stmt 1
 2819 0044 0895      		ret
 2820               		.cfi_endproc
 2821               	.LFE154:
 2823               		.section	.text.steno_exit,"ax",@progbits
 2824               	.global	steno_exit
 2826               	steno_exit:
 2827               	.LFB155:
 554:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** 
 555:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** void steno_exit(keyrecord_t *record)
 556:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** {
 2828               		.loc 1 556 0
 2829               		.cfi_startproc
 2830               	.LVL371:
 2831               	/* prologue: function */
 2832               	/* frame size = 0 */
 2833               	/* stack size = 0 */
 2834               	.L__stack_usage = 0
 557:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   if (record->event.pressed) {
 2835               		.loc 1 557 0
 2836 0000 FC01      		movw r30,r24
 2837 0002 8281      		ldd r24,Z+2
 2838               	.LVL372:
 2839 0004 8823      		tst r24
 2840 0006 01F0      		breq .L209
 558:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     base_layer();
 2841               		.loc 1 558 0
 2842 0008 0E94 0000 		call base_layer
 2843               	.LVL373:
 559:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****     toggle_plover(0);
 2844               		.loc 1 559 0
 2845 000c 80E0      		ldi r24,0
 2846 000e 0C94 0000 		jmp toggle_plover
 2847               	.LVL374:
 2848               	.L209:
 2849               	/* epilogue start */
 560:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   }
 561:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 2850               		.loc 1 561 0
 2851 0012 0895      		ret
 2852               		.cfi_endproc
 2853               	.LFE155:
 2855               		.section	.text.process_record_user,"ax",@progbits
 2856               	.global	process_record_user
 2858               	process_record_user:
 2859               	.LFB156:
 2860               		.file 4 "keyboards/splitography/keymaps/beaklti/keymap.c"
   1:keyboards/splitography/keymaps/beaklti/keymap.c **** // This is the canonical layout file for the Quantum project. If you want to add another keyboard,
   2:keyboards/splitography/keymaps/beaklti/keymap.c **** // this is the style you want to emulate.
   3:keyboards/splitography/keymaps/beaklti/keymap.c **** //
   4:keyboards/splitography/keymaps/beaklti/keymap.c **** // To flash splitography / planck firmware
   5:keyboards/splitography/keymaps/beaklti/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
   6:keyboards/splitography/keymaps/beaklti/keymap.c **** //   Reset keyboard or press hw reset button on base
   7:keyboards/splitography/keymaps/beaklti/keymap.c **** //
   8:keyboards/splitography/keymaps/beaklti/keymap.c **** //   cd qmk_firmware/keyboards/<keyboard>
   9:keyboards/splitography/keymaps/beaklti/keymap.c **** //   sudo make KEYMAP=<keymap> dfu
  10:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  11:keyboards/splitography/keymaps/beaklti/keymap.c **** //   sudo make clean           (good practice before flashing)
  12:keyboards/splitography/keymaps/beaklti/keymap.c **** //   sudo make KEYMAP=<keymap> (to compile check)
  13:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  14:keyboards/splitography/keymaps/beaklti/keymap.c **** // Package requirements (for arch linux)
  15:keyboards/splitography/keymaps/beaklti/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
  16:keyboards/splitography/keymaps/beaklti/keymap.c **** //   avr-gcc-atmel
  17:keyboards/splitography/keymaps/beaklti/keymap.c **** //   avr-libc-atmel
  18:keyboards/splitography/keymaps/beaklti/keymap.c **** //   dfu-programmer
  19:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  20:keyboards/splitography/keymaps/beaklti/keymap.c **** // Notes
  21:keyboards/splitography/keymaps/beaklti/keymap.c **** // ▔▔▔▔▔
  22:keyboards/splitography/keymaps/beaklti/keymap.c **** //   ** E R G O   W I D E   S P L I T ** Layout
  23:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  24:keyboards/splitography/keymaps/beaklti/keymap.c **** //   Autocompletion tap dance key pairs (),[],{} are available from the
  25:keyboards/splitography/keymaps/beaklti/keymap.c **** //   number/symbol layer, as well as, numerous (un)shift key values
  26:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  27:keyboards/splitography/keymaps/beaklti/keymap.c **** //   #define PRIVATE_STRING includes private_string.h, a user defined code
  28:keyboards/splitography/keymaps/beaklti/keymap.c **** //   block for the PRIV tap dance e.g. SEND_STRING("secret messape"),
  29:keyboards/splitography/keymaps/beaklti/keymap.c **** //   see function private()
  30:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  31:keyboards/splitography/keymaps/beaklti/keymap.c **** // Code
  32:keyboards/splitography/keymaps/beaklti/keymap.c **** // ▔▔▔▔
  33:keyboards/splitography/keymaps/beaklti/keymap.c **** //   This source is shamelessly based on the "default" planck layout
  34:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  35:keyboards/splitography/keymaps/beaklti/keymap.c **** //   #ifdef/#endif block structures are not indented, as syntax highlighting
  36:keyboards/splitography/keymaps/beaklti/keymap.c **** //   in vim is sufficient for identification
  37:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  38:keyboards/splitography/keymaps/beaklti/keymap.c **** //   c++ commenting style is used throughout
  39:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  40:keyboards/splitography/keymaps/beaklti/keymap.c **** // Change history
  41:keyboards/splitography/keymaps/beaklti/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔
  42:keyboards/splitography/keymaps/beaklti/keymap.c **** //   See http://thedarnedestthing.com/colophon
  43:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  44:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  45:keyboards/splitography/keymaps/beaklti/keymap.c **** //                === N O T E ===
  46:keyboards/splitography/keymaps/beaklti/keymap.c **** //
  47:keyboards/splitography/keymaps/beaklti/keymap.c **** // sudo CPATH=<keymap.c directory>/common make ...
  48:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  49:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  50:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifndef PLANCK
  51:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifndef SPLITOGRAPHY
  52:keyboards/splitography/keymaps/beaklti/keymap.c **** #define SPLITOGRAPHY
  53:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  54:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  55:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  56:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "config.h"
  57:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
  58:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "splitography.h"
  59:keyboards/splitography/keymaps/beaklti/keymap.c **** #else
  60:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "planck.h"
  61:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  62:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "action_layer.h"
  63:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef STENO_ENABLE
  64:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "keymap_steno.h"
  65:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  66:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef AUDIO_ENABLE
  67:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "audio.h"
  68:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  69:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "eeconfig.h"
  70:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  71:keyboards/splitography/keymaps/beaklti/keymap.c **** extern keymap_config_t keymap_config;
  72:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  73:keyboards/splitography/keymaps/beaklti/keymap.c **** enum keyboard_layers {
  74:keyboards/splitography/keymaps/beaklti/keymap.c ****   _BASE = 0
  75:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_SHIFT
  76:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_LSHIFT
  77:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_RSHIFT
  78:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_LSYMBOL
  79:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_RSYMBOL
  80:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_PLOVER
  81:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_NUMBER
  82:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifndef STENO_ENABLE
  83:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_FNCKEY
  84:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  85:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_MOUSE
  86:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_EDIT
  87:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef PLANCK
  88:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_ADJUST
  89:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
  90:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_TTFNCKEY
  91:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_TTCAPS
  92:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_TTCURSOR
  93:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_TTMOUSE
  94:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_TTNUMBER
  95:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_TTREGEX
  96:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,_END_LAYERS
  97:keyboards/splitography/keymaps/beaklti/keymap.c **** };
  98:keyboards/splitography/keymaps/beaklti/keymap.c **** 
  99:keyboards/splitography/keymaps/beaklti/keymap.c **** enum keyboard_keycodes {
 100:keyboards/splitography/keymaps/beaklti/keymap.c ****   BASE = SAFE_RANGE
 101:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,BASE1
 102:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,BASE2
 103:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,PLOVER
 104:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,SM_G      // pseudo MT   (MOD_LALT | MOD_LSFT, S(KC_G)) for shifted key-codes, see process_record
 105:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,SM_I      // pseudo MT   (MOD_LSFT, S(KC_I))            for shifted key-codes, see process_record
 106:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,SA_PERC   // pseudo ALT_T(S(KC_5))                      for shifted key-codes, see process_record
 107:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,SG_TILD   // pseudo GUI_T(S(KC_GRV))                    for shifted key-codes, see process_record
 108:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,SL_DEL    // pseudo LT   (_MOUSE, KC_DEL)               for shifted key-codes, see process_record
 109:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,SL_TAB    // pseudo LT   (_MOUSE, S(KC_TAB))
 110:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,TT_ESC
 111:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef STENO_ENABLE
 112:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,PS_STNA = STN_A
 113:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,PS_STNO = STN_O
 114:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,PS_STNE = STN_E
 115:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,PS_STNU = STN_U
 116:keyboards/splitography/keymaps/beaklti/keymap.c **** #else
 117:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,LT_C    = LT (_LSYMBOL, KC_C)
 118:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,LT_V    = LT (_NUMBER,  KC_V)
 119:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,LT_N    = LT (_FNCKEY,  KC_N)
 120:keyboards/splitography/keymaps/beaklti/keymap.c ****  ,LT_M    = LT (_RSYMBOL, KC_M)
 121:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 122:keyboards/splitography/keymaps/beaklti/keymap.c **** };
 123:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 124:keyboards/splitography/keymaps/beaklti/keymap.c **** // modifier keys
 125:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef PLANCK
 126:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CT_RGHT CTL_T(KC_RGHT)
 127:keyboards/splitography/keymaps/beaklti/keymap.c **** #define AT_DOWN ALT_T(KC_DOWN)
 128:keyboards/splitography/keymaps/beaklti/keymap.c **** #define GT_UP   GUI_T(KC_UP)
 129:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 130:keyboards/splitography/keymaps/beaklti/keymap.c **** #define AT_B    ALT_T(KC_B)
 131:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CT_C    CTL_T(KC_C)
 132:keyboards/splitography/keymaps/beaklti/keymap.c **** #define MT_E    MT   (MOD_LCTL | MOD_LALT, KC_E)
 133:keyboards/splitography/keymaps/beaklti/keymap.c **** #define ST_A    SFT_T(KC_A)
 134:keyboards/splitography/keymaps/beaklti/keymap.c **** #define ST_SPC  SFT_T(KC_SPC)
 135:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 136:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_Q  GUI_T(KC_Q)
 137:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_H  CTL_T(KC_H)
 138:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_E  ALT_T(KC_E)
 139:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_A  SFT_T(KC_A)
 140:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_T  SFT_T(KC_T)
 141:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_R  ALT_T(KC_R)
 142:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_S  CTL_T(KC_S)
 143:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HOME_W  GUI_T(KC_W)
 144:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 145:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef PLANCK
 146:keyboards/splitography/keymaps/beaklti/keymap.c **** #define S_DOWN  S    (KC_DOWN)
 147:keyboards/splitography/keymaps/beaklti/keymap.c **** #define S_LEFT  S    (KC_LEFT)
 148:keyboards/splitography/keymaps/beaklti/keymap.c **** #define S_RGHT  S    (KC_RGHT)
 149:keyboards/splitography/keymaps/beaklti/keymap.c **** #define S_UP    S    (KC_UP)
 150:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 151:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 152:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "tapdance.h"
 153:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 154:keyboards/splitography/keymaps/beaklti/keymap.c **** // keycodes
 155:keyboards/splitography/keymaps/beaklti/keymap.c **** #define ___x___ KC_TRNS
 156:keyboards/splitography/keymaps/beaklti/keymap.c **** #define ___fn__ KC_TRNS
 157:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef _______
 158:keyboards/splitography/keymaps/beaklti/keymap.c **** #undef _______
 159:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 160:keyboards/splitography/keymaps/beaklti/keymap.c **** #define _______ KC_NO
 161:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 162:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef HASKELL
 163:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_COLN TD_COLN
 164:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_LT   TD_LT
 165:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_GT   TD_GT
 166:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_EQL  TD_EQL
 167:keyboards/splitography/keymaps/beaklti/keymap.c **** #else
 168:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_COLN KC_COLN
 169:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_LT   KC_LT
 170:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_GT   KC_GT
 171:keyboards/splitography/keymaps/beaklti/keymap.c **** #define HS_EQL  KC_EQL
 172:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 173:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 174:keyboards/splitography/keymaps/beaklti/keymap.c **** #define COPY    LCTL(KC_C)
 175:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CUT     LCTL(KC_X)
 176:keyboards/splitography/keymaps/beaklti/keymap.c **** #define EOT     LCTL(KC_D)
 177:keyboards/splitography/keymaps/beaklti/keymap.c **** #define NAK     LCTL(KC_U)
 178:keyboards/splitography/keymaps/beaklti/keymap.c **** #define PASTE   LCTL(KC_V)
 179:keyboards/splitography/keymaps/beaklti/keymap.c **** #define UNDO    LCTL(KC_Z)
 180:keyboards/splitography/keymaps/beaklti/keymap.c **** #define TMCOPY  LALT(LCTL(KC_C))
 181:keyboards/splitography/keymaps/beaklti/keymap.c **** #define TMPASTE LALT(LCTL(KC_V))
 182:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_BSPC LT  (_RSYMBOL, KC_BSPC)     // see process_record_user() for extended handling
 183:keyboards/splitography/keymaps/beaklti/keymap.c **** #define TT_BSPC LT  (_TTCURSOR, KC_BSPC)
 184:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
 185:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_DEL  LT  (_EDIT, KC_DEL)
 186:keyboards/splitography/keymaps/beaklti/keymap.c **** #else
 187:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_DEL  LT  (_ADJUST, KC_DEL)
 188:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_INS  LT  (_NUMBER, KC_INS)
 189:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_LEFT LT  (_EDIT,   KC_LEFT)
 190:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 191:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_ESC  LT  (_LSYMBOL, KC_ESC)
 192:keyboards/splitography/keymaps/beaklti/keymap.c **** #define LT_I    LT  (_LSHIFT, KC_I)
 193:keyboards/splitography/keymaps/beaklti/keymap.c **** #define OS_ALT  OSM (MOD_LALT)
 194:keyboards/splitography/keymaps/beaklti/keymap.c **** #define OS_CTL  OSM (MOD_LCTL)
 195:keyboards/splitography/keymaps/beaklti/keymap.c **** #define OS_GUI  OSM (MOD_LGUI)
 196:keyboards/splitography/keymaps/beaklti/keymap.c **** #define OS_SFT  OSM (MOD_LSFT)
 197:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 198:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CNTR_TL TT  (_TTFNCKEY)
 199:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CNTR_TR TT  (_TTCAPS)               // pseudo capslock to avoid TT key_timer conflicts
 200:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CNTR_HL TT  (_TTCURSOR)
 201:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CNTR_HR TT  (_TTMOUSE)
 202:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CNTR_BL TT  (_TTNUMBER)
 203:keyboards/splitography/keymaps/beaklti/keymap.c **** #define CNTR_BR TT  (_TTREGEX)
 204:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 205:keyboards/splitography/keymaps/beaklti/keymap.c **** // ........................................................ Default Alpha Layout
 206:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 207:keyboards/splitography/keymaps/beaklti/keymap.c **** const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
 208:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 209:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "base_layout.h"
 210:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "steno_layout.h"
 211:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 212:keyboards/splitography/keymaps/beaklti/keymap.c **** // ...................................................... Number / Function Keys
 213:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 214:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "number_fkey_layout.h"
 215:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 216:keyboards/splitography/keymaps/beaklti/keymap.c **** // ......................................................... Symbol / Navigation
 217:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 218:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "symbol_guifn_layout.h"
 219:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 220:keyboards/splitography/keymaps/beaklti/keymap.c **** // ............................................................... Toggle Layers
 221:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 222:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "toggle_layout.h"
 223:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 224:keyboards/splitography/keymaps/beaklti/keymap.c **** // ......................................................... Short Cuts / Adjust
 225:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 226:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "chord_layout.h"
 227:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 228:keyboards/splitography/keymaps/beaklti/keymap.c **** };
 229:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 230:keyboards/splitography/keymaps/beaklti/keymap.c **** // ...................................................................... Sounds
 231:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 232:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "sounds.h"
 233:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 234:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 235:keyboards/splitography/keymaps/beaklti/keymap.c **** // User Keycode Trap
 236:keyboards/splitography/keymaps/beaklti/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
 237:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 238:keyboards/splitography/keymaps/beaklti/keymap.c **** #include "keycode_functions.c"
 239:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 240:keyboards/splitography/keymaps/beaklti/keymap.c **** #define BASE_1  1
 241:keyboards/splitography/keymaps/beaklti/keymap.c **** #define BASE_2  2
 242:keyboards/splitography/keymaps/beaklti/keymap.c **** #define BASE_12 3
 243:keyboards/splitography/keymaps/beaklti/keymap.c **** static uint8_t base_n    = 0;
 244:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 245:keyboards/splitography/keymaps/beaklti/keymap.c **** static uint8_t down_rule = 0;               // (1) substitute keycode (2) keycode+shift, see tap_lt
 246:keyboards/splitography/keymaps/beaklti/keymap.c **** static uint8_t repeating = 0;               // rolling key repeat mode, see thumb_roll()
 247:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 248:keyboards/splitography/keymaps/beaklti/keymap.c **** bool process_record_user(uint16_t keycode, keyrecord_t *record)
 249:keyboards/splitography/keymaps/beaklti/keymap.c **** {
 2861               		.loc 4 249 0
 2862               		.cfi_startproc
 2863               	.LVL375:
 2864 0000 AF92      		push r10
 2865               	.LCFI84:
 2866               		.cfi_def_cfa_offset 3
 2867               		.cfi_offset 10, -2
 2868 0002 BF92      		push r11
 2869               	.LCFI85:
 2870               		.cfi_def_cfa_offset 4
 2871               		.cfi_offset 11, -3
 2872 0004 CF92      		push r12
 2873               	.LCFI86:
 2874               		.cfi_def_cfa_offset 5
 2875               		.cfi_offset 12, -4
 2876 0006 EF92      		push r14
 2877               	.LCFI87:
 2878               		.cfi_def_cfa_offset 6
 2879               		.cfi_offset 14, -5
 2880 0008 0F93      		push r16
 2881               	.LCFI88:
 2882               		.cfi_def_cfa_offset 7
 2883               		.cfi_offset 16, -6
 2884 000a CF93      		push r28
 2885               	.LCFI89:
 2886               		.cfi_def_cfa_offset 8
 2887               		.cfi_offset 28, -7
 2888 000c DF93      		push r29
 2889               	.LCFI90:
 2890               		.cfi_def_cfa_offset 9
 2891               		.cfi_offset 29, -8
 2892               	/* prologue: function */
 2893               	/* frame size = 0 */
 2894               	/* stack size = 7 */
 2895               	.L__stack_usage = 7
 2896 000e EC01      		movw r28,r24
 2897 0010 5B01      		movw r10,r22
 250:keyboards/splitography/keymaps/beaklti/keymap.c ****   // rolling key pre-process
 251:keyboards/splitography/keymaps/beaklti/keymap.c ****   switch (keycode) {
 2898               		.loc 4 251 0
 2899 0012 C33E      		cpi r28,-29
 2900 0014 8CE5      		ldi r24,92
 2901 0016 D807      		cpc r29,r24
 2902               	.LVL376:
 2903 0018 01F4      		brne .L312
 252:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SL_TAB:
 253:keyboards/splitography/keymaps/beaklti/keymap.c ****     repeating += record->event.pressed ? 0 : 1;
 2904               		.loc 4 253 0
 2905 001a FB01      		movw r30,r22
 2906 001c 9281      		ldd r25,Z+2
 2907 001e 81E0      		ldi r24,lo8(1)
 2908 0020 8927      		eor r24,r25
 2909 0022 0091 0000 		lds r16,repeating
 2910 0026 080F      		add r16,r24
 2911 0028 0093 0000 		sts repeating,r16
 254:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 255:keyboards/splitography/keymaps/beaklti/keymap.c ****   default:
 256:keyboards/splitography/keymaps/beaklti/keymap.c ****     repeating = 0;
 257:keyboards/splitography/keymaps/beaklti/keymap.c ****   }
 258:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 259:keyboards/splitography/keymaps/beaklti/keymap.c ****   switch (keycode) {
 260:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 261:keyboards/splitography/keymaps/beaklti/keymap.c ****   // ........................................................ Home Row Modifiers
 262:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 263:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_Q:
 264:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_W:
 265:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LGUI);
 266:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 267:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_H:
 268:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_S:
 269:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LCTL);
 270:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 271:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_E:
 272:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_R:
 273:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LALT);
 274:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 275:keyboards/splitography/keymaps/beaklti/keymap.c ****   case ST_SPC:
 276:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_ENT)) { unregister_code(KC_ENT); return false; }
 277:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_A:
 278:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LSFT);
 279:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 280:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SM_I:
 281:keyboards/splitography/keymaps/beaklti/keymap.c ****     mt_shift(record, KC_LSFT, 0, KC_I);
 282:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_T:
 283:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_RSFT);              // note: SFT_T actually uses KC_LSFT
 284:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 285:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 286:keyboards/splitography/keymaps/beaklti/keymap.c ****   case OS_ALT:
 287:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LALT);
 288:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 289:keyboards/splitography/keymaps/beaklti/keymap.c ****   case OS_CTL:
 290:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LCTL);
 291:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 292:keyboards/splitography/keymaps/beaklti/keymap.c ****   case OS_GUI:
 293:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LGUI);
 294:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 295:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 296:keyboards/splitography/keymaps/beaklti/keymap.c ****   // ...................................................... Center Toggle Layers
 297:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 298:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CNTR_TL:
 299:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CNTR_TR:
 300:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CNTR_HL:
 301:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CNTR_HR:
 302:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CNTR_BL:
 303:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CNTR_BR:
 304:keyboards/splitography/keymaps/beaklti/keymap.c ****     // return to base layer first if different TT layer selected
 305:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (tt_keycode != keycode && tt_keycode != 0) { tt_clear(); }
 306:keyboards/splitography/keymaps/beaklti/keymap.c ****     tt_escape(record, keycode);
 307:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 308:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 309:keyboards/splitography/keymaps/beaklti/keymap.c ****   case TT_ESC:
 310:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, NOSHIFT, KC_TAB)) { return false; }
 311:keyboards/splitography/keymaps/beaklti/keymap.c ****     tt_clear();                             // exit TT layer
 312:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 313:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 314:keyboards/splitography/keymaps/beaklti/keymap.c ****   // ................................................................ Thumb Keys
 315:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 316:keyboards/splitography/keymaps/beaklti/keymap.c ****   case LT_ESC:
 317:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, NOSHIFT, KC_TAB)) { return false; }
 318:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_TAB)) { return false; }
 319:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
 320:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (raise_number(record, LEFT)) { return false; }
 321:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 322:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (tt_keycode != 0) {
 323:keyboards/splitography/keymaps/beaklti/keymap.c ****       tt_clear();                           // exit TT layer
 324:keyboards/splitography/keymaps/beaklti/keymap.c ****       return false;
 325:keyboards/splitography/keymaps/beaklti/keymap.c ****     }
 326:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_layer(record, _LSYMBOL);
 327:keyboards/splitography/keymaps/beaklti/keymap.c ****     thumb_roll(record, LEFT, 0, 0, 0, _LSYMBOL, _RSYMBOL);
 328:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 329:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SL_TAB:
 330:keyboards/splitography/keymaps/beaklti/keymap.c ****     down_rule = key_event(record, 1);       // tab+enter thumb roll, see tap_lt()
 2912               		.loc 4 330 0
 2913 002c 9093 0000 		sts down_rule,r25
 331:keyboards/splitography/keymaps/beaklti/keymap.c ****     thumb_roll(record, LEFT, SHIFT, KC_TAB, repeating, _MOUSE, _RSYMBOL);
 2914               		.loc 4 331 0
 2915 0030 65E0      		ldi r22,lo8(5)
 2916 0032 C62E      		mov r12,r22
 2917               	.LVL377:
 2918 0034 78E0      		ldi r23,lo8(8)
 2919 0036 E72E      		mov r14,r23
 2920 0038 2BE2      		ldi r18,lo8(43)
 2921 003a 30E0      		ldi r19,0
 2922 003c 41E0      		ldi r20,lo8(1)
 2923               	.L327:
 327:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 2924               		.loc 4 327 0
 2925 003e 61E0      		ldi r22,lo8(1)
 2926               	.L322:
 332:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 333:keyboards/splitography/keymaps/beaklti/keymap.c ****   case KC_TAB:
 334:keyboards/splitography/keymaps/beaklti/keymap.c ****     down_rule = key_event(record, 1);       // dot+tab+enter thumb roll, see tap_lt()
 335:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
 336:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (raise_number(record, LEFT)) { return false; }
 337:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 338:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 339:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 340:keyboards/splitography/keymaps/beaklti/keymap.c ****   case LT_I:
 341:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
 342:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (raise_number(record, RIGHT)) { return false; }
 343:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 344:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_layer(record, _LSHIFT);
 345:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 346:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 347:keyboards/splitography/keymaps/beaklti/keymap.c ****   case TD_SPC:
 348:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (record->event.pressed) { tap_rule = down_rule; } // down_rule persistance for tap_lt()
 349:keyboards/splitography/keymaps/beaklti/keymap.c ****     // trap potential repeating enter caused by tap dance definition
 350:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, NOSHIFT, KC_ENT)) { unregister_code(KC_ENT); return false; }
 351:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_ENT)) { unregister_code(KC_ENT); return false; }
 352:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_layer(record, _RSHIFT);
 353:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 354:keyboards/splitography/keymaps/beaklti/keymap.c ****   case TD_ENT:
 355:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (record->event.pressed) { tap_rule = down_rule; } // down_rule persistance for tap_lt()
 356:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 357:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 358:keyboards/splitography/keymaps/beaklti/keymap.c ****   case TT_BSPC:
 359:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, NOSHIFT, KC_DEL)) { return false; }
 360:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_DEL)) { return false; }
 361:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 362:keyboards/splitography/keymaps/beaklti/keymap.c ****   case LT_BSPC:
 363:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, NOSHIFT, KC_DEL)) { return false; }
 364:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_DEL)) { return false; }
 365:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_layer(record, _RSYMBOL);
 366:keyboards/splitography/keymaps/beaklti/keymap.c ****     thumb_roll(record, RIGHT, 0, 0, 0, _RSYMBOL, _LSYMBOL);
 367:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 368:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SL_DEL:
 369:keyboards/splitography/keymaps/beaklti/keymap.c ****     thumb_roll(record, RIGHT, NOSHIFT, KC_DEL, 0, _MOUSE, _LSYMBOL);
 2927               		.loc 4 369 0
 2928 0040 C501      		movw r24,r10
 2929 0042 0E94 0000 		call thumb_roll
 2930               	.LVL378:
 2931 0046 00C0      		rjmp .L262
 2932               	.L312:
 256:keyboards/splitography/keymaps/beaklti/keymap.c ****   }
 2933               		.loc 4 256 0
 2934 0048 1092 0000 		sts repeating,__zero_reg__
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 2935               		.loc 4 259 0
 2936 004c CB3D      		cpi r28,-37
 2937 004e FCE5      		ldi r31,92
 2938 0050 DF07      		cpc r29,r31
 2939 0052 01F4      		brne .+2
 2940 0054 00C0      		rjmp .L216
 2941 0056 00F0      		brlo .+2
 2942 0058 00C0      		rjmp .L217
 2943 005a CA32      		cpi r28,42
 2944 005c E5E4      		ldi r30,69
 2945 005e DE07      		cpc r29,r30
 2946 0060 01F4      		brne .+2
 2947 0062 00C0      		rjmp .L218
 2948 0064 00F4      		brsh .L219
 2949 0066 C733      		cpi r28,55
 2950 0068 D105      		cpc r29,__zero_reg__
 2951 006a 01F4      		brne .+2
 2952 006c 00C0      		rjmp .L220
 2953 006e 00F4      		brsh .L221
 2954 0070 C133      		cpi r28,49
 2955 0072 D105      		cpc r29,__zero_reg__
 2956 0074 01F4      		brne .+2
 2957 0076 00C0      		rjmp .L222
 2958 0078 C633      		cpi r28,54
 2959 007a D105      		cpc r29,__zero_reg__
 2960 007c 01F4      		brne .+2
 2961 007e 00C0      		rjmp .L223
 2962 0080 AB97      		sbiw r28,43
 2963 0082 01F4      		brne .L215
 334:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
 2964               		.loc 4 334 0
 2965 0084 FB01      		movw r30,r22
 2966 0086 8281      		ldd r24,Z+2
 2967 0088 8093 0000 		sts down_rule,r24
 336:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 2968               		.loc 4 336 0
 2969 008c 61E0      		ldi r22,lo8(1)
 2970 008e C501      		movw r24,r10
 2971 0090 0E94 0000 		call raise_number
 2972               	.LVL379:
 2973               	.L321:
 370:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 371:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 372:keyboards/splitography/keymaps/beaklti/keymap.c ****   // .............................................................. Special Keys
 373:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 374:keyboards/splitography/keymaps/beaklti/keymap.c ****   case KC_BSLS:
 375:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (down_rule) { tap_key(KC_ENT); return false; } // down_rule persistance for tap_lt()
 376:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 377:keyboards/splitography/keymaps/beaklti/keymap.c ****   case KC_COMM:
 378:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, SHIFT, KC_1)) { return false; }
 379:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_1)) { return false; }
 380:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 381:keyboards/splitography/keymaps/beaklti/keymap.c ****   // special shift layer mappings
 382:keyboards/splitography/keymaps/beaklti/keymap.c ****   case KC_DOT:
 383:keyboards/splitography/keymaps/beaklti/keymap.c ****     down_rule = key_event(record, 2);       // dot+space/enter+shift shortcut, see tap_lt()
 384:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, SHIFT, KC_SLSH)) { return false; }
 385:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_GRV)) { return false; }
 2974               		.loc 4 385 0
 2975 0094 91E0      		ldi r25,lo8(1)
 2976 0096 8927      		eor r24,r25
 2977 0098 00C0      		rjmp .L211
 2978               	.L221:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 2979               		.loc 4 259 0
 2980 009a CC30      		cpi r28,12
 2981 009c 82E4      		ldi r24,66
 2982 009e D807      		cpc r29,r24
 2983 00a0 01F4      		brne .+2
 2984 00a2 00C0      		rjmp .L225
 2985 00a4 C932      		cpi r28,41
 2986 00a6 E4E4      		ldi r30,68
 2987 00a8 DE07      		cpc r29,r30
 2988 00aa 01F4      		brne .+2
 2989 00ac 00C0      		rjmp .L226
 2990 00ae C833      		cpi r28,56
 2991 00b0 D240      		sbci r29,2
 2992 00b2 01F4      		brne .L215
 386:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 387:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SM_G:
 388:keyboards/splitography/keymaps/beaklti/keymap.c ****     mt_shift(record, KC_LALT, KC_LSFT, KC_G);
 389:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 390:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SA_PERC:
 391:keyboards/splitography/keymaps/beaklti/keymap.c ****     mt_shift(record, KC_LALT, 0, KC_5);
 392:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 393:keyboards/splitography/keymaps/beaklti/keymap.c ****   case KC_QUES:
 394:keyboards/splitography/keymaps/beaklti/keymap.c ****     down_rule = 0;                          // trap layer switching timimg issue between . and ?
 2993               		.loc 4 394 0
 2994 00b4 1092 0000 		sts down_rule,__zero_reg__
 2995 00b8 00C0      		rjmp .L262
 2996               	.L219:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 2997               		.loc 4 259 0
 2998 00ba C830      		cpi r28,8
 2999 00bc 85E5      		ldi r24,85
 3000 00be D807      		cpc r29,r24
 3001 00c0 01F4      		brne .+2
 3002 00c2 00C0      		rjmp .L228
 3003 00c4 00F4      		brsh .L229
 3004 00c6 C130      		cpi r28,1
 3005 00c8 F5E5      		ldi r31,85
 3006 00ca DF07      		cpc r29,r31
 3007 00cc 01F4      		brne .+2
 3008 00ce 00C0      		rjmp .L230
 3009 00d0 C430      		cpi r28,4
 3010 00d2 85E5      		ldi r24,85
 3011 00d4 D807      		cpc r29,r24
 3012 00d6 01F4      		brne .+2
 3013 00d8 00C0      		rjmp .L231
 3014 00da CA32      		cpi r28,42
 3015 00dc DC44      		sbci r29,76
 3016 00de 01F4      		brne .+2
 3017 00e0 00C0      		rjmp .L232
 3018               	.L215:
 395:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 396:keyboards/splitography/keymaps/beaklti/keymap.c ****   case SG_TILD:
 397:keyboards/splitography/keymaps/beaklti/keymap.c ****     mt_shift(record, KC_LGUI, 0, KC_GRV);
 398:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 399:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 400:keyboards/splitography/keymaps/beaklti/keymap.c ****   // ............................................................ Thumb Row Keys
 401:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 402:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef PLANCK
 403:keyboards/splitography/keymaps/beaklti/keymap.c ****   case AT_DOWN:
 404:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LALT);
 405:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 406:keyboards/splitography/keymaps/beaklti/keymap.c ****   case CT_RGHT:
 407:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LGUI);
 408:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 409:keyboards/splitography/keymaps/beaklti/keymap.c ****   case GT_UP:
 410:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_mods(record, KC_LCTL);
 411:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 412:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 413:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 414:keyboards/splitography/keymaps/beaklti/keymap.c ****   // ................................................................ Steno Keys
 415:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 416:keyboards/splitography/keymaps/beaklti/keymap.c ****   case PLOVER:
 417:keyboards/splitography/keymaps/beaklti/keymap.c ****     steno(record);
 418:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 419:keyboards/splitography/keymaps/beaklti/keymap.c ****   case BASE1:
 420:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (record->event.pressed) {
 421:keyboards/splitography/keymaps/beaklti/keymap.c ****       base_n = base_n | BASE_1;
 422:keyboards/splitography/keymaps/beaklti/keymap.c ****       if (base_n == BASE_12) { base_layer(); }
 423:keyboards/splitography/keymaps/beaklti/keymap.c ****     }
 424:keyboards/splitography/keymaps/beaklti/keymap.c ****     else { base_n = base_n & ~BASE_1; }
 425:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 426:keyboards/splitography/keymaps/beaklti/keymap.c ****   case BASE2:
 427:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (record->event.pressed) {
 428:keyboards/splitography/keymaps/beaklti/keymap.c ****       base_n = base_n | BASE_2;
 429:keyboards/splitography/keymaps/beaklti/keymap.c ****       if (base_n == BASE_12) { base_layer(); }
 430:keyboards/splitography/keymaps/beaklti/keymap.c ****     }
 431:keyboards/splitography/keymaps/beaklti/keymap.c ****     else { base_n = base_n & ~BASE_2; }
 432:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 433:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 434:keyboards/splitography/keymaps/beaklti/keymap.c ****   // ................................................................ Other Keys
 435:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 436:keyboards/splitography/keymaps/beaklti/keymap.c ****   default:
 437:keyboards/splitography/keymaps/beaklti/keymap.c ****     key_timer = 0;                          // regular keycode, clear timer in keycode_functions.h
 3019               		.loc 4 437 0
 3020 00e2 1092 0000 		sts key_timer+1,__zero_reg__
 3021 00e6 1092 0000 		sts key_timer,__zero_reg__
 3022 00ea 00C0      		rjmp .L262
 3023               	.L229:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3024               		.loc 4 259 0
 3025 00ec C630      		cpi r28,6
 3026 00ee F7E5      		ldi r31,87
 3027 00f0 DF07      		cpc r29,r31
 3028 00f2 01F4      		brne .+2
 3029 00f4 00C0      		rjmp .L233
 3030 00f6 00F4      		brsh .L234
 3031 00f8 C330      		cpi r28,3
 3032 00fa D745      		sbci r29,87
 3033 00fc 01F4      		brne .L215
 355:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3034               		.loc 4 355 0
 3035 00fe FB01      		movw r30,r22
 3036 0100 8281      		ldd r24,Z+2
 3037 0102 8823      		tst r24
 3038 0104 01F4      		brne .+2
 3039 0106 00C0      		rjmp .L262
 355:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3040               		.loc 4 355 0 is_stmt 0 discriminator 1
 3041 0108 9091 0000 		lds r25,down_rule
 3042 010c 9093 0000 		sts tap_rule,r25
 3043               	.L211:
 3044               	/* epilogue start */
 438:keyboards/splitography/keymaps/beaklti/keymap.c ****   }
 439:keyboards/splitography/keymaps/beaklti/keymap.c ****   return true;
 440:keyboards/splitography/keymaps/beaklti/keymap.c **** }
 3045               		.loc 4 440 0 is_stmt 1
 3046 0110 DF91      		pop r29
 3047 0112 CF91      		pop r28
 3048               	.LVL380:
 3049 0114 0F91      		pop r16
 3050 0116 EF90      		pop r14
 3051 0118 CF90      		pop r12
 3052 011a BF90      		pop r11
 3053 011c AF90      		pop r10
 3054               	.LVL381:
 3055 011e 0895      		ret
 3056               	.LVL382:
 3057               	.L234:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3058               		.loc 4 259 0
 3059 0120 CE01      		movw r24,r28
 3060 0122 8A50      		subi r24,10
 3061 0124 9845      		sbci r25,88
 3062 0126 0697      		sbiw r24,6
 3063 0128 00F4      		brsh .L215
 305:keyboards/splitography/keymaps/beaklti/keymap.c ****     tt_escape(record, keycode);
 3064               		.loc 4 305 0
 3065 012a 8091 0000 		lds r24,tt_keycode
 3066 012e 9091 0000 		lds r25,tt_keycode+1
 3067 0132 8C17      		cp r24,r28
 3068 0134 9D07      		cpc r25,r29
 3069 0136 01F0      		breq .L252
 305:keyboards/splitography/keymaps/beaklti/keymap.c ****     tt_escape(record, keycode);
 3070               		.loc 4 305 0 is_stmt 0 discriminator 1
 3071 0138 892B      		or r24,r25
 3072 013a 01F0      		breq .L252
 305:keyboards/splitography/keymaps/beaklti/keymap.c ****     tt_escape(record, keycode);
 3073               		.loc 4 305 0 discriminator 2
 3074 013c 0E94 0000 		call tt_clear
 3075               	.LVL383:
 3076               	.L252:
 306:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3077               		.loc 4 306 0 is_stmt 1
 3078 0140 BE01      		movw r22,r28
 3079 0142 C501      		movw r24,r10
 3080 0144 0E94 0000 		call tt_escape
 3081               	.LVL384:
 3082 0148 00C0      		rjmp .L262
 3083               	.L217:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3084               		.loc 4 259 0
 3085 014a CB30      		cpi r28,11
 3086 014c F1E6      		ldi r31,97
 3087 014e DF07      		cpc r29,r31
 3088 0150 01F4      		brne .+2
 3089 0152 00C0      		rjmp .L230
 3090 0154 00F4      		brsh .L237
 3091 0156 CF3D      		cpi r28,-33
 3092 0158 ECE5      		ldi r30,92
 3093 015a DE07      		cpc r29,r30
 3094 015c 01F4      		brne .+2
 3095 015e 00C0      		rjmp .L238
 3096 0160 00F4      		brsh .L239
 3097 0162 CD3D      		cpi r28,-35
 3098 0164 8CE5      		ldi r24,92
 3099 0166 D807      		cpc r29,r24
 3100 0168 01F4      		brne .+2
 3101 016a 00C0      		rjmp .L240
 3102 016c 00F4      		brsh .+2
 3103 016e 00C0      		rjmp .L314
 388:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3104               		.loc 4 388 0
 3105 0170 2AE0      		ldi r18,lo8(10)
 3106 0172 30E0      		ldi r19,0
 3107 0174 41EE      		ldi r20,lo8(-31)
 3108 0176 50E0      		ldi r21,0
 3109               	.L328:
 391:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3110               		.loc 4 391 0
 3111 0178 62EE      		ldi r22,lo8(-30)
 3112 017a 70E0      		ldi r23,0
 3113               	.L324:
 397:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3114               		.loc 4 397 0
 3115 017c C501      		movw r24,r10
 3116 017e 0E94 0000 		call mt_shift
 3117               	.LVL385:
 3118 0182 00C0      		rjmp .L262
 3119               	.L239:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3120               		.loc 4 259 0
 3121 0184 C13E      		cpi r28,-31
 3122 0186 FCE5      		ldi r31,92
 3123 0188 DF07      		cpc r29,r31
 3124 018a 01F4      		brne .+2
 3125 018c 00C0      		rjmp .L243
 3126 018e 00F4      		brsh .+2
 3127 0190 00C0      		rjmp .L244
 3128 0192 C23E      		cpi r28,-30
 3129 0194 ECE5      		ldi r30,92
 3130 0196 DE07      		cpc r29,r30
 3131 0198 01F4      		brne .+2
 3132 019a 00C0      		rjmp .L245
 3133 019c C43E      		cpi r28,-28
 3134 019e DC45      		sbci r29,92
 3135 01a0 01F0      		breq .+2
 3136 01a2 00C0      		rjmp .L215
 310:keyboards/splitography/keymaps/beaklti/keymap.c ****     tt_clear();                             // exit TT layer
 3137               		.loc 4 310 0
 3138 01a4 2BE2      		ldi r18,lo8(43)
 3139 01a6 30E0      		ldi r19,0
 3140 01a8 40E0      		ldi r20,0
 3141 01aa 61EE      		ldi r22,lo8(-31)
 3142 01ac 70E0      		ldi r23,0
 3143 01ae C501      		movw r24,r10
 3144 01b0 0E94 0000 		call map_shift
 3145               	.LVL386:
 3146 01b4 8111      		cpse r24,__zero_reg__
 3147 01b6 00C0      		rjmp .L318
 3148               	.L253:
 311:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 3149               		.loc 4 311 0
 3150 01b8 0E94 0000 		call tt_clear
 3151               	.LVL387:
 3152 01bc 00C0      		rjmp .L318
 3153               	.L237:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3154               		.loc 4 259 0
 3155 01be CC32      		cpi r28,44
 3156 01c0 82E6      		ldi r24,98
 3157 01c2 D807      		cpc r29,r24
 3158 01c4 01F0      		breq .L247
 3159 01c6 00F4      		brsh .L248
 3160 01c8 C430      		cpi r28,4
 3161 01ca F2E6      		ldi r31,98
 3162 01cc DF07      		cpc r29,r31
 3163 01ce 01F0      		breq .L249
 3164 01d0 C731      		cpi r28,23
 3165 01d2 82E6      		ldi r24,98
 3166 01d4 D807      		cpc r29,r24
 3167 01d6 01F0      		breq .L250
 3168 01d8 C631      		cpi r28,22
 3169 01da D146      		sbci r29,97
 3170 01dc 01F0      		breq .+2
 3171 01de 00C0      		rjmp .L215
 3172               	.L230:
 269:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3173               		.loc 4 269 0
 3174 01e0 60EE      		ldi r22,lo8(-32)
 3175 01e2 70E0      		ldi r23,0
 3176 01e4 00C0      		rjmp .L323
 3177               	.L248:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3178               		.loc 4 259 0
 3179 01e6 C531      		cpi r28,21
 3180 01e8 F4E6      		ldi r31,100
 3181 01ea DF07      		cpc r29,r31
 3182 01ec 01F0      		breq .L231
 3183 01ee 00F4      		brsh .L251
 3184 01f0 C830      		cpi r28,8
 3185 01f2 D446      		sbci r29,100
 3186 01f4 01F0      		breq .+2
 3187 01f6 00C0      		rjmp .L215
 3188               	.L231:
 273:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3189               		.loc 4 273 0
 3190 01f8 62EE      		ldi r22,lo8(-30)
 3191 01fa 70E0      		ldi r23,0
 3192 01fc 00C0      		rjmp .L323
 3193               	.L251:
 259:keyboards/splitography/keymaps/beaklti/keymap.c **** 
 3194               		.loc 4 259 0
 3195 01fe C431      		cpi r28,20
 3196 0200 F8E6      		ldi r31,104
 3197 0202 DF07      		cpc r29,r31
 3198 0204 01F0      		breq .L228
 3199 0206 CA31      		cpi r28,26
 3200 0208 D846      		sbci r29,104
 3201 020a 01F0      		breq .+2
 3202 020c 00C0      		rjmp .L215
 3203               	.L228:
 265:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3204               		.loc 4 265 0
 3205 020e 63EE      		ldi r22,lo8(-29)
 3206 0210 70E0      		ldi r23,0
 3207               	.L323:
 283:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3208               		.loc 4 283 0
 3209 0212 C501      		movw r24,r10
 3210 0214 0E94 0000 		call tap_mods
 3211               	.LVL388:
 3212               	.L262:
 439:keyboards/splitography/keymaps/beaklti/keymap.c **** }
 3213               		.loc 4 439 0
 3214 0218 81E0      		ldi r24,lo8(1)
 3215 021a 00C0      		rjmp .L211
 3216               	.L247:
 276:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_A:
 3217               		.loc 4 276 0
 3218 021c 28E2      		ldi r18,lo8(40)
 3219 021e 30E0      		ldi r19,0
 3220 0220 40E0      		ldi r20,0
 3221 0222 65EE      		ldi r22,lo8(-27)
 3222 0224 70E0      		ldi r23,0
 3223 0226 C501      		movw r24,r10
 3224 0228 0E94 0000 		call map_shift
 3225               	.LVL389:
 3226 022c 8823      		tst r24
 3227 022e 01F0      		breq .L249
 3228               	.L256:
 276:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_A:
 3229               		.loc 4 276 0 is_stmt 0 discriminator 1
 3230 0230 88E2      		ldi r24,lo8(40)
 3231 0232 0E94 0000 		call unregister_code
 3232               	.LVL390:
 3233               	.L318:
 425:keyboards/splitography/keymaps/beaklti/keymap.c ****   case BASE2:
 3234               		.loc 4 425 0 is_stmt 1 discriminator 1
 3235 0236 80E0      		ldi r24,0
 3236 0238 00C0      		rjmp .L211
 3237               	.L249:
 278:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3238               		.loc 4 278 0
 3239 023a 61EE      		ldi r22,lo8(-31)
 3240 023c 70E0      		ldi r23,0
 3241 023e 00C0      		rjmp .L323
 3242               	.L238:
 281:keyboards/splitography/keymaps/beaklti/keymap.c ****   case HOME_T:
 3243               		.loc 4 281 0
 3244 0240 2CE0      		ldi r18,lo8(12)
 3245 0242 30E0      		ldi r19,0
 3246 0244 50E0      		ldi r21,0
 3247 0246 40E0      		ldi r20,0
 3248 0248 61EE      		ldi r22,lo8(-31)
 3249 024a 70E0      		ldi r23,0
 3250 024c C501      		movw r24,r10
 3251 024e 0E94 0000 		call mt_shift
 3252               	.LVL391:
 3253               	.L250:
 283:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3254               		.loc 4 283 0
 3255 0252 65EE      		ldi r22,lo8(-27)
 3256 0254 70E0      		ldi r23,0
 3257 0256 00C0      		rjmp .L323
 3258               	.L226:
 317:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_TAB)) { return false; }
 3259               		.loc 4 317 0
 3260 0258 2BE2      		ldi r18,lo8(43)
 3261 025a 30E0      		ldi r19,0
 3262 025c 40E0      		ldi r20,0
 3263 025e 61EE      		ldi r22,lo8(-31)
 3264 0260 70E0      		ldi r23,0
 3265 0262 C501      		movw r24,r10
 3266 0264 0E94 0000 		call map_shift
 3267               	.LVL392:
 3268 0268 8111      		cpse r24,__zero_reg__
 3269 026a 00C0      		rjmp .L318
 318:keyboards/splitography/keymaps/beaklti/keymap.c **** #ifdef SPLITOGRAPHY
 3270               		.loc 4 318 0
 3271 026c 2BE2      		ldi r18,lo8(43)
 3272 026e 30E0      		ldi r19,0
 3273 0270 41E0      		ldi r20,lo8(1)
 3274 0272 65EE      		ldi r22,lo8(-27)
 3275 0274 70E0      		ldi r23,0
 3276 0276 C501      		movw r24,r10
 3277 0278 0E94 0000 		call map_shift
 3278               	.LVL393:
 3279 027c 8111      		cpse r24,__zero_reg__
 3280 027e 00C0      		rjmp .L318
 320:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 3281               		.loc 4 320 0
 3282 0280 61E0      		ldi r22,lo8(1)
 3283 0282 C501      		movw r24,r10
 3284 0284 0E94 0000 		call raise_number
 3285               	.LVL394:
 3286 0288 8111      		cpse r24,__zero_reg__
 3287 028a 00C0      		rjmp .L318
 322:keyboards/splitography/keymaps/beaklti/keymap.c ****       tt_clear();                           // exit TT layer
 3288               		.loc 4 322 0
 3289 028c 8091 0000 		lds r24,tt_keycode
 3290 0290 9091 0000 		lds r25,tt_keycode+1
 3291 0294 892B      		or r24,r25
 3292 0296 01F0      		breq .+2
 3293 0298 00C0      		rjmp .L253
 326:keyboards/splitography/keymaps/beaklti/keymap.c ****     thumb_roll(record, LEFT, 0, 0, 0, _LSYMBOL, _RSYMBOL);
 3294               		.loc 4 326 0
 3295 029a 64E0      		ldi r22,lo8(4)
 3296 029c C501      		movw r24,r10
 3297 029e 0E94 0000 		call tap_layer
 3298               	.LVL395:
 327:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3299               		.loc 4 327 0
 3300 02a2 45E0      		ldi r20,lo8(5)
 3301 02a4 C42E      		mov r12,r20
 3302 02a6 54E0      		ldi r21,lo8(4)
 3303 02a8 E52E      		mov r14,r21
 3304 02aa 00E0      		ldi r16,0
 3305 02ac 30E0      		ldi r19,0
 3306 02ae 20E0      		ldi r18,0
 3307 02b0 40E0      		ldi r20,0
 3308 02b2 00C0      		rjmp .L327
 3309               	.L225:
 342:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 3310               		.loc 4 342 0
 3311 02b4 62E0      		ldi r22,lo8(2)
 3312 02b6 C501      		movw r24,r10
 3313 02b8 0E94 0000 		call raise_number
 3314               	.LVL396:
 344:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3315               		.loc 4 344 0
 3316 02bc 62E0      		ldi r22,lo8(2)
 342:keyboards/splitography/keymaps/beaklti/keymap.c **** #endif
 3317               		.loc 4 342 0
 3318 02be 8111      		cpse r24,__zero_reg__
 3319 02c0 00C0      		rjmp .L318
 3320               	.L325:
 352:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3321               		.loc 4 352 0
 3322 02c2 C501      		movw r24,r10
 3323 02c4 0E94 0000 		call tap_layer
 3324               	.LVL397:
 3325 02c8 00C0      		rjmp .L262
 3326               	.L233:
 348:keyboards/splitography/keymaps/beaklti/keymap.c ****     // trap potential repeating enter caused by tap dance definition
 3327               		.loc 4 348 0
 3328 02ca FB01      		movw r30,r22
 3329 02cc 8281      		ldd r24,Z+2
 3330 02ce 8823      		tst r24
 3331 02d0 01F0      		breq .L255
 348:keyboards/splitography/keymaps/beaklti/keymap.c ****     // trap potential repeating enter caused by tap dance definition
 3332               		.loc 4 348 0 is_stmt 0 discriminator 1
 3333 02d2 8091 0000 		lds r24,down_rule
 3334 02d6 8093 0000 		sts tap_rule,r24
 3335               	.L255:
 350:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_ENT)) { unregister_code(KC_ENT); return false; }
 3336               		.loc 4 350 0 is_stmt 1
 3337 02da 28E2      		ldi r18,lo8(40)
 3338 02dc 30E0      		ldi r19,0
 3339 02de 40E0      		ldi r20,0
 3340 02e0 61EE      		ldi r22,lo8(-31)
 3341 02e2 70E0      		ldi r23,0
 3342 02e4 C501      		movw r24,r10
 3343 02e6 0E94 0000 		call map_shift
 3344               	.LVL398:
 3345 02ea 8111      		cpse r24,__zero_reg__
 3346 02ec 00C0      		rjmp .L256
 351:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_layer(record, _RSHIFT);
 3347               		.loc 4 351 0
 3348 02ee 28E2      		ldi r18,lo8(40)
 3349 02f0 30E0      		ldi r19,0
 3350 02f2 40E0      		ldi r20,0
 3351 02f4 65EE      		ldi r22,lo8(-27)
 3352 02f6 70E0      		ldi r23,0
 3353 02f8 C501      		movw r24,r10
 3354 02fa 0E94 0000 		call map_shift
 3355               	.LVL399:
 3356 02fe 8111      		cpse r24,__zero_reg__
 3357 0300 00C0      		rjmp .L256
 352:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3358               		.loc 4 352 0
 3359 0302 63E0      		ldi r22,lo8(3)
 3360 0304 00C0      		rjmp .L325
 3361               	.L232:
 359:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_DEL)) { return false; }
 3362               		.loc 4 359 0
 3363 0306 2CE4      		ldi r18,lo8(76)
 3364 0308 30E0      		ldi r19,0
 3365 030a 40E0      		ldi r20,0
 3366 030c 61EE      		ldi r22,lo8(-31)
 3367 030e 70E0      		ldi r23,0
 3368 0310 C501      		movw r24,r10
 3369 0312 0E94 0000 		call map_shift
 3370               	.LVL400:
 360:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3371               		.loc 4 360 0
 3372 0316 2CE4      		ldi r18,lo8(76)
 3373 0318 30E0      		ldi r19,0
 3374 031a 40E0      		ldi r20,0
 359:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_DEL)) { return false; }
 3375               		.loc 4 359 0
 3376 031c 8111      		cpse r24,__zero_reg__
 3377 031e 00C0      		rjmp .L318
 3378               	.L320:
 385:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3379               		.loc 4 385 0
 3380 0320 65EE      		ldi r22,lo8(-27)
 3381 0322 70E0      		ldi r23,0
 3382 0324 C501      		movw r24,r10
 3383 0326 0E94 0000 		call map_shift
 3384               	.LVL401:
 3385 032a 00C0      		rjmp .L321
 3386               	.L218:
 363:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, NOSHIFT, KC_DEL)) { return false; }
 3387               		.loc 4 363 0
 3388 032c 2CE4      		ldi r18,lo8(76)
 3389 032e 30E0      		ldi r19,0
 3390 0330 40E0      		ldi r20,0
 3391 0332 61EE      		ldi r22,lo8(-31)
 3392 0334 70E0      		ldi r23,0
 3393 0336 C501      		movw r24,r10
 3394 0338 0E94 0000 		call map_shift
 3395               	.LVL402:
 3396 033c 8111      		cpse r24,__zero_reg__
 3397 033e 00C0      		rjmp .L318
 364:keyboards/splitography/keymaps/beaklti/keymap.c ****     tap_layer(record, _RSYMBOL);
 3398               		.loc 4 364 0
 3399 0340 2CE4      		ldi r18,lo8(76)
 3400 0342 30E0      		ldi r19,0
 3401 0344 40E0      		ldi r20,0
 3402 0346 65EE      		ldi r22,lo8(-27)
 3403 0348 70E0      		ldi r23,0
 3404 034a C501      		movw r24,r10
 3405 034c 0E94 0000 		call map_shift
 3406               	.LVL403:
 3407 0350 8111      		cpse r24,__zero_reg__
 3408 0352 00C0      		rjmp .L318
 365:keyboards/splitography/keymaps/beaklti/keymap.c ****     thumb_roll(record, RIGHT, 0, 0, 0, _RSYMBOL, _LSYMBOL);
 3409               		.loc 4 365 0
 3410 0354 65E0      		ldi r22,lo8(5)
 3411 0356 C501      		movw r24,r10
 3412 0358 0E94 0000 		call tap_layer
 3413               	.LVL404:
 366:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3414               		.loc 4 366 0
 3415 035c 24E0      		ldi r18,lo8(4)
 3416 035e C22E      		mov r12,r18
 3417 0360 35E0      		ldi r19,lo8(5)
 3418 0362 E32E      		mov r14,r19
 3419 0364 00E0      		ldi r16,0
 3420 0366 30E0      		ldi r19,0
 3421 0368 20E0      		ldi r18,0
 3422               	.L326:
 369:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3423               		.loc 4 369 0
 3424 036a 40E0      		ldi r20,0
 3425 036c 62E0      		ldi r22,lo8(2)
 3426 036e 00C0      		rjmp .L322
 3427               	.L245:
 3428 0370 84E0      		ldi r24,lo8(4)
 3429 0372 C82E      		mov r12,r24
 3430 0374 98E0      		ldi r25,lo8(8)
 3431 0376 E92E      		mov r14,r25
 3432 0378 00E0      		ldi r16,0
 3433 037a 2CE4      		ldi r18,lo8(76)
 3434 037c 30E0      		ldi r19,0
 3435 037e 00C0      		rjmp .L326
 3436               	.L222:
 375:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3437               		.loc 4 375 0
 3438 0380 8091 0000 		lds r24,down_rule
 3439 0384 8823      		tst r24
 3440 0386 01F4      		brne .+2
 3441 0388 00C0      		rjmp .L262
 375:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3442               		.loc 4 375 0 is_stmt 0 discriminator 1
 3443 038a 88E2      		ldi r24,lo8(40)
 3444 038c 90E0      		ldi r25,0
 3445 038e 0E94 0000 		call tap_key
 3446               	.LVL405:
 3447 0392 00C0      		rjmp .L318
 3448               	.L223:
 378:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_1)) { return false; }
 3449               		.loc 4 378 0 is_stmt 1
 3450 0394 2EE1      		ldi r18,lo8(30)
 3451 0396 30E0      		ldi r19,0
 3452 0398 41E0      		ldi r20,lo8(1)
 3453 039a 61EE      		ldi r22,lo8(-31)
 3454 039c 70E0      		ldi r23,0
 3455 039e C501      		movw r24,r10
 3456 03a0 0E94 0000 		call map_shift
 3457               	.LVL406:
 379:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3458               		.loc 4 379 0
 3459 03a4 2EE1      		ldi r18,lo8(30)
 3460 03a6 30E0      		ldi r19,0
 378:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_1)) { return false; }
 3461               		.loc 4 378 0
 3462 03a8 8111      		cpse r24,__zero_reg__
 3463 03aa 00C0      		rjmp .L318
 3464               	.L319:
 385:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3465               		.loc 4 385 0
 3466 03ac 41E0      		ldi r20,lo8(1)
 3467 03ae 00C0      		rjmp .L320
 3468               	.L220:
 3469               	.LVL407:
 3470               	.LBB8:
 3471               	.LBB9:
  28:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c ****   return 0;
 3472               		.loc 1 28 0
 3473 03b0 FB01      		movw r30,r22
 3474 03b2 8281      		ldd r24,Z+2
 3475 03b4 8823      		tst r24
 3476 03b6 01F0      		breq .L263
 3477 03b8 82E0      		ldi r24,lo8(2)
 3478               	.L257:
 3479               	.LVL408:
 3480               	.LBE9:
 3481               	.LBE8:
 383:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_LSFT, SHIFT, KC_SLSH)) { return false; }
 3482               		.loc 4 383 0
 3483 03ba 8093 0000 		sts down_rule,r24
 384:keyboards/splitography/keymaps/beaklti/keymap.c ****     if (map_shift(record, KC_RSFT, SHIFT, KC_GRV)) { return false; }
 3484               		.loc 4 384 0
 3485 03be 28E3      		ldi r18,lo8(56)
 3486 03c0 30E0      		ldi r19,0
 3487 03c2 41E0      		ldi r20,lo8(1)
 3488 03c4 61EE      		ldi r22,lo8(-31)
 3489 03c6 70E0      		ldi r23,0
 3490 03c8 C501      		movw r24,r10
 3491 03ca 0E94 0000 		call map_shift
 3492               	.LVL409:
 3493 03ce 8111      		cpse r24,__zero_reg__
 3494 03d0 00C0      		rjmp .L318
 385:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3495               		.loc 4 385 0
 3496 03d2 25E3      		ldi r18,lo8(53)
 3497 03d4 30E0      		ldi r19,0
 3498 03d6 00C0      		rjmp .L319
 3499               	.LVL410:
 3500               	.L263:
 3501               	.LBB11:
 3502               	.LBB10:
  29:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/keycode_functions.c **** }
 3503               		.loc 1 29 0
 3504 03d8 80E0      		ldi r24,0
 3505 03da 00C0      		rjmp .L257
 3506               	.LVL411:
 3507               	.L244:
 3508               	.LBE10:
 3509               	.LBE11:
 391:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3510               		.loc 4 391 0
 3511 03dc 22E2      		ldi r18,lo8(34)
 3512 03de 30E0      		ldi r19,0
 3513 03e0 50E0      		ldi r21,0
 3514 03e2 40E0      		ldi r20,0
 3515 03e4 00C0      		rjmp .L328
 3516               	.L243:
 397:keyboards/splitography/keymaps/beaklti/keymap.c ****     break;
 3517               		.loc 4 397 0
 3518 03e6 25E3      		ldi r18,lo8(53)
 3519 03e8 30E0      		ldi r19,0
 3520 03ea 50E0      		ldi r21,0
 3521 03ec 40E0      		ldi r20,0
 3522 03ee 63EE      		ldi r22,lo8(-29)
 3523 03f0 70E0      		ldi r23,0
 3524 03f2 00C0      		rjmp .L324
 3525               	.L240:
 417:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 3526               		.loc 4 417 0
 3527 03f4 CB01      		movw r24,r22
 3528 03f6 0E94 0000 		call steno
 3529               	.LVL412:
 3530 03fa 00C0      		rjmp .L318
 3531               	.L216:
 420:keyboards/splitography/keymaps/beaklti/keymap.c ****       base_n = base_n | BASE_1;
 3532               		.loc 4 420 0
 3533 03fc FB01      		movw r30,r22
 3534 03fe 8281      		ldd r24,Z+2
 3535 0400 9091 0000 		lds r25,base_n
 3536 0404 8823      		tst r24
 3537 0406 01F0      		breq .L258
 421:keyboards/splitography/keymaps/beaklti/keymap.c ****       if (base_n == BASE_12) { base_layer(); }
 3538               		.loc 4 421 0
 3539 0408 9160      		ori r25,lo8(1)
 3540               	.L316:
 3541 040a 9093 0000 		sts base_n,r25
 422:keyboards/splitography/keymaps/beaklti/keymap.c ****     }
 3542               		.loc 4 422 0
 3543 040e 9330      		cpi r25,lo8(3)
 3544 0410 01F0      		breq .+2
 3545 0412 00C0      		rjmp .L318
 422:keyboards/splitography/keymaps/beaklti/keymap.c ****     }
 3546               		.loc 4 422 0 is_stmt 0 discriminator 1
 3547 0414 0E94 0000 		call base_layer
 3548               	.LVL413:
 3549 0418 00C0      		rjmp .L318
 3550               	.L258:
 424:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 3551               		.loc 4 424 0 is_stmt 1
 3552 041a 9E7F      		andi r25,lo8(-2)
 3553               	.L317:
 431:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 3554               		.loc 4 431 0
 3555 041c 9093 0000 		sts base_n,r25
 3556 0420 00C0      		rjmp .L211
 3557               	.L314:
 427:keyboards/splitography/keymaps/beaklti/keymap.c ****       base_n = base_n | BASE_2;
 3558               		.loc 4 427 0
 3559 0422 FB01      		movw r30,r22
 3560 0424 8281      		ldd r24,Z+2
 3561 0426 9091 0000 		lds r25,base_n
 3562 042a 8823      		tst r24
 3563 042c 01F0      		breq .L259
 428:keyboards/splitography/keymaps/beaklti/keymap.c ****       if (base_n == BASE_12) { base_layer(); }
 3564               		.loc 4 428 0
 3565 042e 9260      		ori r25,lo8(2)
 3566 0430 00C0      		rjmp .L316
 3567               	.L259:
 431:keyboards/splitography/keymaps/beaklti/keymap.c ****     return false;
 3568               		.loc 4 431 0
 3569 0432 9D7F      		andi r25,lo8(-3)
 3570 0434 00C0      		rjmp .L317
 3571               		.cfi_endproc
 3572               	.LFE156:
 3574               		.section	.text.matrix_init_user,"ax",@progbits
 3575               	.global	matrix_init_user
 3577               	matrix_init_user:
 3578               	.LFB157:
 3579               		.file 5 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c"
   1:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c **** 
   2:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c **** // ....................................................................... Audio
   3:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c **** 
   4:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c **** void matrix_init_user(void)
   5:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c **** {
 3580               		.loc 5 5 0
 3581               		.cfi_startproc
 3582               	/* prologue: function */
 3583               	/* frame size = 0 */
 3584               	/* stack size = 0 */
 3585               	.L__stack_usage = 0
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c **** #ifdef STENO_ENABLE
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/init.c ****   steno_set_mode(STENO_MODE_BOLT);          // or STENO_MODE_GEMINI
 3586               		.loc 5 7 0
 3587 0000 80E0      		ldi r24,0
 3588 0002 0C94 0000 		jmp steno_set_mode
 3589               	.LVL414:
 3590               		.cfi_endproc
 3591               	.LFE157:
 3593               		.section	.progmem.data.__c.5783,"a",@progbits
 3596               	__c.5783:
 3597 0000 3A25 732F 		.string	":%s/arch=(.*)/arch=('any')\n"
 3597      6172 6368 
 3597      3D28 2E2A 
 3597      292F 6172 
 3597      6368 3D28 
 3598               		.section	.progmem.data.__c.5777,"a",@progbits
 3601               	__c.5777:
 3602 0000 7468 6520 		.string	"the keys of enoch"
 3602      6B65 7973 
 3602      206F 6620 
 3602      656E 6F63 
 3602      6800 
 3603               		.section	.bss.repeating,"aw",@nobits
 3606               	repeating:
 3607 0000 00        		.zero	1
 3608               		.section	.bss.down_rule,"aw",@nobits
 3611               	down_rule:
 3612 0000 00        		.zero	1
 3613               		.section	.bss.base_n,"aw",@nobits
 3616               	base_n:
 3617 0000 00        		.zero	1
 3618               		.section	.bss.plover,"aw",@nobits
 3621               	plover:
 3622 0000 00        		.zero	1
 3623               		.section	.bss.double_key,"aw",@nobits
 3626               	double_key:
 3627 0000 00        		.zero	1
 3628               		.section	.bss.tt_keycode,"aw",@nobits
 3631               	tt_keycode:
 3632 0000 0000      		.zero	2
 3633               		.section	.bss.overlayer,"aw",@nobits
 3636               	overlayer:
 3637 0000 00        		.zero	1
 3638               		.section	.bss.thumb,"aw",@nobits
 3641               	thumb:
 3642 0000 00        		.zero	1
 3643               	.global	tap_dance_actions
 3644               		.section	.data.tap_dance_actions,"aw",@progbits
 3647               	tap_dance_actions:
 3648 0000 0000      		.word	0
 3649 0002 0000      		.word	gs(asterisk)
 3650 0004 0000      		.word	0
 3651 0006 0000 0000 		.zero	11
 3651      0000 0000 
 3651      0000 00
 3652 0011 0000      		.word	0
 3653 0013 0000      		.word	0
 3654 0015 0000      		.word	gs(comma)
 3655 0017 0000      		.word	0
 3656 0019 0000 0000 		.zero	11
 3656      0000 0000 
 3656      0000 00
 3657 0024 0000      		.word	0
 3658 0026 0000      		.word	0
 3659 0028 0000      		.word	gs(dot)
 3660 002a 0000      		.word	0
 3661 002c 0000 0000 		.zero	11
 3661      0000 0000 
 3661      0000 00
 3662 0037 0000      		.word	0
 3663 0039 0000      		.word	0
 3664 003b 0000      		.word	gs(enter)
 3665 003d 0000      		.word	gs(enter_reset)
 3666 003f 0000 0000 		.zero	11
 3666      0000 0000 
 3666      0000 00
 3667 004a 0000      		.word	0
 3668 004c 0000      		.word	0
 3669 004e 0000      		.word	gs(private)
 3670 0050 0000      		.word	0
 3671 0052 0000 0000 		.zero	11
 3671      0000 0000 
 3671      0000 00
 3672 005d 0000      		.word	0
 3673 005f 0000      		.word	0
 3674 0061 0000      		.word	gs(send)
 3675 0063 0000      		.word	0
 3676 0065 0000 0000 		.zero	11
 3676      0000 0000 
 3676      0000 00
 3677 0070 0000      		.word	0
 3678 0072 0000      		.word	0
 3679 0074 0000      		.word	gs(space)
 3680 0076 0000      		.word	gs(space_reset)
 3681 0078 0000 0000 		.zero	11
 3681      0000 0000 
 3681      0000 00
 3682 0083 0000      		.word	0
 3683 0085 0000      		.word	0
 3684 0087 0000      		.word	gs(tilde)
 3685 0089 0000      		.word	gs(tilde_reset)
 3686 008b 0000 0000 		.zero	11
 3686      0000 0000 
 3686      0000 00
 3687 0096 0000      		.word	0
 3688 0098 0000      		.word	0
 3689 009a 0000      		.word	gs(colon)
 3690 009c 0000      		.word	gs(colon_reset)
 3691 009e 0000 0000 		.zero	11
 3691      0000 0000 
 3691      0000 00
 3692 00a9 0000      		.word	0
 3693 00ab 0000      		.word	0
 3694 00ad 0000      		.word	gs(lesser)
 3695 00af 0000      		.word	gs(lesser_reset)
 3696 00b1 0000 0000 		.zero	11
 3696      0000 0000 
 3696      0000 00
 3697 00bc 0000      		.word	0
 3698 00be 0000      		.word	0
 3699 00c0 0000      		.word	gs(greater)
 3700 00c2 0000      		.word	gs(greater_reset)
 3701 00c4 0000 0000 		.zero	11
 3701      0000 0000 
 3701      0000 00
 3702 00cf 0000      		.word	0
 3703 00d1 0000      		.word	0
 3704 00d3 0000      		.word	gs(equal)
 3705 00d5 0000      		.word	gs(equal_reset)
 3706 00d7 0000 0000 		.zero	11
 3706      0000 0000 
 3706      0000 00
 3707 00e2 0000      		.word	0
 3708               		.section	.bss.tap_rule,"aw",@nobits
 3711               	tap_rule:
 3712 0000 00        		.zero	1
 3713               		.section	.bss.dt_shift,"aw",@nobits
 3716               	dt_shift:
 3717 0000 00        		.zero	1
 3718               		.section	.bss.key_timer,"aw",@nobits
 3721               	key_timer:
 3722 0000 0000      		.zero	2
 3723               		.section	.bss.mods,"aw",@nobits
 3726               	mods:
 3727 0000 00        		.zero	1
 3728               	.global	keymaps
 3729               		.section	.progmem.data.keymaps,"a",@progbits
 3732               	keymaps:
 3733 0000 3300      		.word	51
 3734 0002 1C00      		.word	28
 3735 0004 1200      		.word	18
 3736 0006 1800      		.word	24
 3737 0008 1D00      		.word	29
 3738 000a 0A58      		.word	22538
 3739 000c 0B58      		.word	22539
 3740 000e 0A00      		.word	10
 3741 0010 0700      		.word	7
 3742 0012 1100      		.word	17
 3743 0014 1000      		.word	16
 3744 0016 1B00      		.word	27
 3745 0018 1468      		.word	26644
 3746 001a 0B61      		.word	24843
 3747 001c 0864      		.word	25608
 3748 001e 0462      		.word	25092
 3749 0020 3700      		.word	55
 3750 0022 0C58      		.word	22540
 3751 0024 0D58      		.word	22541
 3752 0026 0600      		.word	6
 3753 0028 1762      		.word	25111
 3754 002a 1564      		.word	25621
 3755 002c 1661      		.word	24854
 3756 002e 1A68      		.word	26650
 3757 0030 0D00      		.word	13
 3758 0032 2D00      		.word	45
 3759 0034 3400      		.word	52
 3760 0036 0E00      		.word	14
 3761 0038 3600      		.word	54
 3762 003a 0E58      		.word	22542
 3763 003c 0F58      		.word	22543
 3764 003e 0500      		.word	5
 3765 0040 1300      		.word	19
 3766 0042 0F00      		.word	15
 3767 0044 0900      		.word	9
 3768 0046 1900      		.word	25
 3769 0048 0000      		.word	0
 3770 004a 0000      		.word	0
 3771 004c 0000      		.word	0
 3772 004e 0000      		.word	0
 3773 0050 2944      		.word	17449
 3774 0052 0C42      		.word	16908
 3775 0054 0657      		.word	22278
 3776 0056 2A45      		.word	17706
 3777 0058 0000      		.word	0
 3778 005a 0000      		.word	0
 3779 005c 0000      		.word	0
 3780 005e 0000      		.word	0
 3781 0060 3302      		.word	563
 3782 0062 1C02      		.word	540
 3783 0064 1202      		.word	530
 3784 0066 1802      		.word	536
 3785 0068 1D02      		.word	541
 3786 006a 0A58      		.word	22538
 3787 006c 0B58      		.word	22539
 3788 006e 0A02      		.word	522
 3789 0070 0702      		.word	519
 3790 0072 1102      		.word	529
 3791 0074 1002      		.word	528
 3792 0076 1B02      		.word	539
 3793 0078 1402      		.word	532
 3794 007a 0B02      		.word	523
 3795 007c 0802      		.word	520
 3796 007e 0402      		.word	516
 3797 0080 3802      		.word	568
 3798 0082 0C58      		.word	22540
 3799 0084 0D58      		.word	22541
 3800 0086 0602      		.word	518
 3801 0088 1702      		.word	535
 3802 008a 1502      		.word	533
 3803 008c 1602      		.word	534
 3804 008e 1A02      		.word	538
 3805 0090 0D02      		.word	525
 3806 0092 2D02      		.word	557
 3807 0094 3402      		.word	564
 3808 0096 0E02      		.word	526
 3809 0098 1E02      		.word	542
 3810 009a 0E58      		.word	22542
 3811 009c 0F58      		.word	22543
 3812 009e 0502      		.word	517
 3813 00a0 1302      		.word	531
 3814 00a2 0F02      		.word	527
 3815 00a4 0902      		.word	521
 3816 00a6 1902      		.word	537
 3817 00a8 0000      		.word	0
 3818 00aa 0000      		.word	0
 3819 00ac 0000      		.word	0
 3820 00ae 0000      		.word	0
 3821 00b0 2900      		.word	41
 3822 00b2 0C02      		.word	524
 3823 00b4 2C00      		.word	44
 3824 00b6 2A00      		.word	42
 3825 00b8 0000      		.word	0
 3826 00ba 0000      		.word	0
 3827 00bc 0000      		.word	0
 3828 00be 0000      		.word	0
 3829 00c0 3300      		.word	51
 3830 00c2 1C00      		.word	28
 3831 00c4 1200      		.word	18
 3832 00c6 1800      		.word	24
 3833 00c8 1D00      		.word	29
 3834 00ca 0A58      		.word	22538
 3835 00cc 0B58      		.word	22539
 3836 00ce 0A02      		.word	522
 3837 00d0 0702      		.word	519
 3838 00d2 1102      		.word	529
 3839 00d4 1002      		.word	528
 3840 00d6 1B02      		.word	539
 3841 00d8 1400      		.word	20
 3842 00da 0B00      		.word	11
 3843 00dc 0800      		.word	8
 3844 00de 0400      		.word	4
 3845 00e0 0757      		.word	22279
 3846 00e2 0C58      		.word	22540
 3847 00e4 0D58      		.word	22541
 3848 00e6 0602      		.word	518
 3849 00e8 1702      		.word	535
 3850 00ea 1502      		.word	533
 3851 00ec 1602      		.word	534
 3852 00ee 1A02      		.word	538
 3853 00f0 0D00      		.word	13
 3854 00f2 2D00      		.word	45
 3855 00f4 3400      		.word	52
 3856 00f6 0E00      		.word	14
 3857 00f8 3500      		.word	53
 3858 00fa 0E58      		.word	22542
 3859 00fc 0F58      		.word	22543
 3860 00fe 0502      		.word	517
 3861 0100 1302      		.word	531
 3862 0102 0F02      		.word	527
 3863 0104 0902      		.word	521
 3864 0106 1902      		.word	537
 3865 0108 0000      		.word	0
 3866 010a 0000      		.word	0
 3867 010c 0000      		.word	0
 3868 010e 0000      		.word	0
 3869 0110 2B00      		.word	43
 3870 0112 0100      		.word	1
 3871 0114 0357      		.word	22275
 3872 0116 4C49      		.word	18764
 3873 0118 0000      		.word	0
 3874 011a 0000      		.word	0
 3875 011c 0000      		.word	0
 3876 011e 0000      		.word	0
 3877 0120 3302      		.word	563
 3878 0122 1C02      		.word	540
 3879 0124 1202      		.word	530
 3880 0126 1802      		.word	536
 3881 0128 1D02      		.word	541
 3882 012a 0A58      		.word	22538
 3883 012c 0B58      		.word	22539
 3884 012e 0A00      		.word	10
 3885 0130 0700      		.word	7
 3886 0132 1100      		.word	17
 3887 0134 1000      		.word	16
 3888 0136 1B00      		.word	27
 3889 0138 1402      		.word	532
 3890 013a 0B02      		.word	523
 3891 013c 0802      		.word	520
 3892 013e 0402      		.word	516
 3893 0140 3802      		.word	568
 3894 0142 0C58      		.word	22540
 3895 0144 0D58      		.word	22541
 3896 0146 0600      		.word	6
 3897 0148 1700      		.word	23
 3898 014a 1500      		.word	21
 3899 014c 1600      		.word	22
 3900 014e 1A00      		.word	26
 3901 0150 0D02      		.word	525
 3902 0152 2D02      		.word	557
 3903 0154 3402      		.word	564
 3904 0156 0E02      		.word	526
 3905 0158 3800      		.word	56
 3906 015a 0E58      		.word	22542
 3907 015c 0F58      		.word	22543
 3908 015e 0500      		.word	5
 3909 0160 1300      		.word	19
 3910 0162 0F00      		.word	15
 3911 0164 0900      		.word	9
 3912 0166 1900      		.word	25
 3913 0168 0000      		.word	0
 3914 016a 0000      		.word	0
 3915 016c 0000      		.word	0
 3916 016e 0000      		.word	0
 3917 0170 2B00      		.word	43
 3918 0172 0C02      		.word	524
 3919 0174 0100      		.word	1
 3920 0176 4C00      		.word	76
 3921 0178 0000      		.word	0
 3922 017a 0000      		.word	0
 3923 017c 0000      		.word	0
 3924 017e 0000      		.word	0
 3925 0180 0000      		.word	0
 3926 0182 0000      		.word	0
 3927 0184 0000      		.word	0
 3928 0186 0000      		.word	0
 3929 0188 0000      		.word	0
 3930 018a 0100      		.word	1
 3931 018c 0100      		.word	1
 3932 018e 0057      		.word	22272
 3933 0190 2F00      		.word	47
 3934 0192 2302      		.word	547
 3935 0194 3000      		.word	48
 3936 0196 0000      		.word	0
 3937 0198 0000      		.word	0
 3938 019a 0000      		.word	0
 3939 019c 0000      		.word	0
 3940 019e 0000      		.word	0
 3941 01a0 0000      		.word	0
 3942 01a2 0100      		.word	1
 3943 01a4 0100      		.word	1
 3944 01a6 3102      		.word	561
 3945 01a8 2602      		.word	550
 3946 01aa 2102      		.word	545
 3947 01ac 2702      		.word	551
 3948 01ae 0000      		.word	0
 3949 01b0 0000      		.word	0
 3950 01b2 0000      		.word	0
 3951 01b4 0000      		.word	0
 3952 01b6 0000      		.word	0
 3953 01b8 0000      		.word	0
 3954 01ba 0100      		.word	1
 3955 01bc 0100      		.word	1
 3956 01be 3800      		.word	56
 3957 01c0 2F02      		.word	559
 3958 01c2 2002      		.word	544
 3959 01c4 3002      		.word	560
 3960 01c6 0000      		.word	0
 3961 01c8 0000      		.word	0
 3962 01ca 0000      		.word	0
 3963 01cc 0000      		.word	0
 3964 01ce 0000      		.word	0
 3965 01d0 0100      		.word	1
 3966 01d2 0100      		.word	1
 3967 01d4 3100      		.word	49
 3968 01d6 E25C      		.word	23778
 3969 01d8 0000      		.word	0
 3970 01da 0000      		.word	0
 3971 01dc 0000      		.word	0
 3972 01de 0000      		.word	0
 3973 01e0 0857      		.word	22280
 3974 01e2 3700      		.word	55
 3975 01e4 2502      		.word	549
 3976 01e6 2402      		.word	548
 3977 01e8 0000      		.word	0
 3978 01ea 0100      		.word	1
 3979 01ec 0100      		.word	1
 3980 01ee 0000      		.word	0
 3981 01f0 4A00      		.word	74
 3982 01f2 5200      		.word	82
 3983 01f4 4D00      		.word	77
 3984 01f6 4B00      		.word	75
 3985 01f8 E15C      		.word	23777
 3986 01fa 0957      		.word	22281
 3987 01fc E05C      		.word	23776
 3988 01fe 0A57      		.word	22282
 3989 0200 3802      		.word	568
 3990 0202 0100      		.word	1
 3991 0204 0100      		.word	1
 3992 0206 0000      		.word	0
 3993 0208 5000      		.word	80
 3994 020a 5100      		.word	81
 3995 020c 4F00      		.word	79
 3996 020e 4E00      		.word	78
 3997 0210 0000      		.word	0
 3998 0212 2E02      		.word	558
 3999 0214 1F02      		.word	543
 4000 0216 1E02      		.word	542
 4001 0218 3800      		.word	56
 4002 021a 0100      		.word	1
 4003 021c 0100      		.word	1
 4004 021e 0000      		.word	0
 4005 0220 0000      		.word	0
 4006 0222 0000      		.word	0
 4007 0224 0000      		.word	0
 4008 0226 0000      		.word	0
 4009 0228 0000      		.word	0
 4010 022a 0000      		.word	0
 4011 022c 0000      		.word	0
 4012 022e 0000      		.word	0
 4013 0230 E35C      		.word	23779
 4014 0232 0B57      		.word	22283
 4015 0234 0100      		.word	1
 4016 0236 0100      		.word	1
 4017 0238 0000      		.word	0
 4018 023a 0000      		.word	0
 4019 023c 0000      		.word	0
 4020 023e 0000      		.word	0
 4021 0240 015A      		.word	23041
 4022 0242 025A      		.word	23042
 4023 0244 035A      		.word	23043
 4024 0246 045A      		.word	23044
 4025 0248 055A      		.word	23045
 4026 024a 065A      		.word	23046
 4027 024c 235A      		.word	23075
 4028 024e 245A      		.word	23076
 4029 0250 255A      		.word	23077
 4030 0252 265A      		.word	23078
 4031 0254 275A      		.word	23079
 4032 0256 285A      		.word	23080
 4033 0258 DB5C      		.word	23771
 4034 025a 075A      		.word	23047
 4035 025c 095A      		.word	23049
 4036 025e 0B5A      		.word	23051
 4037 0260 0D5A      		.word	23053
 4038 0262 115A      		.word	23057
 4039 0264 165A      		.word	23062
 4040 0266 1A5A      		.word	23066
 4041 0268 1C5A      		.word	23068
 4042 026a 1E5A      		.word	23070
 4043 026c 205A      		.word	23072
 4044 026e 225A      		.word	23074
 4045 0270 DC5C      		.word	23772
 4046 0272 085A      		.word	23048
 4047 0274 0A5A      		.word	23050
 4048 0276 0C5A      		.word	23052
 4049 0278 0E5A      		.word	23054
 4050 027a 125A      		.word	23058
 4051 027c 175A      		.word	23063
 4052 027e 1B5A      		.word	23067
 4053 0280 1D5A      		.word	23069
 4054 0282 1F5A      		.word	23071
 4055 0284 215A      		.word	23073
 4056 0286 295A      		.word	23081
 4057 0288 0000      		.word	0
 4058 028a 0000      		.word	0
 4059 028c 0000      		.word	0
 4060 028e 0F5A      		.word	23055
 4061 0290 105A      		.word	23056
 4062 0292 0000      		.word	0
 4063 0294 0000      		.word	0
 4064 0296 185A      		.word	23064
 4065 0298 195A      		.word	23065
 4066 029a 0000      		.word	0
 4067 029c 0000      		.word	0
 4068 029e 0000      		.word	0
 4069 02a0 0000      		.word	0
 4070 02a2 0900      		.word	9
 4071 02a4 0865      		.word	25864
 4072 02a6 0700      		.word	7
 4073 02a8 0000      		.word	0
 4074 02aa 0100      		.word	1
 4075 02ac 0100      		.word	1
 4076 02ae 3800      		.word	56
 4077 02b0 2400      		.word	36
 4078 02b2 2500      		.word	37
 4079 02b4 2600      		.word	38
 4080 02b6 2502      		.word	549
 4081 02b8 0855      		.word	21768
 4082 02ba 0661      		.word	24838
 4083 02bc 0564      		.word	25605
 4084 02be 0462      		.word	25092
 4085 02c0 0000      		.word	0
 4086 02c2 0100      		.word	1
 4087 02c4 0100      		.word	1
 4088 02c6 0257      		.word	22274
 4089 02c8 2100      		.word	33
 4090 02ca 2200      		.word	34
 4091 02cc 2300      		.word	35
 4092 02ce 2D00      		.word	45
 4093 02d0 0000      		.word	0
 4094 02d2 1B00      		.word	27
 4095 02d4 DE5C      		.word	23774
 4096 02d6 3100      		.word	49
 4097 02d8 0000      		.word	0
 4098 02da 0100      		.word	1
 4099 02dc 0100      		.word	1
 4100 02de 0157      		.word	22273
 4101 02e0 1E00      		.word	30
 4102 02e2 1F00      		.word	31
 4103 02e4 2000      		.word	32
 4104 02e6 2E02      		.word	558
 4105 02e8 0000      		.word	0
 4106 02ea 0000      		.word	0
 4107 02ec 0000      		.word	0
 4108 02ee 0000      		.word	0
 4109 02f0 0100      		.word	1
 4110 02f2 0100      		.word	1
 4111 02f4 2700      		.word	39
 4112 02f6 2E00      		.word	46
 4113 02f8 0000      		.word	0
 4114 02fa 0000      		.word	0
 4115 02fc 0000      		.word	0
 4116 02fe 0000      		.word	0
 4117 0300 0000      		.word	0
 4118 0302 0000      		.word	0
 4119 0304 0000      		.word	0
 4120 0306 0000      		.word	0
 4121 0308 0000      		.word	0
 4122 030a 0100      		.word	1
 4123 030c 0100      		.word	1
 4124 030e 0000      		.word	0
 4125 0310 FB00      		.word	251
 4126 0312 F000      		.word	240
 4127 0314 FC00      		.word	252
 4128 0316 F900      		.word	249
 4129 0318 0000      		.word	0
 4130 031a F600      		.word	246
 4131 031c F500      		.word	245
 4132 031e F400      		.word	244
 4133 0320 0000      		.word	0
 4134 0322 0100      		.word	1
 4135 0324 0100      		.word	1
 4136 0326 0000      		.word	0
 4137 0328 F200      		.word	242
 4138 032a F100      		.word	241
 4139 032c F300      		.word	243
 4140 032e FA00      		.word	250
 4141 0330 0000      		.word	0
 4142 0332 0000      		.word	0
 4143 0334 0000      		.word	0
 4144 0336 0000      		.word	0
 4145 0338 0000      		.word	0
 4146 033a 0100      		.word	1
 4147 033c 0100      		.word	1
 4148 033e 0000      		.word	0
 4149 0340 0000      		.word	0
 4150 0342 0000      		.word	0
 4151 0344 0000      		.word	0
 4152 0346 0000      		.word	0
 4153 0348 0000      		.word	0
 4154 034a 0000      		.word	0
 4155 034c 0000      		.word	0
 4156 034e 0000      		.word	0
 4157 0350 0100      		.word	1
 4158 0352 0100      		.word	1
 4159 0354 0100      		.word	1
 4160 0356 0100      		.word	1
 4161 0358 0000      		.word	0
 4162 035a 0000      		.word	0
 4163 035c 0000      		.word	0
 4164 035e 0000      		.word	0
 4165 0360 0000      		.word	0
 4166 0362 0000      		.word	0
 4167 0364 0605      		.word	1286
 4168 0366 1905      		.word	1305
 4169 0368 0000      		.word	0
 4170 036a 0000      		.word	0
 4171 036c 0000      		.word	0
 4172 036e 0000      		.word	0
 4173 0370 0000      		.word	0
 4174 0372 0000      		.word	0
 4175 0374 0000      		.word	0
 4176 0376 DD5C      		.word	23773
 4177 0378 1D01      		.word	285
 4178 037a 1B01      		.word	283
 4179 037c 0601      		.word	262
 4180 037e 1901      		.word	281
 4181 0380 0000      		.word	0
 4182 0382 0000      		.word	0
 4183 0384 0000      		.word	0
 4184 0386 0000      		.word	0
 4185 0388 0457      		.word	22276
 4186 038a 0557      		.word	22277
 4187 038c 0000      		.word	0
 4188 038e 0000      		.word	0
 4189 0390 0000      		.word	0
 4190 0392 0000      		.word	0
 4191 0394 1801      		.word	280
 4192 0396 0701      		.word	263
 4193 0398 0000      		.word	0
 4194 039a 0000      		.word	0
 4195 039c 0000      		.word	0
 4196 039e 0000      		.word	0
 4197 03a0 0000      		.word	0
 4198 03a2 0000      		.word	0
 4199 03a4 0000      		.word	0
 4200 03a6 0000      		.word	0
 4201 03a8 0000      		.word	0
 4202 03aa 0000      		.word	0
 4203 03ac 0000      		.word	0
 4204 03ae 0000      		.word	0
 4205 03b0 0000      		.word	0
 4206 03b2 0100      		.word	1
 4207 03b4 0000      		.word	0
 4208 03b6 0100      		.word	1
 4209 03b8 0000      		.word	0
 4210 03ba 0000      		.word	0
 4211 03bc 0000      		.word	0
 4212 03be 0000      		.word	0
 4213 03c0 0000      		.word	0
 4214 03c2 0000      		.word	0
 4215 03c4 0000      		.word	0
 4216 03c6 0000      		.word	0
 4217 03c8 0000      		.word	0
 4218 03ca 0100      		.word	1
 4219 03cc 0100      		.word	1
 4220 03ce 0000      		.word	0
 4221 03d0 4000      		.word	64
 4222 03d2 4100      		.word	65
 4223 03d4 4200      		.word	66
 4224 03d6 4500      		.word	69
 4225 03d8 0855      		.word	21768
 4226 03da 0155      		.word	21761
 4227 03dc 0455      		.word	21764
 4228 03de 0255      		.word	21762
 4229 03e0 0000      		.word	0
 4230 03e2 0100      		.word	1
 4231 03e4 0100      		.word	1
 4232 03e6 0000      		.word	0
 4233 03e8 3D00      		.word	61
 4234 03ea 3E00      		.word	62
 4235 03ec 3F00      		.word	63
 4236 03ee 4400      		.word	68
 4237 03f0 0000      		.word	0
 4238 03f2 0000      		.word	0
 4239 03f4 0000      		.word	0
 4240 03f6 0000      		.word	0
 4241 03f8 0000      		.word	0
 4242 03fa 0100      		.word	1
 4243 03fc 0100      		.word	1
 4244 03fe 0000      		.word	0
 4245 0400 3A00      		.word	58
 4246 0402 3B00      		.word	59
 4247 0404 3C00      		.word	60
 4248 0406 4300      		.word	67
 4249 0408 0000      		.word	0
 4250 040a 0000      		.word	0
 4251 040c 0000      		.word	0
 4252 040e 0000      		.word	0
 4253 0410 E45C      		.word	23780
 4254 0412 0000      		.word	0
 4255 0414 0000      		.word	0
 4256 0416 0000      		.word	0
 4257 0418 0000      		.word	0
 4258 041a 0000      		.word	0
 4259 041c 0000      		.word	0
 4260 041e 0000      		.word	0
 4261 0420 3300      		.word	51
 4262 0422 1C02      		.word	540
 4263 0424 1202      		.word	530
 4264 0426 1802      		.word	536
 4265 0428 1D02      		.word	541
 4266 042a 0A58      		.word	22538
 4267 042c 0B58      		.word	22539
 4268 042e 0A02      		.word	522
 4269 0430 0702      		.word	519
 4270 0432 1102      		.word	529
 4271 0434 1002      		.word	528
 4272 0436 1B02      		.word	539
 4273 0438 1402      		.word	532
 4274 043a 0B02      		.word	523
 4275 043c 0802      		.word	520
 4276 043e 0402      		.word	516
 4277 0440 3700      		.word	55
 4278 0442 0C58      		.word	22540
 4279 0444 0D58      		.word	22541
 4280 0446 0602      		.word	518
 4281 0448 1702      		.word	535
 4282 044a 1502      		.word	533
 4283 044c 1602      		.word	534
 4284 044e 1A02      		.word	538
 4285 0450 0D02      		.word	525
 4286 0452 2D00      		.word	45
 4287 0454 3400      		.word	52
 4288 0456 0E02      		.word	526
 4289 0458 3600      		.word	54
 4290 045a 0E58      		.word	22542
 4291 045c 0F58      		.word	22543
 4292 045e 0502      		.word	517
 4293 0460 1302      		.word	531
 4294 0462 0F02      		.word	527
 4295 0464 0902      		.word	521
 4296 0466 1902      		.word	537
 4297 0468 0000      		.word	0
 4298 046a 0000      		.word	0
 4299 046c 0000      		.word	0
 4300 046e 0000      		.word	0
 4301 0470 E45C      		.word	23780
 4302 0472 DF5C      		.word	23775
 4303 0474 2C62      		.word	25132
 4304 0476 2A4C      		.word	19498
 4305 0478 0000      		.word	0
 4306 047a 0000      		.word	0
 4307 047c 0000      		.word	0
 4308 047e 0000      		.word	0
 4309 0480 0000      		.word	0
 4310 0482 0000      		.word	0
 4311 0484 0000      		.word	0
 4312 0486 0000      		.word	0
 4313 0488 0000      		.word	0
 4314 048a 0100      		.word	1
 4315 048c 0100      		.word	1
 4316 048e 0000      		.word	0
 4317 0490 4A00      		.word	74
 4318 0492 5200      		.word	82
 4319 0494 4D00      		.word	77
 4320 0496 4B00      		.word	75
 4321 0498 0855      		.word	21768
 4322 049a 0155      		.word	21761
 4323 049c 0455      		.word	21764
 4324 049e 0255      		.word	21762
 4325 04a0 0000      		.word	0
 4326 04a2 0100      		.word	1
 4327 04a4 0100      		.word	1
 4328 04a6 0000      		.word	0
 4329 04a8 5000      		.word	80
 4330 04aa 5100      		.word	81
 4331 04ac 4F00      		.word	79
 4332 04ae 4E00      		.word	78
 4333 04b0 0000      		.word	0
 4334 04b2 0000      		.word	0
 4335 04b4 0000      		.word	0
 4336 04b6 0000      		.word	0
 4337 04b8 0000      		.word	0
 4338 04ba 0100      		.word	1
 4339 04bc 0100      		.word	1
 4340 04be 0000      		.word	0
 4341 04c0 0000      		.word	0
 4342 04c2 0000      		.word	0
 4343 04c4 0000      		.word	0
 4344 04c6 0000      		.word	0
 4345 04c8 0000      		.word	0
 4346 04ca 0000      		.word	0
 4347 04cc 0000      		.word	0
 4348 04ce 0000      		.word	0
 4349 04d0 E45C      		.word	23780
 4350 04d2 0000      		.word	0
 4351 04d4 0000      		.word	0
 4352 04d6 0000      		.word	0
 4353 04d8 0000      		.word	0
 4354 04da 0000      		.word	0
 4355 04dc 0000      		.word	0
 4356 04de 0000      		.word	0
 4357 04e0 0000      		.word	0
 4358 04e2 0000      		.word	0
 4359 04e4 0000      		.word	0
 4360 04e6 0000      		.word	0
 4361 04e8 0000      		.word	0
 4362 04ea 0100      		.word	1
 4363 04ec 0100      		.word	1
 4364 04ee 0000      		.word	0
 4365 04f0 FB00      		.word	251
 4366 04f2 F000      		.word	240
 4367 04f4 FC00      		.word	252
 4368 04f6 F900      		.word	249
 4369 04f8 0000      		.word	0
 4370 04fa F600      		.word	246
 4371 04fc F500      		.word	245
 4372 04fe F400      		.word	244
 4373 0500 0000      		.word	0
 4374 0502 0100      		.word	1
 4375 0504 0100      		.word	1
 4376 0506 0000      		.word	0
 4377 0508 F200      		.word	242
 4378 050a F100      		.word	241
 4379 050c F300      		.word	243
 4380 050e FA00      		.word	250
 4381 0510 0000      		.word	0
 4382 0512 0000      		.word	0
 4383 0514 0000      		.word	0
 4384 0516 0000      		.word	0
 4385 0518 0000      		.word	0
 4386 051a 0100      		.word	1
 4387 051c 0100      		.word	1
 4388 051e 0000      		.word	0
 4389 0520 0000      		.word	0
 4390 0522 0000      		.word	0
 4391 0524 0000      		.word	0
 4392 0526 0000      		.word	0
 4393 0528 0000      		.word	0
 4394 052a 0000      		.word	0
 4395 052c 0000      		.word	0
 4396 052e 0000      		.word	0
 4397 0530 E45C      		.word	23780
 4398 0532 0000      		.word	0
 4399 0534 0000      		.word	0
 4400 0536 0000      		.word	0
 4401 0538 0000      		.word	0
 4402 053a 0000      		.word	0
 4403 053c 0000      		.word	0
 4404 053e 0000      		.word	0
 4405 0540 0000      		.word	0
 4406 0542 0900      		.word	9
 4407 0544 0865      		.word	25864
 4408 0546 0700      		.word	7
 4409 0548 0000      		.word	0
 4410 054a 0100      		.word	1
 4411 054c 0100      		.word	1
 4412 054e 3800      		.word	56
 4413 0550 2400      		.word	36
 4414 0552 2500      		.word	37
 4415 0554 2600      		.word	38
 4416 0556 2502      		.word	549
 4417 0558 0855      		.word	21768
 4418 055a 0661      		.word	24838
 4419 055c 0564      		.word	25605
 4420 055e 0462      		.word	25092
 4421 0560 0000      		.word	0
 4422 0562 0100      		.word	1
 4423 0564 0100      		.word	1
 4424 0566 0257      		.word	22274
 4425 0568 2100      		.word	33
 4426 056a 2200      		.word	34
 4427 056c 2300      		.word	35
 4428 056e 2D00      		.word	45
 4429 0570 0000      		.word	0
 4430 0572 2002      		.word	544
 4431 0574 DE5C      		.word	23774
 4432 0576 3100      		.word	49
 4433 0578 0000      		.word	0
 4434 057a 0100      		.word	1
 4435 057c 0100      		.word	1
 4436 057e 0157      		.word	22273
 4437 0580 1E00      		.word	30
 4438 0582 1F00      		.word	31
 4439 0584 2000      		.word	32
 4440 0586 2E02      		.word	558
 4441 0588 0000      		.word	0
 4442 058a 0000      		.word	0
 4443 058c 0000      		.word	0
 4444 058e 0000      		.word	0
 4445 0590 E45C      		.word	23780
 4446 0592 2C00      		.word	44
 4447 0594 2700      		.word	39
 4448 0596 2E00      		.word	46
 4449 0598 0000      		.word	0
 4450 059a 0000      		.word	0
 4451 059c 0000      		.word	0
 4452 059e 0000      		.word	0
 4453 05a0 0100      		.word	1
 4454 05a2 3700      		.word	55
 4455 05a4 2502      		.word	549
 4456 05a6 2402      		.word	548
 4457 05a8 3502      		.word	565
 4458 05aa 0100      		.word	1
 4459 05ac 0100      		.word	1
 4460 05ae 3500      		.word	53
 4461 05b0 2F00      		.word	47
 4462 05b2 2302      		.word	547
 4463 05b4 3000      		.word	48
 4464 05b6 0100      		.word	1
 4465 05b8 0100      		.word	1
 4466 05ba 3602      		.word	566
 4467 05bc 2202      		.word	546
 4468 05be 3702      		.word	567
 4469 05c0 3802      		.word	568
 4470 05c2 0100      		.word	1
 4471 05c4 0100      		.word	1
 4472 05c6 3102      		.word	561
 4473 05c8 2602      		.word	550
 4474 05ca 2102      		.word	545
 4475 05cc 2702      		.word	551
 4476 05ce 0100      		.word	1
 4477 05d0 0100      		.word	1
 4478 05d2 3302      		.word	563
 4479 05d4 1F02      		.word	543
 4480 05d6 1E02      		.word	542
 4481 05d8 3800      		.word	56
 4482 05da 0100      		.word	1
 4483 05dc 0100      		.word	1
 4484 05de 3100      		.word	49
 4485 05e0 2F02      		.word	559
 4486 05e2 2002      		.word	544
 4487 05e4 3002      		.word	560
 4488 05e6 0100      		.word	1
 4489 05e8 0000      		.word	0
 4490 05ea 0000      		.word	0
 4491 05ec 0000      		.word	0
 4492 05ee 0000      		.word	0
 4493 05f0 E45C      		.word	23780
 4494 05f2 2E00      		.word	46
 4495 05f4 2E02      		.word	558
 4496 05f6 2C00      		.word	44
 4497 05f8 0000      		.word	0
 4498 05fa 0000      		.word	0
 4499 05fc 0000      		.word	0
 4500 05fe 0000      		.word	0
 4501               		.text
 4502               	.Letext0:
 4503               		.file 6 "/usr/avr/include/stdint.h"
 4504               		.file 7 "/usr/lib/gcc/avr/7.3.0/include/stddef.h"
 4505               		.file 8 "./tmk_core/common/keyboard.h"
 4506               		.file 9 "./tmk_core/common/keycode.h"
 4507               		.file 10 "./tmk_core/common/action_code.h"
 4508               		.file 11 "./tmk_core/common/action.h"
 4509               		.file 12 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 4510               		.file 13 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 4511               		.file 14 "./lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 4512               		.file 15 "./lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 4513               		.file 16 "/usr/avr/include/stdio.h"
 4514               		.file 17 "./tmk_core/common/report.h"
 4515               		.file 18 "./tmk_core/common/host.h"
 4516               		.file 19 "./tmk_core/common/debug.h"
 4517               		.file 20 "./quantum/keycode_config.h"
 4518               		.file 21 "./quantum/quantum_keycodes.h"
 4519               		.file 22 "./quantum/keymap.h"
 4520               		.file 23 "./tmk_core/common/action_layer.h"
 4521               		.file 24 "./tmk_core/common/timer.h"
 4522               		.file 25 "./tmk_core/common/action_util.h"
 4523               		.file 26 "/usr/avr/include/stdlib.h"
 4524               		.file 27 "./quantum/process_keycode/process_steno.h"
 4525               		.file 28 "./quantum/process_keycode/process_tap_dance.h"
 4526               		.file 29 "./quantum/quantum.h"
 4527               		.file 30 "./quantum/keymap_extras/keymap_steno.h"
 4528               		.file 31 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/beaklti/common/tapdance.h"
 4529               		.file 32 "./tmk_core/common/eeconfig.h"
 4530               		.file 33 "./tmk_core/common/util.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
     /tmp/ccYu9k1K.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYu9k1K.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYu9k1K.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYu9k1K.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYu9k1K.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYu9k1K.s:13     .text.equal_reset:0000000000000000 equal_reset
     /tmp/ccYu9k1K.s:38     .text.private:0000000000000000 private
     /tmp/ccYu9k1K.s:3601   .progmem.data.__c.5777:0000000000000000 __c.5777
     /tmp/ccYu9k1K.s:84     .text.send:0000000000000000 send
     /tmp/ccYu9k1K.s:3596   .progmem.data.__c.5783:0000000000000000 __c.5783
     /tmp/ccYu9k1K.s:129    .text.tap_mods:0000000000000000 tap_mods
     /tmp/ccYu9k1K.s:3726   .bss.mods:0000000000000000 mods
     /tmp/ccYu9k1K.s:175    .text.modifier:0000000000000000 modifier
     /tmp/ccYu9k1K.s:262    .text.key_event:0000000000000000 key_event
     /tmp/ccYu9k1K.s:291    .text.register_shift:0000000000000000 register_shift
     /tmp/ccYu9k1K.s:324    .text.unregister_shift:0000000000000000 unregister_shift
     /tmp/ccYu9k1K.s:346    .text.colon_reset:0000000000000000 colon_reset
     /tmp/ccYu9k1K.s:367    .text.lesser_reset:0000000000000000 lesser_reset
     /tmp/ccYu9k1K.s:392    .text.greater_reset:0000000000000000 greater_reset
     /tmp/ccYu9k1K.s:413    .text.tilde_reset:0000000000000000 tilde_reset
     /tmp/ccYu9k1K.s:434    .text.tap_key:0000000000000000 tap_key
     /tmp/ccYu9k1K.s:465    .text.comma:0000000000000000 comma
     /tmp/ccYu9k1K.s:515    .text.tap_shift:0000000000000000 tap_shift
     /tmp/ccYu9k1K.s:561    .text.tilde:0000000000000000 tilde
     /tmp/ccYu9k1K.s:654    .text.asterisk:0000000000000000 asterisk
     /tmp/ccYu9k1K.s:704    .text.dot:0000000000000000 dot
     /tmp/ccYu9k1K.s:756    .text.tap_mod:0000000000000000 tap_mod
     /tmp/ccYu9k1K.s:845    .text.key_press:0000000000000000 key_press
     /tmp/ccYu9k1K.s:3721   .bss.key_timer:0000000000000000 key_timer
     /tmp/ccYu9k1K.s:909    .text.mt_shift:0000000000000000 mt_shift
     /tmp/ccYu9k1K.s:1019   .text.map_shift:0000000000000000 map_shift
     /tmp/ccYu9k1K.s:1152   .text.double_shift:0000000000000000 double_shift
     /tmp/ccYu9k1K.s:3716   .bss.dt_shift:0000000000000000 dt_shift
     /tmp/ccYu9k1K.s:1185   .text.tap_lt:0000000000000000 tap_lt
     /tmp/ccYu9k1K.s:1448   .text.enter:0000000000000000 enter
     /tmp/ccYu9k1K.s:3711   .bss.tap_rule:0000000000000000 tap_rule
     /tmp/ccYu9k1K.s:1492   .text.space:0000000000000000 space
     /tmp/ccYu9k1K.s:1537   .text.tap_reset:0000000000000000 tap_reset
     /tmp/ccYu9k1K.s:1585   .text.enter_reset:0000000000000000 enter_reset
     /tmp/ccYu9k1K.s:1608   .text.space_reset:0000000000000000 space_reset
     /tmp/ccYu9k1K.s:1631   .text.double_max:0000000000000000 double_max
     /tmp/ccYu9k1K.s:1715   .text.colon:0000000000000000 colon
     /tmp/ccYu9k1K.s:1813   .text.equal:0000000000000000 equal
     /tmp/ccYu9k1K.s:1916   .text.lesser:0000000000000000 lesser
     /tmp/ccYu9k1K.s:2020   .text.greater:0000000000000000 greater
     /tmp/ccYu9k1K.s:2121   .text.thumb_roll:0000000000000000 thumb_roll
     /tmp/ccYu9k1K.s:3641   .bss.thumb:0000000000000000 thumb
     /tmp/ccYu9k1K.s:3636   .bss.overlayer:0000000000000000 overlayer
     /tmp/ccYu9k1K.s:2307   .text.lt:0000000000000000 lt
     /tmp/ccYu9k1K.s:2422   .text.lt_shift:0000000000000000 lt_shift
     /tmp/ccYu9k1K.s:2456   .text.tap_layer:0000000000000000 tap_layer
     /tmp/ccYu9k1K.s:2486   .text.clear_layers:0000000000000000 clear_layers
     /tmp/ccYu9k1K.s:3631   .bss.tt_keycode:0000000000000000 tt_keycode
     /tmp/ccYu9k1K.s:2536   .text.raise_number:0000000000000000 raise_number
     /tmp/ccYu9k1K.s:3626   .bss.double_key:0000000000000000 double_key
     /tmp/ccYu9k1K.s:2603   .text.tt_clear:0000000000000000 tt_clear
     /tmp/ccYu9k1K.s:2624   .text.tt_escape:0000000000000000 tt_escape
     /tmp/ccYu9k1K.s:2685   .text.toggle_plover:0000000000000000 toggle_plover
     /tmp/ccYu9k1K.s:3621   .bss.plover:0000000000000000 plover
     /tmp/ccYu9k1K.s:2740   .text.base_layer:0000000000000000 base_layer
     /tmp/ccYu9k1K.s:2765   .text.steno:0000000000000000 steno
     /tmp/ccYu9k1K.s:2826   .text.steno_exit:0000000000000000 steno_exit
     /tmp/ccYu9k1K.s:2858   .text.process_record_user:0000000000000000 process_record_user
     /tmp/ccYu9k1K.s:3606   .bss.repeating:0000000000000000 repeating
     /tmp/ccYu9k1K.s:3611   .bss.down_rule:0000000000000000 down_rule
     /tmp/ccYu9k1K.s:3616   .bss.base_n:0000000000000000 base_n
     /tmp/ccYu9k1K.s:3577   .text.matrix_init_user:0000000000000000 matrix_init_user
     /tmp/ccYu9k1K.s:3647   .data.tap_dance_actions:0000000000000000 tap_dance_actions
     /tmp/ccYu9k1K.s:3732   .progmem.data.keymaps:0000000000000000 keymaps

UNDEFINED SYMBOLS
unregister_code
layer_off
send_string_P
reset_tap_dance
register_code
send_string
timer_elapsed
timer_read
layer_state
biton32
layer_on
set_oneshot_layer
clear_oneshot_layer_state
clear_mods
set_single_persistent_default_layer
eeconfig_is_enabled
eeconfig_init
eeconfig_read_keymap
keymap_config
eeconfig_update_keymap
steno_set_mode
__do_copy_data
__do_clear_bss
