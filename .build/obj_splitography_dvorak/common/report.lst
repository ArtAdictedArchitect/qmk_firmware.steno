   1               		.file	"report.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.has_anykey,"ax",@progbits
  11               	.global	has_anykey
  13               	has_anykey:
  14               	.LFB100:
  15               		.file 1 "./tmk_core/common/report.c"
   1:./tmk_core/common/report.c **** /* Copyright 2017 Fred Sundvik
   2:./tmk_core/common/report.c ****  *
   3:./tmk_core/common/report.c ****  * This program is free software: you can redistribute it and/or modify
   4:./tmk_core/common/report.c ****  * it under the terms of the GNU General Public License as published by
   5:./tmk_core/common/report.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:./tmk_core/common/report.c ****  * (at your option) any later version.
   7:./tmk_core/common/report.c ****  *
   8:./tmk_core/common/report.c ****  * This program is distributed in the hope that it will be useful,
   9:./tmk_core/common/report.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:./tmk_core/common/report.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:./tmk_core/common/report.c ****  * GNU General Public License for more details.
  12:./tmk_core/common/report.c ****  *
  13:./tmk_core/common/report.c ****  * You should have received a copy of the GNU General Public License
  14:./tmk_core/common/report.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:./tmk_core/common/report.c ****  */
  16:./tmk_core/common/report.c **** 
  17:./tmk_core/common/report.c **** #include "report.h"
  18:./tmk_core/common/report.c **** #include "host.h"
  19:./tmk_core/common/report.c **** #include "keycode_config.h"
  20:./tmk_core/common/report.c **** #include "debug.h"
  21:./tmk_core/common/report.c **** #include "util.h"
  22:./tmk_core/common/report.c **** 
  23:./tmk_core/common/report.c **** uint8_t has_anykey(report_keyboard_t* keyboard_report)
  24:./tmk_core/common/report.c **** {
  16               		.loc 1 24 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23 0000 FC01      		movw r30,r24
  24 0002 3196      		adiw r30,1
  25 0004 9C01      		movw r18,r24
  26 0006 205E      		subi r18,-32
  27 0008 3F4F      		sbci r19,-1
  25:./tmk_core/common/report.c ****     uint8_t cnt = 0;
  28               		.loc 1 25 0
  29 000a 80E0      		ldi r24,0
  30               	.LVL1:
  31               	.L3:
  32               	.LBB2:
  26:./tmk_core/common/report.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
  27:./tmk_core/common/report.c ****         if (keyboard_report->raw[i])
  33               		.loc 1 27 0
  34 000c 9191      		ld r25,Z+
  35               	.LVL2:
  36 000e 9111      		cpse r25,__zero_reg__
  28:./tmk_core/common/report.c ****             cnt++;
  37               		.loc 1 28 0
  38 0010 8F5F      		subi r24,lo8(-(1))
  39               	.LVL3:
  40               	.L2:
  26:./tmk_core/common/report.c ****     for (uint8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
  41               		.loc 1 26 0 discriminator 2
  42 0012 E217      		cp r30,r18
  43 0014 F307      		cpc r31,r19
  44 0016 01F4      		brne .L3
  45               	/* epilogue start */
  46               	.LBE2:
  29:./tmk_core/common/report.c ****     }
  30:./tmk_core/common/report.c ****     return cnt;
  31:./tmk_core/common/report.c **** }
  47               		.loc 1 31 0
  48 0018 0895      		ret
  49               		.cfi_endproc
  50               	.LFE100:
  52               		.section	.text.get_first_key,"ax",@progbits
  53               	.global	get_first_key
  55               	get_first_key:
  56               	.LFB101:
  32:./tmk_core/common/report.c **** 
  33:./tmk_core/common/report.c **** uint8_t get_first_key(report_keyboard_t* keyboard_report)
  34:./tmk_core/common/report.c **** {
  57               		.loc 1 34 0
  58               		.cfi_startproc
  59               	.LVL4:
  60 0000 CF93      		push r28
  61               	.LCFI0:
  62               		.cfi_def_cfa_offset 3
  63               		.cfi_offset 28, -2
  64 0002 DF93      		push r29
  65               	.LCFI1:
  66               		.cfi_def_cfa_offset 4
  67               		.cfi_offset 29, -3
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 2 */
  71               	.L__stack_usage = 2
  35:./tmk_core/common/report.c **** #ifdef NKRO_ENABLE
  36:./tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
  72               		.loc 1 36 0
  73 0004 2091 0000 		lds r18,keyboard_protocol
  74 0008 FC01      		movw r30,r24
  75 000a 2223      		tst r18
  76 000c 01F0      		breq .L9
  77               		.loc 1 36 0 is_stmt 0 discriminator 1
  78 000e 2091 0000 		lds r18,keymap_config
  79 0012 27FF      		sbrs r18,7
  80 0014 00C0      		rjmp .L9
  81 0016 3196      		adiw r30,1
  82               	.LBB3:
  37:./tmk_core/common/report.c ****         uint8_t i = 0;
  83               		.loc 1 37 0 is_stmt 1
  84 0018 C0E0      		ldi r28,0
  85               	.L10:
  86               	.LVL5:
  38:./tmk_core/common/report.c ****         for (; i < KEYBOARD_REPORT_BITS && !keyboard_report->nkro.bits[i]; i++)
  87               		.loc 1 38 0 discriminator 2
  88 001a 2191      		ld r18,Z+
  89 001c 2111      		cpse r18,__zero_reg__
  90 001e 00C0      		rjmp .L11
  91               		.loc 1 38 0 is_stmt 0 discriminator 3
  92 0020 CF5F      		subi r28,lo8(-(1))
  93               	.LVL6:
  94 0022 CF31      		cpi r28,lo8(31)
  95 0024 01F4      		brne .L10
  96               	.L11:
  39:./tmk_core/common/report.c ****             ;
  40:./tmk_core/common/report.c ****         return i<<3 | biton(keyboard_report->nkro.bits[i]);
  97               		.loc 1 40 0 is_stmt 1
  98 0026 D0E0      		ldi r29,0
  99 0028 8C0F      		add r24,r28
 100 002a 9D1F      		adc r25,r29
 101               	.LVL7:
 102 002c FC01      		movw r30,r24
 103 002e 8181      		ldd r24,Z+1
 104 0030 0E94 0000 		call biton
 105               	.LVL8:
 106 0034 93E0      		ldi r25,3
 107               		1:
 108 0036 CC0F      		lsl r28
 109 0038 DD1F      		rol r29
 110 003a 9A95      		dec r25
 111 003c 01F4      		brne 1b
 112               	.LVL9:
 113 003e 8C2B      		or r24,r28
 114               	.L8:
 115               	/* epilogue start */
 116               	.LBE3:
  41:./tmk_core/common/report.c ****     }
  42:./tmk_core/common/report.c **** #endif
  43:./tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
  44:./tmk_core/common/report.c ****     uint8_t i = cb_head;
  45:./tmk_core/common/report.c ****     do {
  46:./tmk_core/common/report.c ****         if (keyboard_report->keys[i] != 0) {
  47:./tmk_core/common/report.c ****             break;
  48:./tmk_core/common/report.c ****         }
  49:./tmk_core/common/report.c ****         i = RO_INC(i);
  50:./tmk_core/common/report.c ****     } while (i != cb_tail);
  51:./tmk_core/common/report.c ****     return keyboard_report->keys[i];
  52:./tmk_core/common/report.c **** #else
  53:./tmk_core/common/report.c ****     return keyboard_report->keys[0];
  54:./tmk_core/common/report.c **** #endif
  55:./tmk_core/common/report.c **** }
 117               		.loc 1 55 0
 118 0040 DF91      		pop r29
 119 0042 CF91      		pop r28
 120 0044 0895      		ret
 121               	.LVL10:
 122               	.L9:
  53:./tmk_core/common/report.c **** #endif
 123               		.loc 1 53 0
 124 0046 8281      		ldd r24,Z+2
 125               	.LVL11:
 126 0048 00C0      		rjmp .L8
 127               		.cfi_endproc
 128               	.LFE101:
 130               		.section	.text.add_key_byte,"ax",@progbits
 131               	.global	add_key_byte
 133               	add_key_byte:
 134               	.LFB102:
  56:./tmk_core/common/report.c **** 
  57:./tmk_core/common/report.c **** void add_key_byte(report_keyboard_t* keyboard_report, uint8_t code)
  58:./tmk_core/common/report.c **** {
 135               		.loc 1 58 0
 136               		.cfi_startproc
 137               	.LVL12:
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 0 */
 141               	.L__stack_usage = 0
 142 0000 9C01      		movw r18,r24
 143               	.LVL13:
 144 0002 FC01      		movw r30,r24
 145 0004 3296      		adiw r30,2
  59:./tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
  60:./tmk_core/common/report.c ****     int8_t i = cb_head;
  61:./tmk_core/common/report.c ****     int8_t empty = -1;
  62:./tmk_core/common/report.c ****     if (cb_count) {
  63:./tmk_core/common/report.c ****         do {
  64:./tmk_core/common/report.c ****             if (keyboard_report->keys[i] == code) {
  65:./tmk_core/common/report.c ****                 return;
  66:./tmk_core/common/report.c ****             }
  67:./tmk_core/common/report.c ****             if (empty == -1 && keyboard_report->keys[i] == 0) {
  68:./tmk_core/common/report.c ****                 empty = i;
  69:./tmk_core/common/report.c ****             }
  70:./tmk_core/common/report.c ****             i = RO_INC(i);
  71:./tmk_core/common/report.c ****         } while (i != cb_tail);
  72:./tmk_core/common/report.c ****         if (i == cb_tail) {
  73:./tmk_core/common/report.c ****             if (cb_tail == cb_head) {
  74:./tmk_core/common/report.c ****                 // buffer is full
  75:./tmk_core/common/report.c ****                 if (empty == -1) {
  76:./tmk_core/common/report.c ****                     // pop head when has no empty space
  77:./tmk_core/common/report.c ****                     cb_head = RO_INC(cb_head);
  78:./tmk_core/common/report.c ****                     cb_count--;
  79:./tmk_core/common/report.c ****                 }
  80:./tmk_core/common/report.c ****                 else {
  81:./tmk_core/common/report.c ****                     // left shift when has empty space
  82:./tmk_core/common/report.c ****                     uint8_t offset = 1;
  83:./tmk_core/common/report.c ****                     i = RO_INC(empty);
  84:./tmk_core/common/report.c ****                     do {
  85:./tmk_core/common/report.c ****                         if (keyboard_report->keys[i] != 0) {
  86:./tmk_core/common/report.c ****                             keyboard_report->keys[empty] = keyboard_report->keys[i];
  87:./tmk_core/common/report.c ****                             keyboard_report->keys[i] = 0;
  88:./tmk_core/common/report.c ****                             empty = RO_INC(empty);
  89:./tmk_core/common/report.c ****                         }
  90:./tmk_core/common/report.c ****                         else {
  91:./tmk_core/common/report.c ****                             offset++;
  92:./tmk_core/common/report.c ****                         }
  93:./tmk_core/common/report.c ****                         i = RO_INC(i);
  94:./tmk_core/common/report.c ****                     } while (i != cb_tail);
  95:./tmk_core/common/report.c ****                     cb_tail = RO_SUB(cb_tail, offset);
  96:./tmk_core/common/report.c ****                 }
  97:./tmk_core/common/report.c ****             }
  98:./tmk_core/common/report.c ****         }
  99:./tmk_core/common/report.c ****     }
 100:./tmk_core/common/report.c ****     // add to tail
 101:./tmk_core/common/report.c ****     keyboard_report->keys[cb_tail] = code;
 102:./tmk_core/common/report.c ****     cb_tail = RO_INC(cb_tail);
 103:./tmk_core/common/report.c ****     cb_count++;
 104:./tmk_core/common/report.c **** #else
 105:./tmk_core/common/report.c ****     int8_t i = 0;
 106:./tmk_core/common/report.c ****     int8_t empty = -1;
 146               		.loc 1 106 0
 147 0006 9FEF      		ldi r25,lo8(-1)
 105:./tmk_core/common/report.c ****     int8_t empty = -1;
 148               		.loc 1 105 0
 149 0008 80E0      		ldi r24,0
 150               	.LVL14:
 151               	.L23:
 107:./tmk_core/common/report.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 108:./tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 152               		.loc 1 108 0
 153 000a 4191      		ld r20,Z+
 154 000c 4617      		cp r20,r22
 155 000e 01F0      		breq .L20
 109:./tmk_core/common/report.c ****             break;
 110:./tmk_core/common/report.c ****         }
 111:./tmk_core/common/report.c ****         if (empty == -1 && keyboard_report->keys[i] == 0) {
 156               		.loc 1 111 0
 157 0010 9F3F      		cpi r25,lo8(-1)
 158 0012 01F4      		brne .L22
 159               		.loc 1 111 0 is_stmt 0 discriminator 1
 160 0014 4111      		cpse r20,__zero_reg__
 161 0016 00C0      		rjmp .L22
 162               		.loc 1 111 0
 163 0018 982F      		mov r25,r24
 164               	.LVL15:
 165               	.L22:
 166 001a 8F5F      		subi r24,lo8(-(1))
 167               	.LVL16:
 107:./tmk_core/common/report.c ****     for (; i < KEYBOARD_REPORT_KEYS; i++) {
 168               		.loc 1 107 0 is_stmt 1
 169 001c 8E31      		cpi r24,lo8(30)
 170 001e 01F4      		brne .L23
 112:./tmk_core/common/report.c ****             empty = i;
 113:./tmk_core/common/report.c ****         }
 114:./tmk_core/common/report.c ****     }
 115:./tmk_core/common/report.c ****     if (i == KEYBOARD_REPORT_KEYS) {
 116:./tmk_core/common/report.c ****         if (empty != -1) {
 171               		.loc 1 116 0
 172 0020 9F3F      		cpi r25,lo8(-1)
 173 0022 01F4      		brne .L25
 174               	.L20:
 175               	/* epilogue start */
 117:./tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 118:./tmk_core/common/report.c ****         }
 119:./tmk_core/common/report.c ****     }
 120:./tmk_core/common/report.c **** #endif
 121:./tmk_core/common/report.c **** }
 176               		.loc 1 121 0
 177 0024 0895      		ret
 178               	.L25:
 117:./tmk_core/common/report.c ****             keyboard_report->keys[empty] = code;
 179               		.loc 1 117 0
 180 0026 290F      		add r18,r25
 181 0028 311D      		adc r19,__zero_reg__
 182 002a 97FD      		sbrc r25,7
 183 002c 3A95      		dec r19
 184               	.LVL17:
 185 002e F901      		movw r30,r18
 186 0030 6283      		std Z+2,r22
 187               		.loc 1 121 0
 188 0032 0895      		ret
 189               		.cfi_endproc
 190               	.LFE102:
 192               		.section	.text.del_key_byte,"ax",@progbits
 193               	.global	del_key_byte
 195               	del_key_byte:
 196               	.LFB103:
 122:./tmk_core/common/report.c **** 
 123:./tmk_core/common/report.c **** void del_key_byte(report_keyboard_t* keyboard_report, uint8_t code)
 124:./tmk_core/common/report.c **** {
 197               		.loc 1 124 0
 198               		.cfi_startproc
 199               	.LVL18:
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 0 */
 203               	.L__stack_usage = 0
 204 0000 FC01      		movw r30,r24
 205 0002 3296      		adiw r30,2
 206 0004 8096      		adiw r24,32
 207               	.LVL19:
 208               	.L30:
 209               	.LBB4:
 125:./tmk_core/common/report.c **** #ifdef USB_6KRO_ENABLE
 126:./tmk_core/common/report.c ****     uint8_t i = cb_head;
 127:./tmk_core/common/report.c ****     if (cb_count) {
 128:./tmk_core/common/report.c ****         do {
 129:./tmk_core/common/report.c ****             if (keyboard_report->keys[i] == code) {
 130:./tmk_core/common/report.c ****                 keyboard_report->keys[i] = 0;
 131:./tmk_core/common/report.c ****                 cb_count--;
 132:./tmk_core/common/report.c ****                 if (cb_count == 0) {
 133:./tmk_core/common/report.c ****                     // reset head and tail
 134:./tmk_core/common/report.c ****                     cb_tail = cb_head = 0;
 135:./tmk_core/common/report.c ****                 }
 136:./tmk_core/common/report.c ****                 if (i == RO_DEC(cb_tail)) {
 137:./tmk_core/common/report.c ****                     // left shift when next to tail
 138:./tmk_core/common/report.c ****                     do {
 139:./tmk_core/common/report.c ****                         cb_tail = RO_DEC(cb_tail);
 140:./tmk_core/common/report.c ****                         if (keyboard_report->keys[RO_DEC(cb_tail)] != 0) {
 141:./tmk_core/common/report.c ****                             break;
 142:./tmk_core/common/report.c ****                         }
 143:./tmk_core/common/report.c ****                     } while (cb_tail != cb_head);
 144:./tmk_core/common/report.c ****                 }
 145:./tmk_core/common/report.c ****                 break;
 146:./tmk_core/common/report.c ****             }
 147:./tmk_core/common/report.c ****             i = RO_INC(i);
 148:./tmk_core/common/report.c ****         } while (i != cb_tail);
 149:./tmk_core/common/report.c ****     }
 150:./tmk_core/common/report.c **** #else
 151:./tmk_core/common/report.c ****     for (uint8_t i = 0; i < KEYBOARD_REPORT_KEYS; i++) {
 152:./tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 210               		.loc 1 152 0
 211 0006 2191      		ld r18,Z+
 212               	.LVL20:
 213 0008 2613      		cpse r18,r22
 214 000a 00C0      		rjmp .L29
 153:./tmk_core/common/report.c ****             keyboard_report->keys[i] = 0;
 215               		.loc 1 153 0
 216 000c DF01      		movw r26,r30
 217 000e 1197      		sbiw r26,1
 218 0010 1C92      		st X,__zero_reg__
 219               	.L29:
 220               	.LVL21:
 151:./tmk_core/common/report.c ****         if (keyboard_report->keys[i] == code) {
 221               		.loc 1 151 0 discriminator 2
 222 0012 E817      		cp r30,r24
 223 0014 F907      		cpc r31,r25
 224 0016 01F4      		brne .L30
 225               	/* epilogue start */
 226               	.LBE4:
 154:./tmk_core/common/report.c ****         }
 155:./tmk_core/common/report.c ****     }
 156:./tmk_core/common/report.c **** #endif
 157:./tmk_core/common/report.c **** }
 227               		.loc 1 157 0
 228 0018 0895      		ret
 229               		.cfi_endproc
 230               	.LFE103:
 232               		.section	.text.add_key_bit,"ax",@progbits
 233               	.global	add_key_bit
 235               	add_key_bit:
 236               	.LFB104:
 158:./tmk_core/common/report.c **** 
 159:./tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 160:./tmk_core/common/report.c **** void add_key_bit(report_keyboard_t* keyboard_report, uint8_t code)
 161:./tmk_core/common/report.c **** {
 237               		.loc 1 161 0
 238               		.cfi_startproc
 239               	.LVL22:
 240               	/* prologue: function */
 241               	/* frame size = 0 */
 242               	/* stack size = 0 */
 243               	.L__stack_usage = 0
 162:./tmk_core/common/report.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 244               		.loc 1 162 0
 245 0000 E62F      		mov r30,r22
 246 0002 E695      		lsr r30
 247 0004 E695      		lsr r30
 248 0006 E695      		lsr r30
 249 0008 EF31      		cpi r30,lo8(31)
 250 000a 01F0      		breq .L32
 163:./tmk_core/common/report.c ****         keyboard_report->nkro.bits[code>>3] |= 1<<(code&7);
 251               		.loc 1 163 0
 252 000c E80F      		add r30,r24
 253 000e F92F      		mov r31,r25
 254 0010 F11D      		adc r31,__zero_reg__
 255 0012 6770      		andi r22,lo8(7)
 256               	.LVL23:
 257 0014 21E0      		ldi r18,lo8(1)
 258 0016 30E0      		ldi r19,0
 259 0018 00C0      		rjmp 2f
 260               		1:
 261 001a 220F      		lsl r18
 262               		2:
 263 001c 6A95      		dec r22
 264 001e 02F4      		brpl 1b
 265 0020 8181      		ldd r24,Z+1
 266               	.LVL24:
 267 0022 822B      		or r24,r18
 268 0024 8183      		std Z+1,r24
 269               	.L32:
 270               	/* epilogue start */
 164:./tmk_core/common/report.c ****     } else {
 165:./tmk_core/common/report.c ****         dprintf("add_key_bit: can't add: %02X\n", code);
 166:./tmk_core/common/report.c ****     }
 167:./tmk_core/common/report.c **** }
 271               		.loc 1 167 0
 272 0026 0895      		ret
 273               		.cfi_endproc
 274               	.LFE104:
 276               		.section	.text.del_key_bit,"ax",@progbits
 277               	.global	del_key_bit
 279               	del_key_bit:
 280               	.LFB105:
 168:./tmk_core/common/report.c **** 
 169:./tmk_core/common/report.c **** void del_key_bit(report_keyboard_t* keyboard_report, uint8_t code)
 170:./tmk_core/common/report.c **** {
 281               		.loc 1 170 0
 282               		.cfi_startproc
 283               	.LVL25:
 284               	/* prologue: function */
 285               	/* frame size = 0 */
 286               	/* stack size = 0 */
 287               	.L__stack_usage = 0
 171:./tmk_core/common/report.c ****     if ((code>>3) < KEYBOARD_REPORT_BITS) {
 288               		.loc 1 171 0
 289 0000 E62F      		mov r30,r22
 290 0002 E695      		lsr r30
 291 0004 E695      		lsr r30
 292 0006 E695      		lsr r30
 293 0008 EF31      		cpi r30,lo8(31)
 294 000a 01F0      		breq .L37
 172:./tmk_core/common/report.c ****         keyboard_report->nkro.bits[code>>3] &= ~(1<<(code&7));
 295               		.loc 1 172 0
 296 000c E80F      		add r30,r24
 297 000e F92F      		mov r31,r25
 298 0010 F11D      		adc r31,__zero_reg__
 299 0012 6770      		andi r22,lo8(7)
 300               	.LVL26:
 301 0014 21E0      		ldi r18,lo8(1)
 302 0016 30E0      		ldi r19,0
 303 0018 00C0      		rjmp 2f
 304               		1:
 305 001a 220F      		lsl r18
 306               		2:
 307 001c 6A95      		dec r22
 308 001e 02F4      		brpl 1b
 309 0020 2095      		com r18
 310 0022 8181      		ldd r24,Z+1
 311               	.LVL27:
 312 0024 2823      		and r18,r24
 313 0026 2183      		std Z+1,r18
 314               	.L37:
 315               	/* epilogue start */
 173:./tmk_core/common/report.c ****     } else {
 174:./tmk_core/common/report.c ****         dprintf("del_key_bit: can't del: %02X\n", code);
 175:./tmk_core/common/report.c ****     }
 176:./tmk_core/common/report.c **** }
 316               		.loc 1 176 0
 317 0028 0895      		ret
 318               		.cfi_endproc
 319               	.LFE105:
 321               		.section	.text.add_key_to_report,"ax",@progbits
 322               	.global	add_key_to_report
 324               	add_key_to_report:
 325               	.LFB106:
 177:./tmk_core/common/report.c **** #endif
 178:./tmk_core/common/report.c **** 
 179:./tmk_core/common/report.c **** void add_key_to_report(report_keyboard_t* keyboard_report, int8_t key)
 180:./tmk_core/common/report.c **** {
 326               		.loc 1 180 0
 327               		.cfi_startproc
 328               	.LVL28:
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 181:./tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 182:./tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 333               		.loc 1 182 0
 334 0000 2091 0000 		lds r18,keyboard_protocol
 335 0004 2223      		tst r18
 336 0006 01F0      		breq .L43
 337               		.loc 1 182 0 is_stmt 0 discriminator 1
 338 0008 2091 0000 		lds r18,keymap_config
 339 000c 27FD      		sbrc r18,7
 183:./tmk_core/common/report.c ****         add_key_bit(keyboard_report, key);
 340               		.loc 1 183 0 is_stmt 1
 341 000e 0C94 0000 		jmp add_key_bit
 342               	.LVL29:
 343               	.L43:
 184:./tmk_core/common/report.c ****         return;
 185:./tmk_core/common/report.c ****     }
 186:./tmk_core/common/report.c **** #endif
 187:./tmk_core/common/report.c ****     add_key_byte(keyboard_report, key);
 344               		.loc 1 187 0
 345 0012 0C94 0000 		jmp add_key_byte
 346               	.LVL30:
 347               		.cfi_endproc
 348               	.LFE106:
 350               		.section	.text.del_key_from_report,"ax",@progbits
 351               	.global	del_key_from_report
 353               	del_key_from_report:
 354               	.LFB107:
 188:./tmk_core/common/report.c **** }
 189:./tmk_core/common/report.c **** 
 190:./tmk_core/common/report.c **** void del_key_from_report(report_keyboard_t* keyboard_report, uint8_t key)
 191:./tmk_core/common/report.c **** {
 355               		.loc 1 191 0
 356               		.cfi_startproc
 357               	.LVL31:
 358               	/* prologue: function */
 359               	/* frame size = 0 */
 360               	/* stack size = 0 */
 361               	.L__stack_usage = 0
 192:./tmk_core/common/report.c **** #ifdef NKRO_ENABLE
 193:./tmk_core/common/report.c ****     if (keyboard_protocol && keymap_config.nkro) {
 362               		.loc 1 193 0
 363 0000 2091 0000 		lds r18,keyboard_protocol
 364 0004 2223      		tst r18
 365 0006 01F0      		breq .L48
 366               		.loc 1 193 0 is_stmt 0 discriminator 1
 367 0008 2091 0000 		lds r18,keymap_config
 368 000c 27FD      		sbrc r18,7
 194:./tmk_core/common/report.c ****         del_key_bit(keyboard_report, key);
 369               		.loc 1 194 0 is_stmt 1
 370 000e 0C94 0000 		jmp del_key_bit
 371               	.LVL32:
 372               	.L48:
 195:./tmk_core/common/report.c ****         return;
 196:./tmk_core/common/report.c ****     }
 197:./tmk_core/common/report.c **** #endif
 198:./tmk_core/common/report.c ****     del_key_byte(keyboard_report, key);
 373               		.loc 1 198 0
 374 0012 0C94 0000 		jmp del_key_byte
 375               	.LVL33:
 376               		.cfi_endproc
 377               	.LFE107:
 379               		.section	.text.clear_keys_from_report,"ax",@progbits
 380               	.global	clear_keys_from_report
 382               	clear_keys_from_report:
 383               	.LFB108:
 199:./tmk_core/common/report.c **** }
 200:./tmk_core/common/report.c **** 
 201:./tmk_core/common/report.c **** void clear_keys_from_report(report_keyboard_t* keyboard_report)
 202:./tmk_core/common/report.c **** {
 384               		.loc 1 202 0
 385               		.cfi_startproc
 386               	.LVL34:
 387               	/* prologue: function */
 388               	/* frame size = 0 */
 389               	/* stack size = 0 */
 390               	.L__stack_usage = 0
 391 0000 FC01      		movw r30,r24
 392 0002 3196      		adiw r30,1
 393 0004 8096      		adiw r24,32
 394               	.LVL35:
 395               	.L53:
 396               	.LBB5:
 203:./tmk_core/common/report.c ****     // not clear mods
 204:./tmk_core/common/report.c ****     for (int8_t i = 1; i < KEYBOARD_REPORT_SIZE; i++) {
 205:./tmk_core/common/report.c ****         keyboard_report->raw[i] = 0;
 397               		.loc 1 205 0 discriminator 3
 398 0006 1192      		st Z+,__zero_reg__
 399               	.LVL36:
 204:./tmk_core/common/report.c ****         keyboard_report->raw[i] = 0;
 400               		.loc 1 204 0 discriminator 3
 401 0008 E817      		cp r30,r24
 402 000a F907      		cpc r31,r25
 403 000c 01F4      		brne .L53
 404               	/* epilogue start */
 405               	.LBE5:
 206:./tmk_core/common/report.c ****     }
 207:./tmk_core/common/report.c **** }...
 406               		.loc 1 207 0
 407 000e 0895      		ret
 408               		.cfi_endproc
 409               	.LFE108:
 411               		.text
 412               	.Letext0:
 413               		.file 2 "/usr/avr/include/stdint.h"
 414               		.file 3 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 415               		.file 4 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 416               		.file 5 "./lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 417               		.file 6 "./lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 418               		.file 7 "/usr/avr/include/stdio.h"
 419               		.file 8 "./tmk_core/common/report.h"
 420               		.file 9 "./tmk_core/common/host.h"
 421               		.file 10 "./quantum/keycode_config.h"
 422               		.file 11 "./tmk_core/common/debug.h"
 423               		.file 12 "./tmk_core/common/util.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 report.c
     /tmp/ccbR3iWB.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccbR3iWB.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccbR3iWB.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccbR3iWB.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccbR3iWB.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccbR3iWB.s:13     .text.has_anykey:0000000000000000 has_anykey
     /tmp/ccbR3iWB.s:55     .text.get_first_key:0000000000000000 get_first_key
     /tmp/ccbR3iWB.s:133    .text.add_key_byte:0000000000000000 add_key_byte
     /tmp/ccbR3iWB.s:195    .text.del_key_byte:0000000000000000 del_key_byte
     /tmp/ccbR3iWB.s:235    .text.add_key_bit:0000000000000000 add_key_bit
     /tmp/ccbR3iWB.s:279    .text.del_key_bit:0000000000000000 del_key_bit
     /tmp/ccbR3iWB.s:324    .text.add_key_to_report:0000000000000000 add_key_to_report
     /tmp/ccbR3iWB.s:353    .text.del_key_from_report:0000000000000000 del_key_from_report
     /tmp/ccbR3iWB.s:382    .text.clear_keys_from_report:0000000000000000 clear_keys_from_report

UNDEFINED SYMBOLS
keyboard_protocol
keymap_config
biton
