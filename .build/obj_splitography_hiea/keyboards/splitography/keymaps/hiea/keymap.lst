   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.tilde_reset,"ax",@progbits
  11               	.global	tilde_reset
  13               	tilde_reset:
  14               	.LFB129:
  15               		.file 1 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h"
   1:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
   2:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // .......................................................... Keycode Primitives
   3:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
   4:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // register simple key press
   5:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tap_key(uint16_t keycode)
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   register_code  (keycode);
   8:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(keycode);
   9:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
  10:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  11:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void shift_key(uint16_t keycode)
  12:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  13:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   register_code  (KC_LSFT);
  14:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_key        (keycode);
  15:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_LSFT);
  16:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
  17:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  18:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define SHIFT   1
  19:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define NOSHIFT 0
  20:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  21:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint16_t key_timer = 0;
  22:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  23:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // key press for thumb_layer() and lt_shift() macros
  24:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** bool key_press(uint8_t shift, uint16_t keycode)
  25:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  26:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (keycode) {
  27:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (timer_elapsed(key_timer) < TAPPING_TERM) {
  28:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       if (shift) {
  29:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         shift_key(keycode);
  30:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
  31:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       else {
  32:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         tap_key(keycode);
  33:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
  34:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       return true;
  35:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
  36:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  37:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   return false;
  38:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
  39:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  40:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ALT_T, CTL_T, GUI_T, SFT_T for shifted keycodes
  41:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void mt_shift(keyrecord_t *record, uint16_t modifier, uint16_t modifier2, uint16_t keycode)
  42:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  43:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
  44:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = timer_read();
  45:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code(modifier);
  46:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (modifier2) {
  47:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       register_code(modifier2);
  48:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
  49:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  50:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
  51:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     unregister_code(modifier);
  52:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (modifier2) {
  53:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       unregister_code(modifier2);
  54:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
  55:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (timer_elapsed(key_timer) < TAPPING_TERM) {
  56:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       shift_key(keycode);
  57:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
  58:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = 0;
  59:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  60:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
  61:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  62:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ................................................................... Mod Masks
  63:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  64:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // tap dance persistant mods, see process_record_user()
  65:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // keyboard_report->mods (?) appears to be cleared by tap dance
  66:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint8_t mods = 0;
  67:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  68:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tap_mods(keyrecord_t *record, uint16_t keycode)
  69:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  70:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
  71:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     mods |= MOD_BIT(keycode);
  72:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  73:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
  74:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     mods &= ~(MOD_BIT(keycode));
  75:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  76:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
  77:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  78:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // (un)register modifiers
  79:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void modifier(void (*f)(uint8_t))
  80:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  81:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (mods & MOD_BIT(KC_LCTL)) {
  82:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LCTL);
  83:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  84:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (mods & MOD_BIT(KC_LGUI)) {
  85:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LGUI);
  86:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  87:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (mods & MOD_BIT(KC_LALT)) {
  88:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LALT);
  89:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  90:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (mods & MOD_BIT(KC_LSFT)) {
  91:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LSFT);
  92:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
  93:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
  94:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  95:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // .................................................... Triple Dance Shift/Layer
  96:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  97:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint8_t dt_shift = 0;
  98:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
  99:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void double_shift(uint16_t keycode, uint8_t layer)
 100:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 101:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_key (keycode);
 102:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (DT_SHIFT) {
 103:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // set_oneshot_mods(MOD_LSFT);
 104:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // layer_on(layer);
 105:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on         (_SHIFT);
 106:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     set_oneshot_layer(_SHIFT, ONESHOT_START);
 107:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     dt_shift = 1;
 108:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 109:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 110:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(layer);
 111:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 112:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 113:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 114:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // tap dance LT (LAYER, KEY) emulation with <KEY><DOWN> -> <KEY><SHIFT> and auto-repeat extensions!
 115:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tap_shift(qk_tap_dance_state_t *state, uint16_t keycode, uint8_t layer)
 116:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 117:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // double tap plus down
 118:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 119:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // double enter shift
 120:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (keycode == KC_ENT) {
 121:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key     (keycode);
 122:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       double_shift(keycode, layer);
 123:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 124:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // repeating keycode
 125:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     else {
 126:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       register_code(keycode);
 127:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 128:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 129:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // tap plus down (or double tap): keycode (one shot) shift
 130:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else if (state->count > 1) {
 131:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     double_shift(keycode, layer);
 132:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 133:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // down: shift
 134:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else if (state->pressed) {
 135:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(layer);
 136:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 137:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // tap: keycode
 138:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 139:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     modifier(register_code);
 140:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key (keycode);
 141:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     modifier(unregister_code);
 142:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 143:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 144:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 145:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tap_reset(uint16_t keycode, uint8_t layer)
 146:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 147:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(keycode);
 148:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (DT_SHIFT && dt_shift) {
 149:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     clear_oneshot_layer_state(ONESHOT_PRESSED);
 150:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     dt_shift = 0;
 151:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 152:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_off(layer);
 154:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 155:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 156:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 157:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // augment pseudo LT (_RSHIFT, KC_ENT) handling below for rapid <ENTER><SHIFT> sequences
 158:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void enter(qk_tap_dance_state_t *state, void *user_data)
 159:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 160:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_shift(state, KC_ENT, _RSHIFT);
 161:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 162:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 163:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void enter_reset(qk_tap_dance_state_t *state, void *user_data)
 164:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 165:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_reset(KC_ENT, _RSHIFT);
 166:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 167:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 168:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // augment pseudo LT (_LSHIFT, KC_SPC) handling below for rapid <SPACE><SHIFT> sequences
 169:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void space(qk_tap_dance_state_t *state, void *user_data)
 170:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 171:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_shift(state, KC_SPC, _LSHIFT);
 172:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 173:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 174:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void space_reset(qk_tap_dance_state_t *state, void *user_data)
 175:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 176:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_reset(KC_SPC, _LSHIFT);
 177:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 178:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 179:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ......................................................... Triple Dance Insert
 180:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 181:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void double_max(uint8_t count, uint8_t shift, uint16_t keycode)
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 183:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (shift) {
 184:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(keycode);
 185:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (count > 1) {
 186:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       shift_key(keycode);
 187:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 188:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 189:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 190:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(keycode);
 191:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (count > 1) {
 192:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key(keycode);
 193:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 194:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 195:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 196:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 197:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void colon(qk_tap_dance_state_t *state, void *user_data)
 198:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 199:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 200:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 201:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_SCLN);
 202:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_SCLN);
 203:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 204:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 205:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 206:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     double_max(state->count, SHIFT, KC_SCLN);
 207:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 208:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 209:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 210:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 211:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void eql(qk_tap_dance_state_t *state, void *user_data)
 212:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 213:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 214:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SPC);
 215:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SLSH);
 216:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_EQL);
 217:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SPC);
 218:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 219:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 220:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     double_max(state->count, NOSHIFT, KC_EQL);
 221:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 222:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 223:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 224:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 225:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void greater(qk_tap_dance_state_t *state, void *user_data)
 226:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 227:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 228:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 229:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_MINS);
 230:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_DOT);
 231:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 232:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 233:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 234:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     double_max(state->count, SHIFT, KC_DOT);
 235:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 236:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 237:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 238:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 239:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void lesser(qk_tap_dance_state_t *state, void *user_data)
 240:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 241:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 242:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 243:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_COMM);
 244:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_MINS);
 245:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 246:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 247:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 248:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     double_max(state->count, SHIFT, KC_COMM);
 249:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 250:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 251:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 252:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 253:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tilde(qk_tap_dance_state_t *state, void *user_data)
 254:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 255:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // double tap plus down: repeating keycode
 256:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 257:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code(KC_LSFT);
 258:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code(KC_GRV);
 259:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 260:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // tap: keycode
 261:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 262:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_GRV);
 263:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // double tap: unix home directory
 264:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (state->count > 1) {
 265:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key(KC_SLSH);
 266:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 267:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 268:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 269:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 270:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tilde_reset(qk_tap_dance_state_t *state, void *user_data)
 271:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  16               		.loc 1 271 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 272:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_GRV);
  23               		.loc 1 272 0
  24 0000 85E3      		ldi r24,lo8(53)
  25               	.LVL1:
  26 0002 0E94 0000 		call unregister_code
  27               	.LVL2:
 273:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_LSFT);
  28               		.loc 1 273 0
  29 0006 81EE      		ldi r24,lo8(-31)
  30 0008 0C94 0000 		jmp unregister_code
  31               	.LVL3:
  32               		.cfi_endproc
  33               	.LFE129:
  35               		.section	.text.lparen_reset,"ax",@progbits
  36               	.global	lparen_reset
  38               	lparen_reset:
  39               	.LFB137:
 274:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 275:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 276:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ............................................................. Tap Dance Pairs
 277:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 278:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // tap dance shift rules
 279:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define S_NEVER  0
 280:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define S_SINGLE 1
 281:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define S_DOUBLE 2
 282:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define S_ALWAYS S_SINGLE | S_DOUBLE
 283:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 284:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void symbol_pair(uint8_t shift, uint16_t left, uint16_t right)
 285:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 286:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (shift & S_DOUBLE) {
 287:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(left);
 288:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(right);
 289:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 290:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 291:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(left);
 292:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(right);
 293:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 294:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 295:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 296:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define CLOSE 1
 297:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 298:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // tap dance symbol pairs
 299:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tap_pair(qk_tap_dance_state_t *state, uint8_t shift, uint16_t left, uint16_t right, uint16_t m
 300:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 301:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // triple tap: left right with cursor between symbol pair a la vim :-)
 302:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 303:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     symbol_pair(shift, left, right);
 304:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key    (KC_LEFT);
 305:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 306:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // double tap: left right
 307:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else if (state->count > 1) {
 308:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     symbol_pair(shift, left, right);
 309:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 310:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // down: modifier
 311:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else if (state->pressed) {
 312:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (modifier) {
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       register_code(modifier);
 314:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 315:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 316:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // tap: left (close: right)
 317:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 318:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (shift & S_SINGLE) {
 319:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       shift_key(close ? right : left);
 320:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 321:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     else {
 322:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key(close ? right : left);
 323:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 324:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 325:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (!modifier) {
 326:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     reset_tap_dance(state);
 327:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 329:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 330:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void doublequote(qk_tap_dance_state_t *state, void *user_data)
 331:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 332:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_QUOT, KC_QUOT, 0, 0);
 333:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 334:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 335:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void grave(qk_tap_dance_state_t *state, void *user_data)
 336:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 337:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_GRV, KC_GRV, 0, 0);
 338:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 339:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 340:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void lbrace(qk_tap_dance_state_t *state, void *user_data)
 341:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 342:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_LBRC, KC_RBRC, 0, 0);
 343:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 344:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 345:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void lcurly(qk_tap_dance_state_t *state, void *user_data)
 346:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 347:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_LBRC, KC_RBRC, 0, 0);
 348:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 349:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 350:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void lparen(qk_tap_dance_state_t *state, void *user_data)
 351:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 352:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_9, KC_0, KC_LCTL, 0);
 353:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 354:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 355:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void lparen_reset(qk_tap_dance_state_t *state, void *user_data)
 356:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  40               		.loc 1 356 0
  41               		.cfi_startproc
  42               	.LVL4:
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
 357:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_LCTL);
  47               		.loc 1 357 0
  48 0000 80EE      		ldi r24,lo8(-32)
  49               	.LVL5:
  50 0002 0C94 0000 		jmp unregister_code
  51               	.LVL6:
  52               		.cfi_endproc
  53               	.LFE137:
  55               		.section	.text.caps_reset,"ax",@progbits
  56               	.global	caps_reset
  58               	caps_reset:
  59               	.LFB149:
 358:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 359:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 360:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void quote(qk_tap_dance_state_t *state, void *user_data)
 361:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 362:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_QUOT, KC_QUOT, 0, 0);
 363:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 364:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 365:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void rangle(qk_tap_dance_state_t *state, void *user_data)
 366:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 367:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_COMM, KC_DOT, 0, CLOSE);
 368:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 369:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 370:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void rbrace(qk_tap_dance_state_t *state, void *user_data)
 371:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 372:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_LBRC, KC_RBRC, 0, CLOSE);
 373:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 374:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 375:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void rcurly(qk_tap_dance_state_t *state, void *user_data)
 376:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 377:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_LBRC, KC_RBRC, 0, CLOSE);
 378:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 379:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 380:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void rparen(qk_tap_dance_state_t *state, void *user_data)
 381:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 382:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_9, KC_0, 0, CLOSE);
 383:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 384:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 385:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void rparen_reset(qk_tap_dance_state_t *state, void *user_data)
 386:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 387:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_LCTL);
 388:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 389:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 390:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ............................................................ Tap Dance Insert
 391:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 392:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void comma(qk_tap_dance_state_t *state, void *user_data)
 393:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 394:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_key(KC_COMM);
 395:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 396:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SPC);
 397:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 398:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 399:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 400:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 401:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void dot(qk_tap_dance_state_t *state, void *user_data)
 402:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 403:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 404:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_COLN);
 405:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 406:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 407:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_DOT);
 408:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 410:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 411:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 412:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // compile time macro string, see functions/hardware planck script
 413:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void private(qk_tap_dance_state_t *state, void *user_data)
 414:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 415:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 416:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #ifdef PRIVATE_STRING
 417:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #include "private_string.h"
 418:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #endif
 419:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 420:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 421:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 422:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 423:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // config.h defined string
 424:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void send(qk_tap_dance_state_t *state, void *user_data)
 425:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 426:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 427:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     SEND_STRING(PUBLIC_STRING);
 428:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 429:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   reset_tap_dance(state);
 430:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 431:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 432:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // .......................................................... Tap Dance One Shot
 433:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 434:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void caps(qk_tap_dance_state_t *state, void *user_data)
 435:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 436:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 437:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_CAPS);
 438:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 439:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 440:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     set_oneshot_mods(MOD_LSFT);
 441:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code   (KC_LSFT);              // on hold down
 442:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 443:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 444:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 445:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void caps_reset(qk_tap_dance_state_t *state, void *user_data)
 446:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
  60               		.loc 1 446 0
  61               		.cfi_startproc
  62               	.LVL7:
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
 447:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_LSFT);
  67               		.loc 1 447 0
  68 0000 81EE      		ldi r24,lo8(-31)
  69               	.LVL8:
  70 0002 0C94 0000 		jmp unregister_code
  71               	.LVL9:
  72               		.cfi_endproc
  73               	.LFE149:
  75               		.section	.text.private,"ax",@progbits
  76               	.global	private
  78               	private:
  79               	.LFB146:
 414:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
  80               		.loc 1 414 0
  81               		.cfi_startproc
  82               	.LVL10:
  83 0000 CF93      		push r28
  84               	.LCFI0:
  85               		.cfi_def_cfa_offset 3
  86               		.cfi_offset 28, -2
  87 0002 DF93      		push r29
  88               	.LCFI1:
  89               		.cfi_def_cfa_offset 4
  90               		.cfi_offset 29, -3
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  93               	/* stack size = 2 */
  94               	.L__stack_usage = 2
  95 0004 EC01      		movw r28,r24
 415:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #ifdef PRIVATE_STRING
  96               		.loc 1 415 0
  97 0006 8881      		ld r24,Y
  98               	.LVL11:
  99 0008 8230      		cpi r24,lo8(2)
 100 000a 00F0      		brlo .L5
 101               		.file 2 "keyboards/splitography/keymaps/hiea/private_string.h"
   1:keyboards/splitography/keymaps/hiea/private_string.h **** SEND_STRING("the keys of enoch");
 102               		.loc 2 1 0
 103 000c 80E0      		ldi r24,lo8(__c.5774)
 104 000e 90E0      		ldi r25,hi8(__c.5774)
 105 0010 0E94 0000 		call send_string_P
 106               	.LVL12:
 107               	.L5:
 420:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 108               		.loc 1 420 0
 109 0014 CE01      		movw r24,r28
 110               	/* epilogue start */
 421:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 111               		.loc 1 421 0
 112 0016 DF91      		pop r29
 113 0018 CF91      		pop r28
 114               	.LVL13:
 420:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 115               		.loc 1 420 0
 116 001a 0C94 0000 		jmp reset_tap_dance
 117               	.LVL14:
 118               		.cfi_endproc
 119               	.LFE146:
 121               		.section	.text.send,"ax",@progbits
 122               	.global	send
 124               	send:
 125               	.LFB147:
 425:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 126               		.loc 1 425 0
 127               		.cfi_startproc
 128               	.LVL15:
 129 0000 CF93      		push r28
 130               	.LCFI2:
 131               		.cfi_def_cfa_offset 3
 132               		.cfi_offset 28, -2
 133 0002 DF93      		push r29
 134               	.LCFI3:
 135               		.cfi_def_cfa_offset 4
 136               		.cfi_offset 29, -3
 137               	/* prologue: function */
 138               	/* frame size = 0 */
 139               	/* stack size = 2 */
 140               	.L__stack_usage = 2
 141 0004 EC01      		movw r28,r24
 426:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     SEND_STRING(PUBLIC_STRING);
 142               		.loc 1 426 0
 143 0006 8881      		ld r24,Y
 144               	.LVL16:
 145 0008 8230      		cpi r24,lo8(2)
 146 000a 00F0      		brlo .L7
 427:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 147               		.loc 1 427 0
 148 000c 80E0      		ldi r24,lo8(__c.5780)
 149 000e 90E0      		ldi r25,hi8(__c.5780)
 150 0010 0E94 0000 		call send_string_P
 151               	.LVL17:
 152               	.L7:
 429:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 153               		.loc 1 429 0
 154 0014 CE01      		movw r24,r28
 155               	/* epilogue start */
 430:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 156               		.loc 1 430 0
 157 0016 DF91      		pop r29
 158 0018 CF91      		pop r28
 159               	.LVL18:
 429:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 160               		.loc 1 429 0
 161 001a 0C94 0000 		jmp reset_tap_dance
 162               	.LVL19:
 163               		.cfi_endproc
 164               	.LFE147:
 166               		.section	.text.rparen_reset,"ax",@progbits
 167               	.global	rparen_reset
 169               	rparen_reset:
 170               	.LFB162:
 171               		.cfi_startproc
 172               	/* prologue: function */
 173               	/* frame size = 0 */
 174               	/* stack size = 0 */
 175               	.L__stack_usage = 0
 176 0000 80EE      		ldi r24,lo8(-32)
 177 0002 0C94 0000 		jmp unregister_code
 178               		.cfi_endproc
 179               	.LFE162:
 181               		.section	.text.tap_key,"ax",@progbits
 182               	.global	tap_key
 184               	tap_key:
 185               	.LFB110:
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   register_code  (keycode);
 186               		.loc 1 6 0
 187               		.cfi_startproc
 188               	.LVL20:
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   register_code  (keycode);
 189               		.loc 1 6 0
 190 0000 CF93      		push r28
 191               	.LCFI4:
 192               		.cfi_def_cfa_offset 3
 193               		.cfi_offset 28, -2
 194               	/* prologue: function */
 195               	/* frame size = 0 */
 196               	/* stack size = 1 */
 197               	.L__stack_usage = 1
 198 0002 C82F      		mov r28,r24
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(keycode);
 199               		.loc 1 7 0
 200 0004 0E94 0000 		call register_code
 201               	.LVL21:
   8:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 202               		.loc 1 8 0
 203 0008 8C2F      		mov r24,r28
 204               	/* epilogue start */
   9:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 205               		.loc 1 9 0
 206 000a CF91      		pop r28
   8:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 207               		.loc 1 8 0
 208 000c 0C94 0000 		jmp unregister_code
 209               	.LVL22:
 210               		.cfi_endproc
 211               	.LFE110:
 213               		.section	.text.comma,"ax",@progbits
 214               	.global	comma
 216               	comma:
 217               	.LFB144:
 393:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_key(KC_COMM);
 218               		.loc 1 393 0
 219               		.cfi_startproc
 220               	.LVL23:
 221 0000 CF93      		push r28
 222               	.LCFI5:
 223               		.cfi_def_cfa_offset 3
 224               		.cfi_offset 28, -2
 225 0002 DF93      		push r29
 226               	.LCFI6:
 227               		.cfi_def_cfa_offset 4
 228               		.cfi_offset 29, -3
 229               	/* prologue: function */
 230               	/* frame size = 0 */
 231               	/* stack size = 2 */
 232               	.L__stack_usage = 2
 233 0004 EC01      		movw r28,r24
 394:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 234               		.loc 1 394 0
 235 0006 86E3      		ldi r24,lo8(54)
 236 0008 90E0      		ldi r25,0
 237               	.LVL24:
 238 000a 0E94 0000 		call tap_key
 239               	.LVL25:
 395:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SPC);
 240               		.loc 1 395 0
 241 000e 8881      		ld r24,Y
 242 0010 8230      		cpi r24,lo8(2)
 243 0012 00F0      		brlo .L11
 396:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 244               		.loc 1 396 0
 245 0014 8CE2      		ldi r24,lo8(44)
 246 0016 90E0      		ldi r25,0
 247 0018 0E94 0000 		call tap_key
 248               	.LVL26:
 249               	.L11:
 398:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 250               		.loc 1 398 0
 251 001c CE01      		movw r24,r28
 252               	/* epilogue start */
 399:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 253               		.loc 1 399 0
 254 001e DF91      		pop r29
 255 0020 CF91      		pop r28
 256               	.LVL27:
 398:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 257               		.loc 1 398 0
 258 0022 0C94 0000 		jmp reset_tap_dance
 259               	.LVL28:
 260               		.cfi_endproc
 261               	.LFE144:
 263               		.section	.text.caps,"ax",@progbits
 264               	.global	caps
 266               	caps:
 267               	.LFB148:
 435:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 268               		.loc 1 435 0
 269               		.cfi_startproc
 270               	.LVL29:
 271               	/* prologue: function */
 272               	/* frame size = 0 */
 273               	/* stack size = 0 */
 274               	.L__stack_usage = 0
 436:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_CAPS);
 275               		.loc 1 436 0
 276 0000 FC01      		movw r30,r24
 277 0002 8081      		ld r24,Z
 278               	.LVL30:
 279 0004 8230      		cpi r24,lo8(2)
 280 0006 00F0      		brlo .L13
 437:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 281               		.loc 1 437 0
 282 0008 89E3      		ldi r24,lo8(57)
 283 000a 90E0      		ldi r25,0
 284 000c 0C94 0000 		jmp tap_key
 285               	.LVL31:
 286               	.L13:
 440:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code   (KC_LSFT);              // on hold down
 287               		.loc 1 440 0
 288 0010 82E0      		ldi r24,lo8(2)
 289 0012 0E94 0000 		call set_oneshot_mods
 290               	.LVL32:
 441:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 291               		.loc 1 441 0
 292 0016 81EE      		ldi r24,lo8(-31)
 293 0018 0C94 0000 		jmp register_code
 294               	.LVL33:
 295               		.cfi_endproc
 296               	.LFE148:
 298               		.section	.text.shift_key,"ax",@progbits
 299               	.global	shift_key
 301               	shift_key:
 302               	.LFB111:
  12:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   register_code  (KC_LSFT);
 303               		.loc 1 12 0
 304               		.cfi_startproc
 305               	.LVL34:
 306 0000 CF93      		push r28
 307               	.LCFI7:
 308               		.cfi_def_cfa_offset 3
 309               		.cfi_offset 28, -2
 310 0002 DF93      		push r29
 311               	.LCFI8:
 312               		.cfi_def_cfa_offset 4
 313               		.cfi_offset 29, -3
 314               	/* prologue: function */
 315               	/* frame size = 0 */
 316               	/* stack size = 2 */
 317               	.L__stack_usage = 2
 318 0004 EC01      		movw r28,r24
  13:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_key        (keycode);
 319               		.loc 1 13 0
 320 0006 81EE      		ldi r24,lo8(-31)
 321               	.LVL35:
 322 0008 0E94 0000 		call register_code
 323               	.LVL36:
  14:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(KC_LSFT);
 324               		.loc 1 14 0
 325 000c CE01      		movw r24,r28
 326 000e 0E94 0000 		call tap_key
 327               	.LVL37:
  15:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 328               		.loc 1 15 0
 329 0012 81EE      		ldi r24,lo8(-31)
 330               	/* epilogue start */
  16:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 331               		.loc 1 16 0
 332 0014 DF91      		pop r29
 333 0016 CF91      		pop r28
 334               	.LVL38:
  15:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 335               		.loc 1 15 0
 336 0018 0C94 0000 		jmp unregister_code
 337               	.LVL39:
 338               		.cfi_endproc
 339               	.LFE111:
 341               		.section	.text.tilde,"ax",@progbits
 342               	.global	tilde
 344               	tilde:
 345               	.LFB128:
 254:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // double tap plus down: repeating keycode
 346               		.loc 1 254 0
 347               		.cfi_startproc
 348               	.LVL40:
 349 0000 CF93      		push r28
 350               	.LCFI9:
 351               		.cfi_def_cfa_offset 3
 352               		.cfi_offset 28, -2
 353 0002 DF93      		push r29
 354               	.LCFI10:
 355               		.cfi_def_cfa_offset 4
 356               		.cfi_offset 29, -3
 357               	/* prologue: function */
 358               	/* frame size = 0 */
 359               	/* stack size = 2 */
 360               	.L__stack_usage = 2
 361 0004 EC01      		movw r28,r24
 256:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code(KC_LSFT);
 362               		.loc 1 256 0
 363 0006 8881      		ld r24,Y
 364               	.LVL41:
 365 0008 8330      		cpi r24,lo8(3)
 366 000a 00F0      		brlo .L16
 257:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code(KC_GRV);
 367               		.loc 1 257 0
 368 000c 81EE      		ldi r24,lo8(-31)
 369 000e 0E94 0000 		call register_code
 370               	.LVL42:
 258:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 371               		.loc 1 258 0
 372 0012 85E3      		ldi r24,lo8(53)
 373               	/* epilogue start */
 268:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 374               		.loc 1 268 0
 375 0014 DF91      		pop r29
 376 0016 CF91      		pop r28
 377               	.LVL43:
 258:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 378               		.loc 1 258 0
 379 0018 0C94 0000 		jmp register_code
 380               	.LVL44:
 381               	.L16:
 262:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // double tap: unix home directory
 382               		.loc 1 262 0
 383 001c 85E3      		ldi r24,lo8(53)
 384 001e 90E0      		ldi r25,0
 385 0020 0E94 0000 		call shift_key
 386               	.LVL45:
 264:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key(KC_SLSH);
 387               		.loc 1 264 0
 388 0024 8881      		ld r24,Y
 389 0026 8230      		cpi r24,lo8(2)
 390 0028 00F0      		brlo .L15
 265:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 391               		.loc 1 265 0
 392 002a 88E3      		ldi r24,lo8(56)
 393 002c 90E0      		ldi r25,0
 394               	/* epilogue start */
 268:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 395               		.loc 1 268 0
 396 002e DF91      		pop r29
 397 0030 CF91      		pop r28
 398               	.LVL46:
 265:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 399               		.loc 1 265 0
 400 0032 0C94 0000 		jmp tap_key
 401               	.LVL47:
 402               	.L15:
 403               	/* epilogue start */
 268:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 404               		.loc 1 268 0
 405 0036 DF91      		pop r29
 406 0038 CF91      		pop r28
 407               	.LVL48:
 408 003a 0895      		ret
 409               		.cfi_endproc
 410               	.LFE128:
 412               		.section	.text.dot,"ax",@progbits
 413               	.global	dot
 415               	dot:
 416               	.LFB145:
 402:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 1) {
 417               		.loc 1 402 0
 418               		.cfi_startproc
 419               	.LVL49:
 420 0000 CF93      		push r28
 421               	.LCFI11:
 422               		.cfi_def_cfa_offset 3
 423               		.cfi_offset 28, -2
 424 0002 DF93      		push r29
 425               	.LCFI12:
 426               		.cfi_def_cfa_offset 4
 427               		.cfi_offset 29, -3
 428               	/* prologue: function */
 429               	/* frame size = 0 */
 430               	/* stack size = 2 */
 431               	.L__stack_usage = 2
 432 0004 EC01      		movw r28,r24
 403:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_COLN);
 433               		.loc 1 403 0
 434 0006 8881      		ld r24,Y
 435               	.LVL50:
 436 0008 8230      		cpi r24,lo8(2)
 437 000a 00F0      		brlo .L19
 404:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 438               		.loc 1 404 0
 439 000c 83E3      		ldi r24,lo8(51)
 440 000e 92E0      		ldi r25,lo8(2)
 441 0010 0E94 0000 		call shift_key
 442               	.LVL51:
 443               	.L20:
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 444               		.loc 1 409 0
 445 0014 CE01      		movw r24,r28
 446               	/* epilogue start */
 410:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 447               		.loc 1 410 0
 448 0016 DF91      		pop r29
 449 0018 CF91      		pop r28
 450               	.LVL52:
 409:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 451               		.loc 1 409 0
 452 001a 0C94 0000 		jmp reset_tap_dance
 453               	.LVL53:
 454               	.L19:
 407:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 455               		.loc 1 407 0
 456 001e 87E3      		ldi r24,lo8(55)
 457 0020 90E0      		ldi r25,0
 458 0022 0E94 0000 		call tap_key
 459               	.LVL54:
 460 0026 00C0      		rjmp .L20
 461               		.cfi_endproc
 462               	.LFE145:
 464               		.section	.text.key_press,"ax",@progbits
 465               	.global	key_press
 467               	key_press:
 468               	.LFB112:
  25:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (keycode) {
 469               		.loc 1 25 0
 470               		.cfi_startproc
 471               	.LVL55:
 472 0000 1F93      		push r17
 473               	.LCFI13:
 474               		.cfi_def_cfa_offset 3
 475               		.cfi_offset 17, -2
 476 0002 CF93      		push r28
 477               	.LCFI14:
 478               		.cfi_def_cfa_offset 4
 479               		.cfi_offset 28, -3
 480 0004 DF93      		push r29
 481               	.LCFI15:
 482               		.cfi_def_cfa_offset 5
 483               		.cfi_offset 29, -4
 484               	/* prologue: function */
 485               	/* frame size = 0 */
 486               	/* stack size = 3 */
 487               	.L__stack_usage = 3
 488 0006 182F      		mov r17,r24
 489 0008 EB01      		movw r28,r22
  26:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (timer_elapsed(key_timer) < TAPPING_TERM) {
 490               		.loc 1 26 0
 491 000a 2097      		sbiw r28,0
 492 000c 01F4      		brne .L22
 493               	.LVL56:
 494               	.L24:
  37:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 495               		.loc 1 37 0
 496 000e 80E0      		ldi r24,0
 497               	.L21:
 498               	/* epilogue start */
  38:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 499               		.loc 1 38 0
 500 0010 DF91      		pop r29
 501 0012 CF91      		pop r28
 502               	.LVL57:
 503 0014 1F91      		pop r17
 504               	.LVL58:
 505 0016 0895      		ret
 506               	.LVL59:
 507               	.L22:
  27:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       if (shift) {
 508               		.loc 1 27 0
 509 0018 8091 0000 		lds r24,key_timer
 510 001c 9091 0000 		lds r25,key_timer+1
 511 0020 0E94 0000 		call timer_elapsed
 512               	.LVL60:
 513 0024 8A3F      		cpi r24,-6
 514 0026 9105      		cpc r25,__zero_reg__
 515 0028 00F4      		brsh .L24
  29:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
 516               		.loc 1 29 0
 517 002a CE01      		movw r24,r28
  28:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         shift_key(keycode);
 518               		.loc 1 28 0
 519 002c 1123      		tst r17
 520 002e 01F0      		breq .L25
 521               	.LVL61:
  29:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
 522               		.loc 1 29 0
 523 0030 0E94 0000 		call shift_key
 524               	.LVL62:
 525               	.L26:
  34:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 526               		.loc 1 34 0
 527 0034 81E0      		ldi r24,lo8(1)
 528 0036 00C0      		rjmp .L21
 529               	.LVL63:
 530               	.L25:
  32:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
 531               		.loc 1 32 0
 532 0038 0E94 0000 		call tap_key
 533               	.LVL64:
 534 003c 00C0      		rjmp .L26
 535               		.cfi_endproc
 536               	.LFE112:
 538               		.section	.text.mt_shift,"ax",@progbits
 539               	.global	mt_shift
 541               	mt_shift:
 542               	.LFB113:
  42:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 543               		.loc 1 42 0
 544               		.cfi_startproc
 545               	.LVL65:
 546 0000 EF92      		push r14
 547               	.LCFI16:
 548               		.cfi_def_cfa_offset 3
 549               		.cfi_offset 14, -2
 550 0002 FF92      		push r15
 551               	.LCFI17:
 552               		.cfi_def_cfa_offset 4
 553               		.cfi_offset 15, -3
 554 0004 1F93      		push r17
 555               	.LCFI18:
 556               		.cfi_def_cfa_offset 5
 557               		.cfi_offset 17, -4
 558 0006 CF93      		push r28
 559               	.LCFI19:
 560               		.cfi_def_cfa_offset 6
 561               		.cfi_offset 28, -5
 562 0008 DF93      		push r29
 563               	.LCFI20:
 564               		.cfi_def_cfa_offset 7
 565               		.cfi_offset 29, -6
 566               	/* prologue: function */
 567               	/* frame size = 0 */
 568               	/* stack size = 5 */
 569               	.L__stack_usage = 5
 570 000a 162F      		mov r17,r22
 571 000c EA01      		movw r28,r20
 572 000e 7901      		movw r14,r18
  43:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = timer_read();
 573               		.loc 1 43 0
 574 0010 FC01      		movw r30,r24
 575 0012 8281      		ldd r24,Z+2
 576               	.LVL66:
 577 0014 8823      		tst r24
 578 0016 01F0      		breq .L28
  44:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     register_code(modifier);
 579               		.loc 1 44 0
 580 0018 0E94 0000 		call timer_read
 581               	.LVL67:
 582 001c 9093 0000 		sts key_timer+1,r25
 583 0020 8093 0000 		sts key_timer,r24
  45:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (modifier2) {
 584               		.loc 1 45 0
 585 0024 812F      		mov r24,r17
 586 0026 0E94 0000 		call register_code
 587               	.LVL68:
  46:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       register_code(modifier2);
 588               		.loc 1 46 0
 589 002a 2097      		sbiw r28,0
 590 002c 01F0      		breq .L27
  47:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 591               		.loc 1 47 0
 592 002e 8C2F      		mov r24,r28
 593               	/* epilogue start */
  60:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 594               		.loc 1 60 0
 595 0030 DF91      		pop r29
 596 0032 CF91      		pop r28
 597               	.LVL69:
 598 0034 1F91      		pop r17
 599 0036 FF90      		pop r15
 600 0038 EF90      		pop r14
 601               	.LVL70:
  47:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 602               		.loc 1 47 0
 603 003a 0C94 0000 		jmp register_code
 604               	.LVL71:
 605               	.L28:
  51:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (modifier2) {
 606               		.loc 1 51 0
 607 003e 862F      		mov r24,r22
 608 0040 0E94 0000 		call unregister_code
 609               	.LVL72:
  52:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       unregister_code(modifier2);
 610               		.loc 1 52 0
 611 0044 2097      		sbiw r28,0
 612 0046 01F0      		breq .L30
  53:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 613               		.loc 1 53 0
 614 0048 8C2F      		mov r24,r28
 615 004a 0E94 0000 		call unregister_code
 616               	.LVL73:
 617               	.L30:
  55:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       shift_key(keycode);
 618               		.loc 1 55 0
 619 004e 8091 0000 		lds r24,key_timer
 620 0052 9091 0000 		lds r25,key_timer+1
 621 0056 0E94 0000 		call timer_elapsed
 622               	.LVL74:
 623 005a 8A3F      		cpi r24,-6
 624 005c 9105      		cpc r25,__zero_reg__
 625 005e 00F4      		brsh .L31
  56:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 626               		.loc 1 56 0
 627 0060 C701      		movw r24,r14
 628 0062 0E94 0000 		call shift_key
 629               	.LVL75:
 630               	.L31:
  58:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 631               		.loc 1 58 0
 632 0066 1092 0000 		sts key_timer+1,__zero_reg__
 633 006a 1092 0000 		sts key_timer,__zero_reg__
 634               	.L27:
 635               	/* epilogue start */
  60:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 636               		.loc 1 60 0
 637 006e DF91      		pop r29
 638 0070 CF91      		pop r28
 639               	.LVL76:
 640 0072 1F91      		pop r17
 641 0074 FF90      		pop r15
 642 0076 EF90      		pop r14
 643               	.LVL77:
 644 0078 0895      		ret
 645               		.cfi_endproc
 646               	.LFE113:
 648               		.section	.text.tap_mods,"ax",@progbits
 649               	.global	tap_mods
 651               	tap_mods:
 652               	.LFB114:
  69:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 653               		.loc 1 69 0
 654               		.cfi_startproc
 655               	.LVL78:
 656               	/* prologue: function */
 657               	/* frame size = 0 */
 658               	/* stack size = 0 */
 659               	.L__stack_usage = 0
 660 0000 6770      		andi r22,7
 661 0002 7727      		clr r23
 662               	.LVL79:
 663 0004 21E0      		ldi r18,lo8(1)
 664 0006 30E0      		ldi r19,0
 665 0008 00C0      		rjmp 2f
 666               		1:
 667 000a 220F      		lsl r18
 668               		2:
 669 000c 6A95      		dec r22
 670 000e 02F4      		brpl 1b
 671 0010 4091 0000 		lds r20,mods
  70:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     mods |= MOD_BIT(keycode);
 672               		.loc 1 70 0
 673 0014 FC01      		movw r30,r24
 674 0016 8281      		ldd r24,Z+2
 675               	.LVL80:
 676 0018 8823      		tst r24
 677 001a 01F0      		breq .L39
  71:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 678               		.loc 1 71 0
 679 001c 242B      		or r18,r20
 680               	.L41:
  74:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 681               		.loc 1 74 0
 682 001e 2093 0000 		sts mods,r18
 683               	/* epilogue start */
  76:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 684               		.loc 1 76 0
 685 0022 0895      		ret
 686               	.L39:
  74:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 687               		.loc 1 74 0
 688 0024 2095      		com r18
 689 0026 2423      		and r18,r20
 690 0028 00C0      		rjmp .L41
 691               		.cfi_endproc
 692               	.LFE114:
 694               		.section	.text.modifier,"ax",@progbits
 695               	.global	modifier
 697               	modifier:
 698               	.LFB115:
  80:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (mods & MOD_BIT(KC_LCTL)) {
 699               		.loc 1 80 0
 700               		.cfi_startproc
 701               	.LVL81:
 702 0000 CF93      		push r28
 703               	.LCFI21:
 704               		.cfi_def_cfa_offset 3
 705               		.cfi_offset 28, -2
 706 0002 DF93      		push r29
 707               	.LCFI22:
 708               		.cfi_def_cfa_offset 4
 709               		.cfi_offset 29, -3
 710               	/* prologue: function */
 711               	/* frame size = 0 */
 712               	/* stack size = 2 */
 713               	.L__stack_usage = 2
 714 0004 EC01      		movw r28,r24
  81:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LCTL);
 715               		.loc 1 81 0
 716 0006 8091 0000 		lds r24,mods
 717               	.LVL82:
 718 000a 80FF      		sbrs r24,0
 719 000c 00C0      		rjmp .L43
  82:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 720               		.loc 1 82 0
 721 000e 80EE      		ldi r24,lo8(-32)
 722 0010 FE01      		movw r30,r28
 723 0012 0995      		icall
 724               	.LVL83:
 725               	.L43:
  84:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LGUI);
 726               		.loc 1 84 0
 727 0014 8091 0000 		lds r24,mods
 728 0018 83FF      		sbrs r24,3
 729 001a 00C0      		rjmp .L44
  85:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 730               		.loc 1 85 0
 731 001c 83EE      		ldi r24,lo8(-29)
 732 001e FE01      		movw r30,r28
 733 0020 0995      		icall
 734               	.LVL84:
 735               	.L44:
  87:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LALT);
 736               		.loc 1 87 0
 737 0022 8091 0000 		lds r24,mods
 738 0026 82FF      		sbrs r24,2
 739 0028 00C0      		rjmp .L45
  88:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 740               		.loc 1 88 0
 741 002a 82EE      		ldi r24,lo8(-30)
 742 002c FE01      		movw r30,r28
 743 002e 0995      		icall
 744               	.LVL85:
 745               	.L45:
  90:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     (*f)(KC_LSFT);
 746               		.loc 1 90 0
 747 0030 8091 0000 		lds r24,mods
 748 0034 81FF      		sbrs r24,1
 749 0036 00C0      		rjmp .L42
  91:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 750               		.loc 1 91 0
 751 0038 81EE      		ldi r24,lo8(-31)
 752 003a FE01      		movw r30,r28
 753               	/* epilogue start */
  93:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 754               		.loc 1 93 0
 755 003c DF91      		pop r29
 756 003e CF91      		pop r28
 757               	.LVL86:
  91:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 758               		.loc 1 91 0
 759 0040 0994      		ijmp
 760               	.LVL87:
 761               	.L42:
 762               	/* epilogue start */
  93:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 763               		.loc 1 93 0
 764 0042 DF91      		pop r29
 765 0044 CF91      		pop r28
 766               	.LVL88:
 767 0046 0895      		ret
 768               		.cfi_endproc
 769               	.LFE115:
 771               		.section	.text.double_shift,"ax",@progbits
 772               	.global	double_shift
 774               	double_shift:
 775               	.LFB116:
 100:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_key (keycode);
 776               		.loc 1 100 0
 777               		.cfi_startproc
 778               	.LVL89:
 779               	/* prologue: function */
 780               	/* frame size = 0 */
 781               	/* stack size = 0 */
 782               	.L__stack_usage = 0
 101:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (DT_SHIFT) {
 783               		.loc 1 101 0
 784 0000 0E94 0000 		call tap_key
 785               	.LVL90:
 105:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     set_oneshot_layer(_SHIFT, ONESHOT_START);
 786               		.loc 1 105 0
 787 0004 81E0      		ldi r24,lo8(1)
 788 0006 0E94 0000 		call layer_on
 789               	.LVL91:
 106:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     dt_shift = 1;
 790               		.loc 1 106 0
 791 000a 63E0      		ldi r22,lo8(3)
 792 000c 81E0      		ldi r24,lo8(1)
 793 000e 0E94 0000 		call set_oneshot_layer
 794               	.LVL92:
 107:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 795               		.loc 1 107 0
 796 0012 81E0      		ldi r24,lo8(1)
 797 0014 8093 0000 		sts dt_shift,r24
 798               	/* epilogue start */
 112:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 799               		.loc 1 112 0
 800 0018 0895      		ret
 801               		.cfi_endproc
 802               	.LFE116:
 804               		.section	.text.tap_shift,"ax",@progbits
 805               	.global	tap_shift
 807               	tap_shift:
 808               	.LFB117:
 116:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // double tap plus down
 809               		.loc 1 116 0
 810               		.cfi_startproc
 811               	.LVL93:
 812 0000 1F93      		push r17
 813               	.LCFI23:
 814               		.cfi_def_cfa_offset 3
 815               		.cfi_offset 17, -2
 816 0002 CF93      		push r28
 817               	.LCFI24:
 818               		.cfi_def_cfa_offset 4
 819               		.cfi_offset 28, -3
 820 0004 DF93      		push r29
 821               	.LCFI25:
 822               		.cfi_def_cfa_offset 5
 823               		.cfi_offset 29, -4
 824               	/* prologue: function */
 825               	/* frame size = 0 */
 826               	/* stack size = 3 */
 827               	.L__stack_usage = 3
 828 0006 EB01      		movw r28,r22
 829 0008 142F      		mov r17,r20
 118:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // double enter shift
 830               		.loc 1 118 0
 831 000a FC01      		movw r30,r24
 832 000c 2081      		ld r18,Z
 833 000e 2330      		cpi r18,lo8(3)
 834 0010 00F0      		brlo .L58
 120:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key     (keycode);
 835               		.loc 1 120 0
 836 0012 6832      		cpi r22,40
 837 0014 7105      		cpc r23,__zero_reg__
 838 0016 01F4      		brne .L59
 121:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       double_shift(keycode, layer);
 839               		.loc 1 121 0
 840 0018 88E2      		ldi r24,lo8(40)
 841 001a 90E0      		ldi r25,0
 842               	.LVL94:
 843 001c 0E94 0000 		call tap_key
 844               	.LVL95:
 122:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 845               		.loc 1 122 0
 846 0020 612F      		mov r22,r17
 847 0022 88E2      		ldi r24,lo8(40)
 848 0024 90E0      		ldi r25,0
 849               	.L62:
 850               	/* epilogue start */
 143:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 851               		.loc 1 143 0
 852 0026 DF91      		pop r29
 853 0028 CF91      		pop r28
 854               	.LVL96:
 855 002a 1F91      		pop r17
 856               	.LVL97:
 131:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 857               		.loc 1 131 0
 858 002c 0C94 0000 		jmp double_shift
 859               	.LVL98:
 860               	.L59:
 126:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 861               		.loc 1 126 0
 862 0030 862F      		mov r24,r22
 863               	.LVL99:
 864               	/* epilogue start */
 143:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 865               		.loc 1 143 0
 866 0032 DF91      		pop r29
 867 0034 CF91      		pop r28
 868 0036 1F91      		pop r17
 869               	.LVL100:
 126:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 870               		.loc 1 126 0
 871 0038 0C94 0000 		jmp register_code
 872               	.LVL101:
 873               	.L58:
 130:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     double_shift(keycode, layer);
 874               		.loc 1 130 0
 875 003c 2230      		cpi r18,lo8(2)
 876 003e 01F4      		brne .L60
 131:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 877               		.loc 1 131 0
 878 0040 642F      		mov r22,r20
 879               	.LVL102:
 880 0042 CE01      		movw r24,r28
 881               	.LVL103:
 882 0044 00C0      		rjmp .L62
 883               	.LVL104:
 884               	.L60:
 134:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(layer);
 885               		.loc 1 134 0
 886 0046 8781      		ldd r24,Z+7
 887               	.LVL105:
 888 0048 8823      		tst r24
 889 004a 01F0      		breq .L61
 135:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 890               		.loc 1 135 0
 891 004c 842F      		mov r24,r20
 892               	/* epilogue start */
 143:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 893               		.loc 1 143 0
 894 004e DF91      		pop r29
 895 0050 CF91      		pop r28
 896 0052 1F91      		pop r17
 897               	.LVL106:
 135:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 898               		.loc 1 135 0
 899 0054 0C94 0000 		jmp layer_on
 900               	.LVL107:
 901               	.L61:
 139:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key (keycode);
 902               		.loc 1 139 0
 903 0058 80E0      		ldi r24,lo8(gs(register_code))
 904 005a 90E0      		ldi r25,hi8(gs(register_code))
 905 005c 0E94 0000 		call modifier
 906               	.LVL108:
 140:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     modifier(unregister_code);
 907               		.loc 1 140 0
 908 0060 CE01      		movw r24,r28
 909 0062 0E94 0000 		call tap_key
 910               	.LVL109:
 141:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 911               		.loc 1 141 0
 912 0066 80E0      		ldi r24,lo8(gs(unregister_code))
 913 0068 90E0      		ldi r25,hi8(gs(unregister_code))
 914               	/* epilogue start */
 143:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 915               		.loc 1 143 0
 916 006a DF91      		pop r29
 917 006c CF91      		pop r28
 918               	.LVL110:
 919 006e 1F91      		pop r17
 920               	.LVL111:
 141:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 921               		.loc 1 141 0
 922 0070 0C94 0000 		jmp modifier
 923               	.LVL112:
 924               		.cfi_endproc
 925               	.LFE117:
 927               		.section	.text.enter,"ax",@progbits
 928               	.global	enter
 930               	enter:
 931               	.LFB119:
 159:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_shift(state, KC_ENT, _RSHIFT);
 932               		.loc 1 159 0
 933               		.cfi_startproc
 934               	.LVL113:
 935               	/* prologue: function */
 936               	/* frame size = 0 */
 937               	/* stack size = 0 */
 938               	.L__stack_usage = 0
 160:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 939               		.loc 1 160 0
 940 0000 43E0      		ldi r20,lo8(3)
 941 0002 68E2      		ldi r22,lo8(40)
 942 0004 70E0      		ldi r23,0
 943               	.LVL114:
 944 0006 0C94 0000 		jmp tap_shift
 945               	.LVL115:
 946               		.cfi_endproc
 947               	.LFE119:
 949               		.section	.text.space,"ax",@progbits
 950               	.global	space
 952               	space:
 953               	.LFB121:
 170:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_shift(state, KC_SPC, _LSHIFT);
 954               		.loc 1 170 0
 955               		.cfi_startproc
 956               	.LVL116:
 957               	/* prologue: function */
 958               	/* frame size = 0 */
 959               	/* stack size = 0 */
 960               	.L__stack_usage = 0
 171:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 961               		.loc 1 171 0
 962 0000 42E0      		ldi r20,lo8(2)
 963 0002 6CE2      		ldi r22,lo8(44)
 964 0004 70E0      		ldi r23,0
 965               	.LVL117:
 966 0006 0C94 0000 		jmp tap_shift
 967               	.LVL118:
 968               		.cfi_endproc
 969               	.LFE121:
 971               		.section	.text.tap_reset,"ax",@progbits
 972               	.global	tap_reset
 974               	tap_reset:
 975               	.LFB118:
 146:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   unregister_code(keycode);
 976               		.loc 1 146 0
 977               		.cfi_startproc
 978               	.LVL119:
 979 0000 CF93      		push r28
 980               	.LCFI26:
 981               		.cfi_def_cfa_offset 3
 982               		.cfi_offset 28, -2
 983               	/* prologue: function */
 984               	/* frame size = 0 */
 985               	/* stack size = 1 */
 986               	.L__stack_usage = 1
 987 0002 C62F      		mov r28,r22
 147:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (DT_SHIFT && dt_shift) {
 988               		.loc 1 147 0
 989 0004 0E94 0000 		call unregister_code
 990               	.LVL120:
 148:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     clear_oneshot_layer_state(ONESHOT_PRESSED);
 991               		.loc 1 148 0
 992 0008 8091 0000 		lds r24,dt_shift
 993 000c 8823      		tst r24
 994 000e 01F0      		breq .L66
 149:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     dt_shift = 0;
 995               		.loc 1 149 0
 996 0010 81E0      		ldi r24,lo8(1)
 997 0012 0E94 0000 		call clear_oneshot_layer_state
 998               	.LVL121:
 150:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 999               		.loc 1 150 0
 1000 0016 1092 0000 		sts dt_shift,__zero_reg__
 1001               	/* epilogue start */
 155:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1002               		.loc 1 155 0
 1003 001a CF91      		pop r28
 1004               	.LVL122:
 1005 001c 0895      		ret
 1006               	.LVL123:
 1007               	.L66:
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1008               		.loc 1 153 0
 1009 001e 8C2F      		mov r24,r28
 1010               	/* epilogue start */
 155:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1011               		.loc 1 155 0
 1012 0020 CF91      		pop r28
 1013               	.LVL124:
 153:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1014               		.loc 1 153 0
 1015 0022 0C94 0000 		jmp layer_off
 1016               	.LVL125:
 1017               		.cfi_endproc
 1018               	.LFE118:
 1020               		.section	.text.enter_reset,"ax",@progbits
 1021               	.global	enter_reset
 1023               	enter_reset:
 1024               	.LFB120:
 164:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_reset(KC_ENT, _RSHIFT);
 1025               		.loc 1 164 0
 1026               		.cfi_startproc
 1027               	.LVL126:
 1028               	/* prologue: function */
 1029               	/* frame size = 0 */
 1030               	/* stack size = 0 */
 1031               	.L__stack_usage = 0
 165:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1032               		.loc 1 165 0
 1033 0000 63E0      		ldi r22,lo8(3)
 1034               	.LVL127:
 1035 0002 88E2      		ldi r24,lo8(40)
 1036 0004 90E0      		ldi r25,0
 1037               	.LVL128:
 1038 0006 0C94 0000 		jmp tap_reset
 1039               	.LVL129:
 1040               		.cfi_endproc
 1041               	.LFE120:
 1043               		.section	.text.space_reset,"ax",@progbits
 1044               	.global	space_reset
 1046               	space_reset:
 1047               	.LFB122:
 175:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_reset(KC_SPC, _LSHIFT);
 1048               		.loc 1 175 0
 1049               		.cfi_startproc
 1050               	.LVL130:
 1051               	/* prologue: function */
 1052               	/* frame size = 0 */
 1053               	/* stack size = 0 */
 1054               	.L__stack_usage = 0
 176:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1055               		.loc 1 176 0
 1056 0000 62E0      		ldi r22,lo8(2)
 1057               	.LVL131:
 1058 0002 8CE2      		ldi r24,lo8(44)
 1059 0004 90E0      		ldi r25,0
 1060               	.LVL132:
 1061 0006 0C94 0000 		jmp tap_reset
 1062               	.LVL133:
 1063               		.cfi_endproc
 1064               	.LFE122:
 1066               		.section	.text.double_max,"ax",@progbits
 1067               	.global	double_max
 1069               	double_max:
 1070               	.LFB123:
 182:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (shift) {
 1071               		.loc 1 182 0
 1072               		.cfi_startproc
 1073               	.LVL134:
 1074 0000 1F93      		push r17
 1075               	.LCFI27:
 1076               		.cfi_def_cfa_offset 3
 1077               		.cfi_offset 17, -2
 1078 0002 CF93      		push r28
 1079               	.LCFI28:
 1080               		.cfi_def_cfa_offset 4
 1081               		.cfi_offset 28, -3
 1082 0004 DF93      		push r29
 1083               	.LCFI29:
 1084               		.cfi_def_cfa_offset 5
 1085               		.cfi_offset 29, -4
 1086               	/* prologue: function */
 1087               	/* frame size = 0 */
 1088               	/* stack size = 3 */
 1089               	.L__stack_usage = 3
 1090 0006 182F      		mov r17,r24
 1091 0008 EA01      		movw r28,r20
 184:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (count > 1) {
 1092               		.loc 1 184 0
 1093 000a CA01      		movw r24,r20
 1094               	.LVL135:
 183:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(keycode);
 1095               		.loc 1 183 0
 1096 000c 6623      		tst r22
 1097 000e 01F0      		breq .L72
 184:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (count > 1) {
 1098               		.loc 1 184 0
 1099 0010 0E94 0000 		call shift_key
 1100               	.LVL136:
 185:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       shift_key(keycode);
 1101               		.loc 1 185 0
 1102 0014 1230      		cpi r17,lo8(2)
 1103 0016 00F0      		brlo .L71
 186:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1104               		.loc 1 186 0
 1105 0018 CE01      		movw r24,r28
 1106               	/* epilogue start */
 195:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1107               		.loc 1 195 0
 1108 001a DF91      		pop r29
 1109 001c CF91      		pop r28
 1110               	.LVL137:
 1111 001e 1F91      		pop r17
 1112               	.LVL138:
 186:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1113               		.loc 1 186 0
 1114 0020 0C94 0000 		jmp shift_key
 1115               	.LVL139:
 1116               	.L72:
 190:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (count > 1) {
 1117               		.loc 1 190 0
 1118 0024 0E94 0000 		call tap_key
 1119               	.LVL140:
 191:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       tap_key(keycode);
 1120               		.loc 1 191 0
 1121 0028 1230      		cpi r17,lo8(2)
 1122 002a 00F0      		brlo .L71
 192:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1123               		.loc 1 192 0
 1124 002c CE01      		movw r24,r28
 1125               	/* epilogue start */
 195:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1126               		.loc 1 195 0
 1127 002e DF91      		pop r29
 1128 0030 CF91      		pop r28
 1129               	.LVL141:
 1130 0032 1F91      		pop r17
 1131               	.LVL142:
 192:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1132               		.loc 1 192 0
 1133 0034 0C94 0000 		jmp tap_key
 1134               	.LVL143:
 1135               	.L71:
 1136               	/* epilogue start */
 195:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1137               		.loc 1 195 0
 1138 0038 DF91      		pop r29
 1139 003a CF91      		pop r28
 1140               	.LVL144:
 1141 003c 1F91      		pop r17
 1142               	.LVL145:
 1143 003e 0895      		ret
 1144               		.cfi_endproc
 1145               	.LFE123:
 1147               		.section	.text.colon,"ax",@progbits
 1148               	.global	colon
 1150               	colon:
 1151               	.LFB124:
 198:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 1152               		.loc 1 198 0
 1153               		.cfi_startproc
 1154               	.LVL146:
 1155 0000 CF93      		push r28
 1156               	.LCFI30:
 1157               		.cfi_def_cfa_offset 3
 1158               		.cfi_offset 28, -2
 1159 0002 DF93      		push r29
 1160               	.LCFI31:
 1161               		.cfi_def_cfa_offset 4
 1162               		.cfi_offset 29, -3
 1163               	/* prologue: function */
 1164               	/* frame size = 0 */
 1165               	/* stack size = 2 */
 1166               	.L__stack_usage = 2
 1167 0004 EC01      		movw r28,r24
 199:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 1168               		.loc 1 199 0
 1169 0006 8881      		ld r24,Y
 1170               	.LVL147:
 1171 0008 8330      		cpi r24,lo8(3)
 1172 000a 00F0      		brlo .L77
 200:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_SCLN);
 1173               		.loc 1 200 0
 1174 000c 8CE2      		ldi r24,lo8(44)
 1175 000e 90E0      		ldi r25,0
 1176 0010 0E94 0000 		call tap_key
 1177               	.LVL148:
 201:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_SCLN);
 1178               		.loc 1 201 0
 1179 0014 83E3      		ldi r24,lo8(51)
 1180 0016 90E0      		ldi r25,0
 1181 0018 0E94 0000 		call shift_key
 1182               	.LVL149:
 202:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 1183               		.loc 1 202 0
 1184 001c 83E3      		ldi r24,lo8(51)
 1185 001e 90E0      		ldi r25,0
 1186 0020 0E94 0000 		call shift_key
 1187               	.LVL150:
 203:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1188               		.loc 1 203 0
 1189 0024 8CE2      		ldi r24,lo8(44)
 1190 0026 90E0      		ldi r25,0
 1191 0028 0E94 0000 		call tap_key
 1192               	.LVL151:
 1193               	.L78:
 208:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1194               		.loc 1 208 0
 1195 002c CE01      		movw r24,r28
 1196               	/* epilogue start */
 209:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1197               		.loc 1 209 0
 1198 002e DF91      		pop r29
 1199 0030 CF91      		pop r28
 1200               	.LVL152:
 208:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1201               		.loc 1 208 0
 1202 0032 0C94 0000 		jmp reset_tap_dance
 1203               	.LVL153:
 1204               	.L77:
 206:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1205               		.loc 1 206 0
 1206 0036 43E3      		ldi r20,lo8(51)
 1207 0038 50E0      		ldi r21,0
 1208 003a 61E0      		ldi r22,lo8(1)
 1209               	.LVL154:
 1210 003c 0E94 0000 		call double_max
 1211               	.LVL155:
 1212 0040 00C0      		rjmp .L78
 1213               		.cfi_endproc
 1214               	.LFE124:
 1216               		.section	.text.eql,"ax",@progbits
 1217               	.global	eql
 1219               	eql:
 1220               	.LFB125:
 212:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 1221               		.loc 1 212 0
 1222               		.cfi_startproc
 1223               	.LVL156:
 1224 0000 CF93      		push r28
 1225               	.LCFI32:
 1226               		.cfi_def_cfa_offset 3
 1227               		.cfi_offset 28, -2
 1228 0002 DF93      		push r29
 1229               	.LCFI33:
 1230               		.cfi_def_cfa_offset 4
 1231               		.cfi_offset 29, -3
 1232               	/* prologue: function */
 1233               	/* frame size = 0 */
 1234               	/* stack size = 2 */
 1235               	.L__stack_usage = 2
 1236 0004 EC01      		movw r28,r24
 213:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SPC);
 1237               		.loc 1 213 0
 1238 0006 8881      		ld r24,Y
 1239               	.LVL157:
 1240 0008 8330      		cpi r24,lo8(3)
 1241 000a 00F0      		brlo .L80
 214:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SLSH);
 1242               		.loc 1 214 0
 1243 000c 8CE2      		ldi r24,lo8(44)
 1244 000e 90E0      		ldi r25,0
 1245 0010 0E94 0000 		call tap_key
 1246               	.LVL158:
 215:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_EQL);
 1247               		.loc 1 215 0
 1248 0014 88E3      		ldi r24,lo8(56)
 1249 0016 90E0      		ldi r25,0
 1250 0018 0E94 0000 		call tap_key
 1251               	.LVL159:
 216:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_SPC);
 1252               		.loc 1 216 0
 1253 001c 8EE2      		ldi r24,lo8(46)
 1254 001e 90E0      		ldi r25,0
 1255 0020 0E94 0000 		call tap_key
 1256               	.LVL160:
 217:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1257               		.loc 1 217 0
 1258 0024 8CE2      		ldi r24,lo8(44)
 1259 0026 90E0      		ldi r25,0
 1260 0028 0E94 0000 		call tap_key
 1261               	.LVL161:
 1262               	.L81:
 222:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1263               		.loc 1 222 0
 1264 002c CE01      		movw r24,r28
 1265               	/* epilogue start */
 223:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1266               		.loc 1 223 0
 1267 002e DF91      		pop r29
 1268 0030 CF91      		pop r28
 1269               	.LVL162:
 222:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1270               		.loc 1 222 0
 1271 0032 0C94 0000 		jmp reset_tap_dance
 1272               	.LVL163:
 1273               	.L80:
 220:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1274               		.loc 1 220 0
 1275 0036 4EE2      		ldi r20,lo8(46)
 1276 0038 50E0      		ldi r21,0
 1277 003a 60E0      		ldi r22,0
 1278               	.LVL164:
 1279 003c 0E94 0000 		call double_max
 1280               	.LVL165:
 1281 0040 00C0      		rjmp .L81
 1282               		.cfi_endproc
 1283               	.LFE125:
 1285               		.section	.text.greater,"ax",@progbits
 1286               	.global	greater
 1288               	greater:
 1289               	.LFB126:
 226:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 1290               		.loc 1 226 0
 1291               		.cfi_startproc
 1292               	.LVL166:
 1293 0000 CF93      		push r28
 1294               	.LCFI34:
 1295               		.cfi_def_cfa_offset 3
 1296               		.cfi_offset 28, -2
 1297 0002 DF93      		push r29
 1298               	.LCFI35:
 1299               		.cfi_def_cfa_offset 4
 1300               		.cfi_offset 29, -3
 1301               	/* prologue: function */
 1302               	/* frame size = 0 */
 1303               	/* stack size = 2 */
 1304               	.L__stack_usage = 2
 1305 0004 EC01      		movw r28,r24
 227:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 1306               		.loc 1 227 0
 1307 0006 8881      		ld r24,Y
 1308               	.LVL167:
 1309 0008 8330      		cpi r24,lo8(3)
 1310 000a 00F0      		brlo .L83
 228:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_MINS);
 1311               		.loc 1 228 0
 1312 000c 8CE2      		ldi r24,lo8(44)
 1313 000e 90E0      		ldi r25,0
 1314 0010 0E94 0000 		call tap_key
 1315               	.LVL168:
 229:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_DOT);
 1316               		.loc 1 229 0
 1317 0014 8DE2      		ldi r24,lo8(45)
 1318 0016 90E0      		ldi r25,0
 1319 0018 0E94 0000 		call tap_key
 1320               	.LVL169:
 230:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 1321               		.loc 1 230 0
 1322 001c 87E3      		ldi r24,lo8(55)
 1323 001e 90E0      		ldi r25,0
 1324 0020 0E94 0000 		call shift_key
 1325               	.LVL170:
 231:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1326               		.loc 1 231 0
 1327 0024 8CE2      		ldi r24,lo8(44)
 1328 0026 90E0      		ldi r25,0
 1329 0028 0E94 0000 		call tap_key
 1330               	.LVL171:
 1331               	.L84:
 236:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1332               		.loc 1 236 0
 1333 002c CE01      		movw r24,r28
 1334               	/* epilogue start */
 237:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1335               		.loc 1 237 0
 1336 002e DF91      		pop r29
 1337 0030 CF91      		pop r28
 1338               	.LVL172:
 236:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1339               		.loc 1 236 0
 1340 0032 0C94 0000 		jmp reset_tap_dance
 1341               	.LVL173:
 1342               	.L83:
 234:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1343               		.loc 1 234 0
 1344 0036 47E3      		ldi r20,lo8(55)
 1345 0038 50E0      		ldi r21,0
 1346 003a 61E0      		ldi r22,lo8(1)
 1347               	.LVL174:
 1348 003c 0E94 0000 		call double_max
 1349               	.LVL175:
 1350 0040 00C0      		rjmp .L84
 1351               		.cfi_endproc
 1352               	.LFE126:
 1354               		.section	.text.lesser,"ax",@progbits
 1355               	.global	lesser
 1357               	lesser:
 1358               	.LFB127:
 240:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (state->count > 2) {
 1359               		.loc 1 240 0
 1360               		.cfi_startproc
 1361               	.LVL176:
 1362 0000 CF93      		push r28
 1363               	.LCFI36:
 1364               		.cfi_def_cfa_offset 3
 1365               		.cfi_offset 28, -2
 1366 0002 DF93      		push r29
 1367               	.LCFI37:
 1368               		.cfi_def_cfa_offset 4
 1369               		.cfi_offset 29, -3
 1370               	/* prologue: function */
 1371               	/* frame size = 0 */
 1372               	/* stack size = 2 */
 1373               	.L__stack_usage = 2
 1374 0004 EC01      		movw r28,r24
 241:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 1375               		.loc 1 241 0
 1376 0006 8881      		ld r24,Y
 1377               	.LVL177:
 1378 0008 8330      		cpi r24,lo8(3)
 1379 000a 00F0      		brlo .L86
 242:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(KC_COMM);
 1380               		.loc 1 242 0
 1381 000c 8CE2      		ldi r24,lo8(44)
 1382 000e 90E0      		ldi r25,0
 1383 0010 0E94 0000 		call tap_key
 1384               	.LVL178:
 243:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_MINS);
 1385               		.loc 1 243 0
 1386 0014 86E3      		ldi r24,lo8(54)
 1387 0016 90E0      		ldi r25,0
 1388 0018 0E94 0000 		call shift_key
 1389               	.LVL179:
 244:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key  (KC_SPC);
 1390               		.loc 1 244 0
 1391 001c 8DE2      		ldi r24,lo8(45)
 1392 001e 90E0      		ldi r25,0
 1393 0020 0E94 0000 		call tap_key
 1394               	.LVL180:
 245:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1395               		.loc 1 245 0
 1396 0024 8CE2      		ldi r24,lo8(44)
 1397 0026 90E0      		ldi r25,0
 1398 0028 0E94 0000 		call tap_key
 1399               	.LVL181:
 1400               	.L87:
 250:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1401               		.loc 1 250 0
 1402 002c CE01      		movw r24,r28
 1403               	/* epilogue start */
 251:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1404               		.loc 1 251 0
 1405 002e DF91      		pop r29
 1406 0030 CF91      		pop r28
 1407               	.LVL182:
 250:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1408               		.loc 1 250 0
 1409 0032 0C94 0000 		jmp reset_tap_dance
 1410               	.LVL183:
 1411               	.L86:
 248:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1412               		.loc 1 248 0
 1413 0036 46E3      		ldi r20,lo8(54)
 1414 0038 50E0      		ldi r21,0
 1415 003a 61E0      		ldi r22,lo8(1)
 1416               	.LVL184:
 1417 003c 0E94 0000 		call double_max
 1418               	.LVL185:
 1419 0040 00C0      		rjmp .L87
 1420               		.cfi_endproc
 1421               	.LFE127:
 1423               		.section	.text.symbol_pair,"ax",@progbits
 1424               	.global	symbol_pair
 1426               	symbol_pair:
 1427               	.LFB130:
 285:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (shift & S_DOUBLE) {
 1428               		.loc 1 285 0
 1429               		.cfi_startproc
 1430               	.LVL186:
 1431 0000 CF93      		push r28
 1432               	.LCFI38:
 1433               		.cfi_def_cfa_offset 3
 1434               		.cfi_offset 28, -2
 1435 0002 DF93      		push r29
 1436               	.LCFI39:
 1437               		.cfi_def_cfa_offset 4
 1438               		.cfi_offset 29, -3
 1439               	/* prologue: function */
 1440               	/* frame size = 0 */
 1441               	/* stack size = 2 */
 1442               	.L__stack_usage = 2
 1443 0004 EA01      		movw r28,r20
 286:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(left);
 1444               		.loc 1 286 0
 1445 0006 81FF      		sbrs r24,1
 1446 0008 00C0      		rjmp .L89
 287:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     shift_key(right);
 1447               		.loc 1 287 0
 1448 000a CB01      		movw r24,r22
 1449               	.LVL187:
 1450 000c 0E94 0000 		call shift_key
 1451               	.LVL188:
 288:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1452               		.loc 1 288 0
 1453 0010 CE01      		movw r24,r28
 1454               	/* epilogue start */
 294:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1455               		.loc 1 294 0
 1456 0012 DF91      		pop r29
 1457 0014 CF91      		pop r28
 1458               	.LVL189:
 288:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1459               		.loc 1 288 0
 1460 0016 0C94 0000 		jmp shift_key
 1461               	.LVL190:
 1462               	.L89:
 291:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(right);
 1463               		.loc 1 291 0
 1464 001a CB01      		movw r24,r22
 1465               	.LVL191:
 1466 001c 0E94 0000 		call tap_key
 1467               	.LVL192:
 292:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1468               		.loc 1 292 0
 1469 0020 CE01      		movw r24,r28
 1470               	/* epilogue start */
 294:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1471               		.loc 1 294 0
 1472 0022 DF91      		pop r29
 1473 0024 CF91      		pop r28
 1474               	.LVL193:
 292:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1475               		.loc 1 292 0
 1476 0026 0C94 0000 		jmp tap_key
 1477               	.LVL194:
 1478               		.cfi_endproc
 1479               	.LFE130:
 1481               		.section	.text.tap_pair,"ax",@progbits
 1482               	.global	tap_pair
 1484               	tap_pair:
 1485               	.LFB131:
 300:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   // triple tap: left right with cursor between symbol pair a la vim :-)
 1486               		.loc 1 300 0
 1487               		.cfi_startproc
 1488               	.LVL195:
 1489 0000 EF92      		push r14
 1490               	.LCFI40:
 1491               		.cfi_def_cfa_offset 3
 1492               		.cfi_offset 14, -2
 1493 0002 0F93      		push r16
 1494               	.LCFI41:
 1495               		.cfi_def_cfa_offset 4
 1496               		.cfi_offset 16, -3
 1497 0004 1F93      		push r17
 1498               	.LCFI42:
 1499               		.cfi_def_cfa_offset 5
 1500               		.cfi_offset 17, -4
 1501 0006 CF93      		push r28
 1502               	.LCFI43:
 1503               		.cfi_def_cfa_offset 6
 1504               		.cfi_offset 28, -5
 1505 0008 DF93      		push r29
 1506               	.LCFI44:
 1507               		.cfi_def_cfa_offset 7
 1508               		.cfi_offset 29, -6
 1509               	/* prologue: function */
 1510               	/* frame size = 0 */
 1511               	/* stack size = 5 */
 1512               	.L__stack_usage = 5
 1513 000a EC01      		movw r28,r24
 1514 000c 862F      		mov r24,r22
 1515               	.LVL196:
 1516 000e BA01      		movw r22,r20
 1517               	.LVL197:
 1518 0010 422F      		mov r20,r18
 1519               	.LVL198:
 1520 0012 932F      		mov r25,r19
 302:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     symbol_pair(shift, left, right);
 1521               		.loc 1 302 0
 1522 0014 2881      		ld r18,Y
 1523               	.LVL199:
 1524 0016 2330      		cpi r18,lo8(3)
 1525 0018 00F0      		brlo .L91
 303:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key    (KC_LEFT);
 1526               		.loc 1 303 0
 1527 001a 532F      		mov r21,r19
 1528 001c 0E94 0000 		call symbol_pair
 1529               	.LVL200:
 304:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1530               		.loc 1 304 0
 1531 0020 80E5      		ldi r24,lo8(80)
 1532 0022 90E0      		ldi r25,0
 1533               	.L103:
 322:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1534               		.loc 1 322 0 discriminator 4
 1535 0024 0E94 0000 		call tap_key
 1536               	.LVL201:
 1537 0028 00C0      		rjmp .L92
 1538               	.LVL202:
 1539               	.L91:
 307:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     symbol_pair(shift, left, right);
 1540               		.loc 1 307 0
 1541 002a 2230      		cpi r18,lo8(2)
 1542 002c 01F4      		brne .L93
 308:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1543               		.loc 1 308 0
 1544 002e 532F      		mov r21,r19
 1545 0030 0E94 0000 		call symbol_pair
 1546               	.LVL203:
 1547               	.L92:
 325:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     reset_tap_dance(state);
 1548               		.loc 1 325 0
 1549 0034 012B      		or r16,r17
 1550 0036 01F0      		breq .L99
 1551               	/* epilogue start */
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1552               		.loc 1 328 0
 1553 0038 DF91      		pop r29
 1554 003a CF91      		pop r28
 1555               	.LVL204:
 1556 003c 1F91      		pop r17
 1557 003e 0F91      		pop r16
 1558               	.LVL205:
 1559 0040 EF90      		pop r14
 1560               	.LVL206:
 1561 0042 0895      		ret
 1562               	.LVL207:
 1563               	.L93:
 311:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (modifier) {
 1564               		.loc 1 311 0
 1565 0044 2F81      		ldd r18,Y+7
 1566 0046 2223      		tst r18
 1567 0048 01F0      		breq .L94
 312:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       register_code(modifier);
 1568               		.loc 1 312 0
 1569 004a 0115      		cp r16,__zero_reg__
 1570 004c 1105      		cpc r17,__zero_reg__
 1571 004e 01F4      		brne .L95
 1572               	.LVL208:
 1573               	.L99:
 326:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1574               		.loc 1 326 0
 1575 0050 CE01      		movw r24,r28
 1576               	/* epilogue start */
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1577               		.loc 1 328 0
 1578 0052 DF91      		pop r29
 1579 0054 CF91      		pop r28
 1580               	.LVL209:
 1581 0056 1F91      		pop r17
 1582 0058 0F91      		pop r16
 1583               	.LVL210:
 1584 005a EF90      		pop r14
 1585               	.LVL211:
 326:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 1586               		.loc 1 326 0
 1587 005c 0C94 0000 		jmp reset_tap_dance
 1588               	.LVL212:
 1589               	.L95:
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1590               		.loc 1 313 0
 1591 0060 802F      		mov r24,r16
 1592               	.LVL213:
 1593               	/* epilogue start */
 328:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1594               		.loc 1 328 0
 1595 0062 DF91      		pop r29
 1596 0064 CF91      		pop r28
 1597               	.LVL214:
 1598 0066 1F91      		pop r17
 1599 0068 0F91      		pop r16
 1600               	.LVL215:
 1601 006a EF90      		pop r14
 1602               	.LVL216:
 313:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1603               		.loc 1 313 0
 1604 006c 0C94 0000 		jmp register_code
 1605               	.LVL217:
 1606               	.L94:
 318:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       shift_key(close ? right : left);
 1607               		.loc 1 318 0
 1608 0070 80FF      		sbrs r24,0
 1609 0072 00C0      		rjmp .L96
 319:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1610               		.loc 1 319 0
 1611 0074 E110      		cpse r14,__zero_reg__
 1612 0076 00C0      		rjmp .L97
 1613 0078 462F      		mov r20,r22
 1614 007a 972F      		mov r25,r23
 1615               	.L97:
 319:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1616               		.loc 1 319 0 is_stmt 0 discriminator 4
 1617 007c 842F      		mov r24,r20
 1618               	.LVL218:
 1619 007e 0E94 0000 		call shift_key
 1620               	.LVL219:
 1621 0082 00C0      		rjmp .L92
 1622               	.LVL220:
 1623               	.L96:
 322:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1624               		.loc 1 322 0 is_stmt 1
 1625 0084 E110      		cpse r14,__zero_reg__
 1626 0086 00C0      		rjmp .L98
 1627 0088 462F      		mov r20,r22
 1628 008a 972F      		mov r25,r23
 1629               	.L98:
 322:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 1630               		.loc 1 322 0 is_stmt 0 discriminator 4
 1631 008c 842F      		mov r24,r20
 1632               	.LVL221:
 1633 008e 00C0      		rjmp .L103
 1634               		.cfi_endproc
 1635               	.LFE131:
 1637               		.section	.text.doublequote,"ax",@progbits
 1638               	.global	doublequote
 1640               	doublequote:
 1641               	.LFB132:
 331:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_QUOT, KC_QUOT, 0, 0);
 1642               		.loc 1 331 0 is_stmt 1
 1643               		.cfi_startproc
 1644               	.LVL222:
 1645 0000 EF92      		push r14
 1646               	.LCFI45:
 1647               		.cfi_def_cfa_offset 3
 1648               		.cfi_offset 14, -2
 1649 0002 0F93      		push r16
 1650               	.LCFI46:
 1651               		.cfi_def_cfa_offset 4
 1652               		.cfi_offset 16, -3
 1653 0004 1F93      		push r17
 1654               	.LCFI47:
 1655               		.cfi_def_cfa_offset 5
 1656               		.cfi_offset 17, -4
 1657               	/* prologue: function */
 1658               	/* frame size = 0 */
 1659               	/* stack size = 3 */
 1660               	.L__stack_usage = 3
 332:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1661               		.loc 1 332 0
 1662 0006 E12C      		mov r14,__zero_reg__
 1663 0008 10E0      		ldi r17,0
 1664 000a 00E0      		ldi r16,0
 1665 000c 24E3      		ldi r18,lo8(52)
 1666 000e 30E0      		ldi r19,0
 1667 0010 44E3      		ldi r20,lo8(52)
 1668 0012 50E0      		ldi r21,0
 1669 0014 63E0      		ldi r22,lo8(3)
 1670               	.LVL223:
 1671 0016 0E94 0000 		call tap_pair
 1672               	.LVL224:
 1673               	/* epilogue start */
 333:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1674               		.loc 1 333 0
 1675 001a 1F91      		pop r17
 1676 001c 0F91      		pop r16
 1677 001e EF90      		pop r14
 1678 0020 0895      		ret
 1679               		.cfi_endproc
 1680               	.LFE132:
 1682               		.section	.text.grave,"ax",@progbits
 1683               	.global	grave
 1685               	grave:
 1686               	.LFB133:
 336:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_GRV, KC_GRV, 0, 0);
 1687               		.loc 1 336 0
 1688               		.cfi_startproc
 1689               	.LVL225:
 1690 0000 EF92      		push r14
 1691               	.LCFI48:
 1692               		.cfi_def_cfa_offset 3
 1693               		.cfi_offset 14, -2
 1694 0002 0F93      		push r16
 1695               	.LCFI49:
 1696               		.cfi_def_cfa_offset 4
 1697               		.cfi_offset 16, -3
 1698 0004 1F93      		push r17
 1699               	.LCFI50:
 1700               		.cfi_def_cfa_offset 5
 1701               		.cfi_offset 17, -4
 1702               	/* prologue: function */
 1703               	/* frame size = 0 */
 1704               	/* stack size = 3 */
 1705               	.L__stack_usage = 3
 337:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1706               		.loc 1 337 0
 1707 0006 E12C      		mov r14,__zero_reg__
 1708 0008 10E0      		ldi r17,0
 1709 000a 00E0      		ldi r16,0
 1710 000c 25E3      		ldi r18,lo8(53)
 1711 000e 30E0      		ldi r19,0
 1712 0010 45E3      		ldi r20,lo8(53)
 1713 0012 50E0      		ldi r21,0
 1714 0014 60E0      		ldi r22,0
 1715               	.LVL226:
 1716 0016 0E94 0000 		call tap_pair
 1717               	.LVL227:
 1718               	/* epilogue start */
 338:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1719               		.loc 1 338 0
 1720 001a 1F91      		pop r17
 1721 001c 0F91      		pop r16
 1722 001e EF90      		pop r14
 1723 0020 0895      		ret
 1724               		.cfi_endproc
 1725               	.LFE133:
 1727               		.section	.text.lbrace,"ax",@progbits
 1728               	.global	lbrace
 1730               	lbrace:
 1731               	.LFB134:
 341:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_LBRC, KC_RBRC, 0, 0);
 1732               		.loc 1 341 0
 1733               		.cfi_startproc
 1734               	.LVL228:
 1735 0000 EF92      		push r14
 1736               	.LCFI51:
 1737               		.cfi_def_cfa_offset 3
 1738               		.cfi_offset 14, -2
 1739 0002 0F93      		push r16
 1740               	.LCFI52:
 1741               		.cfi_def_cfa_offset 4
 1742               		.cfi_offset 16, -3
 1743 0004 1F93      		push r17
 1744               	.LCFI53:
 1745               		.cfi_def_cfa_offset 5
 1746               		.cfi_offset 17, -4
 1747               	/* prologue: function */
 1748               	/* frame size = 0 */
 1749               	/* stack size = 3 */
 1750               	.L__stack_usage = 3
 342:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1751               		.loc 1 342 0
 1752 0006 E12C      		mov r14,__zero_reg__
 1753 0008 10E0      		ldi r17,0
 1754 000a 00E0      		ldi r16,0
 1755 000c 20E3      		ldi r18,lo8(48)
 1756 000e 30E0      		ldi r19,0
 1757 0010 4FE2      		ldi r20,lo8(47)
 1758 0012 50E0      		ldi r21,0
 1759 0014 60E0      		ldi r22,0
 1760               	.LVL229:
 1761 0016 0E94 0000 		call tap_pair
 1762               	.LVL230:
 1763               	/* epilogue start */
 343:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1764               		.loc 1 343 0
 1765 001a 1F91      		pop r17
 1766 001c 0F91      		pop r16
 1767 001e EF90      		pop r14
 1768 0020 0895      		ret
 1769               		.cfi_endproc
 1770               	.LFE134:
 1772               		.section	.text.lcurly,"ax",@progbits
 1773               	.global	lcurly
 1775               	lcurly:
 1776               	.LFB135:
 346:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_LBRC, KC_RBRC, 0, 0);
 1777               		.loc 1 346 0
 1778               		.cfi_startproc
 1779               	.LVL231:
 1780 0000 EF92      		push r14
 1781               	.LCFI54:
 1782               		.cfi_def_cfa_offset 3
 1783               		.cfi_offset 14, -2
 1784 0002 0F93      		push r16
 1785               	.LCFI55:
 1786               		.cfi_def_cfa_offset 4
 1787               		.cfi_offset 16, -3
 1788 0004 1F93      		push r17
 1789               	.LCFI56:
 1790               		.cfi_def_cfa_offset 5
 1791               		.cfi_offset 17, -4
 1792               	/* prologue: function */
 1793               	/* frame size = 0 */
 1794               	/* stack size = 3 */
 1795               	.L__stack_usage = 3
 347:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1796               		.loc 1 347 0
 1797 0006 E12C      		mov r14,__zero_reg__
 1798 0008 10E0      		ldi r17,0
 1799 000a 00E0      		ldi r16,0
 1800 000c 20E3      		ldi r18,lo8(48)
 1801 000e 30E0      		ldi r19,0
 1802 0010 4FE2      		ldi r20,lo8(47)
 1803 0012 50E0      		ldi r21,0
 1804 0014 63E0      		ldi r22,lo8(3)
 1805               	.LVL232:
 1806 0016 0E94 0000 		call tap_pair
 1807               	.LVL233:
 1808               	/* epilogue start */
 348:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1809               		.loc 1 348 0
 1810 001a 1F91      		pop r17
 1811 001c 0F91      		pop r16
 1812 001e EF90      		pop r14
 1813 0020 0895      		ret
 1814               		.cfi_endproc
 1815               	.LFE135:
 1817               		.section	.text.lparen,"ax",@progbits
 1818               	.global	lparen
 1820               	lparen:
 1821               	.LFB136:
 351:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_9, KC_0, KC_LCTL, 0);
 1822               		.loc 1 351 0
 1823               		.cfi_startproc
 1824               	.LVL234:
 1825 0000 EF92      		push r14
 1826               	.LCFI57:
 1827               		.cfi_def_cfa_offset 3
 1828               		.cfi_offset 14, -2
 1829 0002 0F93      		push r16
 1830               	.LCFI58:
 1831               		.cfi_def_cfa_offset 4
 1832               		.cfi_offset 16, -3
 1833 0004 1F93      		push r17
 1834               	.LCFI59:
 1835               		.cfi_def_cfa_offset 5
 1836               		.cfi_offset 17, -4
 1837               	/* prologue: function */
 1838               	/* frame size = 0 */
 1839               	/* stack size = 3 */
 1840               	.L__stack_usage = 3
 352:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1841               		.loc 1 352 0
 1842 0006 E12C      		mov r14,__zero_reg__
 1843 0008 00EE      		ldi r16,lo8(-32)
 1844 000a 10E0      		ldi r17,0
 1845 000c 27E2      		ldi r18,lo8(39)
 1846 000e 30E0      		ldi r19,0
 1847 0010 46E2      		ldi r20,lo8(38)
 1848 0012 50E0      		ldi r21,0
 1849 0014 63E0      		ldi r22,lo8(3)
 1850               	.LVL235:
 1851 0016 0E94 0000 		call tap_pair
 1852               	.LVL236:
 1853               	/* epilogue start */
 353:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1854               		.loc 1 353 0
 1855 001a 1F91      		pop r17
 1856 001c 0F91      		pop r16
 1857 001e EF90      		pop r14
 1858 0020 0895      		ret
 1859               		.cfi_endproc
 1860               	.LFE136:
 1862               		.section	.text.quote,"ax",@progbits
 1863               	.global	quote
 1865               	quote:
 1866               	.LFB138:
 361:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_QUOT, KC_QUOT, 0, 0);
 1867               		.loc 1 361 0
 1868               		.cfi_startproc
 1869               	.LVL237:
 1870 0000 EF92      		push r14
 1871               	.LCFI60:
 1872               		.cfi_def_cfa_offset 3
 1873               		.cfi_offset 14, -2
 1874 0002 0F93      		push r16
 1875               	.LCFI61:
 1876               		.cfi_def_cfa_offset 4
 1877               		.cfi_offset 16, -3
 1878 0004 1F93      		push r17
 1879               	.LCFI62:
 1880               		.cfi_def_cfa_offset 5
 1881               		.cfi_offset 17, -4
 1882               	/* prologue: function */
 1883               	/* frame size = 0 */
 1884               	/* stack size = 3 */
 1885               	.L__stack_usage = 3
 362:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1886               		.loc 1 362 0
 1887 0006 E12C      		mov r14,__zero_reg__
 1888 0008 10E0      		ldi r17,0
 1889 000a 00E0      		ldi r16,0
 1890 000c 24E3      		ldi r18,lo8(52)
 1891 000e 30E0      		ldi r19,0
 1892 0010 44E3      		ldi r20,lo8(52)
 1893 0012 50E0      		ldi r21,0
 1894 0014 60E0      		ldi r22,0
 1895               	.LVL238:
 1896 0016 0E94 0000 		call tap_pair
 1897               	.LVL239:
 1898               	/* epilogue start */
 363:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1899               		.loc 1 363 0
 1900 001a 1F91      		pop r17
 1901 001c 0F91      		pop r16
 1902 001e EF90      		pop r14
 1903 0020 0895      		ret
 1904               		.cfi_endproc
 1905               	.LFE138:
 1907               		.section	.text.rangle,"ax",@progbits
 1908               	.global	rangle
 1910               	rangle:
 1911               	.LFB139:
 366:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_COMM, KC_DOT, 0, CLOSE);
 1912               		.loc 1 366 0
 1913               		.cfi_startproc
 1914               	.LVL240:
 1915 0000 EF92      		push r14
 1916               	.LCFI63:
 1917               		.cfi_def_cfa_offset 3
 1918               		.cfi_offset 14, -2
 1919 0002 0F93      		push r16
 1920               	.LCFI64:
 1921               		.cfi_def_cfa_offset 4
 1922               		.cfi_offset 16, -3
 1923 0004 1F93      		push r17
 1924               	.LCFI65:
 1925               		.cfi_def_cfa_offset 5
 1926               		.cfi_offset 17, -4
 1927               	/* prologue: function */
 1928               	/* frame size = 0 */
 1929               	/* stack size = 3 */
 1930               	.L__stack_usage = 3
 367:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1931               		.loc 1 367 0
 1932 0006 EE24      		clr r14
 1933 0008 E394      		inc r14
 1934 000a 10E0      		ldi r17,0
 1935 000c 00E0      		ldi r16,0
 1936 000e 27E3      		ldi r18,lo8(55)
 1937 0010 30E0      		ldi r19,0
 1938 0012 46E3      		ldi r20,lo8(54)
 1939 0014 50E0      		ldi r21,0
 1940 0016 63E0      		ldi r22,lo8(3)
 1941               	.LVL241:
 1942 0018 0E94 0000 		call tap_pair
 1943               	.LVL242:
 1944               	/* epilogue start */
 368:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1945               		.loc 1 368 0
 1946 001c 1F91      		pop r17
 1947 001e 0F91      		pop r16
 1948 0020 EF90      		pop r14
 1949 0022 0895      		ret
 1950               		.cfi_endproc
 1951               	.LFE139:
 1953               		.section	.text.rbrace,"ax",@progbits
 1954               	.global	rbrace
 1956               	rbrace:
 1957               	.LFB140:
 371:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_NEVER, KC_LBRC, KC_RBRC, 0, CLOSE);
 1958               		.loc 1 371 0
 1959               		.cfi_startproc
 1960               	.LVL243:
 1961 0000 EF92      		push r14
 1962               	.LCFI66:
 1963               		.cfi_def_cfa_offset 3
 1964               		.cfi_offset 14, -2
 1965 0002 0F93      		push r16
 1966               	.LCFI67:
 1967               		.cfi_def_cfa_offset 4
 1968               		.cfi_offset 16, -3
 1969 0004 1F93      		push r17
 1970               	.LCFI68:
 1971               		.cfi_def_cfa_offset 5
 1972               		.cfi_offset 17, -4
 1973               	/* prologue: function */
 1974               	/* frame size = 0 */
 1975               	/* stack size = 3 */
 1976               	.L__stack_usage = 3
 372:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 1977               		.loc 1 372 0
 1978 0006 EE24      		clr r14
 1979 0008 E394      		inc r14
 1980 000a 10E0      		ldi r17,0
 1981 000c 00E0      		ldi r16,0
 1982 000e 20E3      		ldi r18,lo8(48)
 1983 0010 30E0      		ldi r19,0
 1984 0012 4FE2      		ldi r20,lo8(47)
 1985 0014 50E0      		ldi r21,0
 1986 0016 60E0      		ldi r22,0
 1987               	.LVL244:
 1988 0018 0E94 0000 		call tap_pair
 1989               	.LVL245:
 1990               	/* epilogue start */
 373:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 1991               		.loc 1 373 0
 1992 001c 1F91      		pop r17
 1993 001e 0F91      		pop r16
 1994 0020 EF90      		pop r14
 1995 0022 0895      		ret
 1996               		.cfi_endproc
 1997               	.LFE140:
 1999               		.section	.text.rcurly,"ax",@progbits
 2000               	.global	rcurly
 2002               	rcurly:
 2003               	.LFB141:
 376:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_LBRC, KC_RBRC, 0, CLOSE);
 2004               		.loc 1 376 0
 2005               		.cfi_startproc
 2006               	.LVL246:
 2007 0000 EF92      		push r14
 2008               	.LCFI69:
 2009               		.cfi_def_cfa_offset 3
 2010               		.cfi_offset 14, -2
 2011 0002 0F93      		push r16
 2012               	.LCFI70:
 2013               		.cfi_def_cfa_offset 4
 2014               		.cfi_offset 16, -3
 2015 0004 1F93      		push r17
 2016               	.LCFI71:
 2017               		.cfi_def_cfa_offset 5
 2018               		.cfi_offset 17, -4
 2019               	/* prologue: function */
 2020               	/* frame size = 0 */
 2021               	/* stack size = 3 */
 2022               	.L__stack_usage = 3
 377:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2023               		.loc 1 377 0
 2024 0006 EE24      		clr r14
 2025 0008 E394      		inc r14
 2026 000a 10E0      		ldi r17,0
 2027 000c 00E0      		ldi r16,0
 2028 000e 20E3      		ldi r18,lo8(48)
 2029 0010 30E0      		ldi r19,0
 2030 0012 4FE2      		ldi r20,lo8(47)
 2031 0014 50E0      		ldi r21,0
 2032 0016 63E0      		ldi r22,lo8(3)
 2033               	.LVL247:
 2034 0018 0E94 0000 		call tap_pair
 2035               	.LVL248:
 2036               	/* epilogue start */
 378:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 2037               		.loc 1 378 0
 2038 001c 1F91      		pop r17
 2039 001e 0F91      		pop r16
 2040 0020 EF90      		pop r14
 2041 0022 0895      		ret
 2042               		.cfi_endproc
 2043               	.LFE141:
 2045               		.section	.text.rparen,"ax",@progbits
 2046               	.global	rparen
 2048               	rparen:
 2049               	.LFB142:
 381:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tap_pair(state, S_ALWAYS, KC_9, KC_0, 0, CLOSE);
 2050               		.loc 1 381 0
 2051               		.cfi_startproc
 2052               	.LVL249:
 2053 0000 EF92      		push r14
 2054               	.LCFI72:
 2055               		.cfi_def_cfa_offset 3
 2056               		.cfi_offset 14, -2
 2057 0002 0F93      		push r16
 2058               	.LCFI73:
 2059               		.cfi_def_cfa_offset 4
 2060               		.cfi_offset 16, -3
 2061 0004 1F93      		push r17
 2062               	.LCFI74:
 2063               		.cfi_def_cfa_offset 5
 2064               		.cfi_offset 17, -4
 2065               	/* prologue: function */
 2066               	/* frame size = 0 */
 2067               	/* stack size = 3 */
 2068               	.L__stack_usage = 3
 382:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2069               		.loc 1 382 0
 2070 0006 EE24      		clr r14
 2071 0008 E394      		inc r14
 2072 000a 10E0      		ldi r17,0
 2073 000c 00E0      		ldi r16,0
 2074 000e 27E2      		ldi r18,lo8(39)
 2075 0010 30E0      		ldi r19,0
 2076 0012 46E2      		ldi r20,lo8(38)
 2077 0014 50E0      		ldi r21,0
 2078 0016 63E0      		ldi r22,lo8(3)
 2079               	.LVL250:
 2080 0018 0E94 0000 		call tap_pair
 2081               	.LVL251:
 2082               	/* epilogue start */
 383:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 2083               		.loc 1 383 0
 2084 001c 1F91      		pop r17
 2085 001e 0F91      		pop r16
 2086 0020 EF90      		pop r14
 2087 0022 0895      		ret
 2088               		.cfi_endproc
 2089               	.LFE142:
 2091               		.section	.text.thumb_layer,"ax",@progbits
 2092               	.global	thumb_layer
 2094               	thumb_layer:
 2095               	.LFB150:
 448:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 449:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 450:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ................................................................... Tap Dance
 451:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 452:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** qk_tap_dance_action_t tap_dance_actions[] = {
 453:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   [_CAPS] = ACTION_TAP_DANCE_FN_ADVANCED(NULL, caps, caps_reset)
 454:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_COLN] = ACTION_TAP_DANCE_FN         (colon)
 455:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_COMM] = ACTION_TAP_DANCE_FN         (comma)
 456:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_DOT]  = ACTION_TAP_DANCE_FN         (dot)
 457:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_DQOT] = ACTION_TAP_DANCE_FN         (doublequote)
 458:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_ENT]  = ACTION_TAP_DANCE_FN_ADVANCED(NULL, enter, enter_reset)
 459:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_EQL]  = ACTION_TAP_DANCE_FN         (eql)
 460:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_GRV]  = ACTION_TAP_DANCE_FN         (grave)
 461:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_GT]   = ACTION_TAP_DANCE_FN         (greater)
 462:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_LBRC] = ACTION_TAP_DANCE_FN         (lbrace)
 463:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_LCBR] = ACTION_TAP_DANCE_FN         (lcurly)
 464:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_LPRN] = ACTION_TAP_DANCE_FN_ADVANCED(NULL, lparen, lparen_reset)
 465:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_LT]   = ACTION_TAP_DANCE_FN         (lesser)
 466:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_PRIV] = ACTION_TAP_DANCE_FN         (private)
 467:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_QUOT] = ACTION_TAP_DANCE_FN         (quote)
 468:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_RBRC] = ACTION_TAP_DANCE_FN         (rbrace)
 469:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_RCBR] = ACTION_TAP_DANCE_FN         (rcurly)
 470:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_RNGL] = ACTION_TAP_DANCE_FN         (rangle)
 471:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_RPRN] = ACTION_TAP_DANCE_FN_ADVANCED(NULL, rparen, rparen_reset)
 472:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_SEND] = ACTION_TAP_DANCE_FN         (send)
 473:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_SPC]  = ACTION_TAP_DANCE_FN_ADVANCED(NULL, space, space_reset)
 474:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****  ,[_TILD] = ACTION_TAP_DANCE_FN_ADVANCED(NULL, tilde, tilde_reset)
 475:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** };
 476:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 477:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // .............................................................. Dynamic Layers
 478:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 479:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define        LEFT    1
 480:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define        RIGHT   2
 481:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint8_t thumb = 0;
 482:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 483:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // LEFT (KC_SPC, S(KC_BSLS)), RIGHT (KC_LEFT, S(KC_LEFT)) opposite thumb combinations, see process_
 484:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // up,   up   -> _BASE
 485:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // up,   down -> _SYMBOL
 486:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // down, up   -> _NUMBER
 487:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // down, down -> _MOUSE                     // see layer keycodes that raise mouse layer
 488:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #define THUMBS_DOWN _MOUSE                  // layer
 489:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 490:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint8_t overlayer = 0;
 491:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 492:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // left right thumb layer combinations
 493:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void thumb_layer(keyrecord_t *record, uint8_t side, uint8_t shift, uint16_t keycode, uint8_t thumb_
 494:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2096               		.loc 1 494 0
 2097               		.cfi_startproc
 2098               	.LVL252:
 2099 0000 CF92      		push r12
 2100               	.LCFI75:
 2101               		.cfi_def_cfa_offset 3
 2102               		.cfi_offset 12, -2
 2103 0002 DF92      		push r13
 2104               	.LCFI76:
 2105               		.cfi_def_cfa_offset 4
 2106               		.cfi_offset 13, -3
 2107 0004 EF92      		push r14
 2108               	.LCFI77:
 2109               		.cfi_def_cfa_offset 5
 2110               		.cfi_offset 14, -4
 2111 0006 0F93      		push r16
 2112               	.LCFI78:
 2113               		.cfi_def_cfa_offset 6
 2114               		.cfi_offset 16, -5
 2115 0008 CF93      		push r28
 2116               	.LCFI79:
 2117               		.cfi_def_cfa_offset 7
 2118               		.cfi_offset 28, -6
 2119 000a DF93      		push r29
 2120               	.LCFI80:
 2121               		.cfi_def_cfa_offset 8
 2122               		.cfi_offset 29, -7
 2123               	/* prologue: function */
 2124               	/* frame size = 0 */
 2125               	/* stack size = 6 */
 2126               	.L__stack_usage = 6
 2127 000c C62F      		mov r28,r22
 2128 000e D42F      		mov r29,r20
 2129 0010 6901      		movw r12,r18
 495:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 2130               		.loc 1 495 0
 2131 0012 FC01      		movw r30,r24
 2132 0014 8281      		ldd r24,Z+2
 2133               	.LVL253:
 2134 0016 8823      		tst r24
 2135 0018 01F0      		breq .L115
 496:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // layer_on via tap_layer(), see process_record_user()
 497:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = timer_read();
 2136               		.loc 1 497 0
 2137 001a 0E94 0000 		call timer_read
 2138               	.LVL254:
 2139 001e 9093 0000 		sts key_timer+1,r25
 2140 0022 8093 0000 		sts key_timer,r24
 498:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     thumb     = thumb | side;
 2141               		.loc 1 498 0
 2142 0026 8091 0000 		lds r24,thumb
 2143 002a C82B      		or r28,r24
 2144               	.LVL255:
 2145 002c C093 0000 		sts thumb,r28
 2146               	.L114:
 2147               	/* epilogue start */
 499:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 500:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 501:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_off(thumb_dn_layer);
 502:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // opposite thumb_layer() thumb may have switched effective layer!
 503:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (overlayer) {
 504:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       layer_off(overlayer);
 505:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       overlayer = 0;
 506:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 507:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (!key_press(shift, keycode)) {
 508:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       layer_off(THUMBS_DOWN);               // both thumbs needed
 509:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       // opposite thumb down? see left right combination layer table above
 510:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       if (thumb & (side == LEFT ? RIGHT : LEFT)) {
 511:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         layer_on(thumb_up_layer);
 512:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         overlayer = thumb_up_layer;
 513:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
 514:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 515:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     clear_mods();
 516:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     thumb     = thumb & ~side;
 517:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = 0;
 518:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 519:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2148               		.loc 1 519 0
 2149 0030 DF91      		pop r29
 2150               	.LVL256:
 2151 0032 CF91      		pop r28
 2152 0034 0F91      		pop r16
 2153               	.LVL257:
 2154 0036 EF90      		pop r14
 2155               	.LVL258:
 2156 0038 DF90      		pop r13
 2157 003a CF90      		pop r12
 2158               	.LVL259:
 2159 003c 0895      		ret
 2160               	.LVL260:
 2161               	.L115:
 501:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // opposite thumb_layer() thumb may have switched effective layer!
 2162               		.loc 1 501 0
 2163 003e 802F      		mov r24,r16
 2164 0040 0E94 0000 		call layer_off
 2165               	.LVL261:
 503:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       layer_off(overlayer);
 2166               		.loc 1 503 0
 2167 0044 8091 0000 		lds r24,overlayer
 2168 0048 8823      		tst r24
 2169 004a 01F0      		breq .L117
 504:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       overlayer = 0;
 2170               		.loc 1 504 0
 2171 004c 0E94 0000 		call layer_off
 2172               	.LVL262:
 505:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 2173               		.loc 1 505 0
 2174 0050 1092 0000 		sts overlayer,__zero_reg__
 2175               	.L117:
 507:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       layer_off(THUMBS_DOWN);               // both thumbs needed
 2176               		.loc 1 507 0
 2177 0054 B601      		movw r22,r12
 2178 0056 8D2F      		mov r24,r29
 2179 0058 0E94 0000 		call key_press
 2180               	.LVL263:
 2181 005c 8111      		cpse r24,__zero_reg__
 2182 005e 00C0      		rjmp .L119
 508:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       // opposite thumb down? see left right combination layer table above
 2183               		.loc 1 508 0
 2184 0060 88E0      		ldi r24,lo8(8)
 2185 0062 0E94 0000 		call layer_off
 2186               	.LVL264:
 510:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         layer_on(thumb_up_layer);
 2187               		.loc 1 510 0
 2188 0066 8091 0000 		lds r24,thumb
 2189 006a 90E0      		ldi r25,0
 2190 006c 21E0      		ldi r18,lo8(1)
 2191 006e 30E0      		ldi r19,0
 2192 0070 C130      		cpi r28,lo8(1)
 2193 0072 01F4      		brne .L120
 2194 0074 22E0      		ldi r18,lo8(2)
 2195 0076 30E0      		ldi r19,0
 2196               	.L120:
 510:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         layer_on(thumb_up_layer);
 2197               		.loc 1 510 0 is_stmt 0 discriminator 4
 2198 0078 8223      		and r24,r18
 2199 007a 9323      		and r25,r19
 2200 007c 892B      		or r24,r25
 2201 007e 01F0      		breq .L119
 511:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****         overlayer = thumb_up_layer;
 2202               		.loc 1 511 0 is_stmt 1
 2203 0080 8E2D      		mov r24,r14
 2204 0082 0E94 0000 		call layer_on
 2205               	.LVL265:
 512:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       }
 2206               		.loc 1 512 0
 2207 0086 E092 0000 		sts overlayer,r14
 2208               	.L119:
 515:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     thumb     = thumb & ~side;
 2209               		.loc 1 515 0
 2210 008a 0E94 0000 		call clear_mods
 2211               	.LVL266:
 516:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = 0;
 2212               		.loc 1 516 0
 2213 008e C095      		com r28
 2214               	.LVL267:
 2215 0090 8091 0000 		lds r24,thumb
 2216 0094 C823      		and r28,r24
 2217               	.LVL268:
 2218 0096 C093 0000 		sts thumb,r28
 517:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 2219               		.loc 1 517 0
 2220 009a 1092 0000 		sts key_timer+1,__zero_reg__
 2221 009e 1092 0000 		sts key_timer,__zero_reg__
 2222               		.loc 1 519 0
 2223 00a2 00C0      		rjmp .L114
 2224               		.cfi_endproc
 2225               	.LFE150:
 2227               		.section	.text.lt_shift,"ax",@progbits
 2228               	.global	lt_shift
 2230               	lt_shift:
 2231               	.LFB151:
 520:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 521:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // #ifdef STENO_ENABLE
 522:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // // LT for steno keycode
 523:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // void stn_layer(keyrecord_t *record, uint16_t keycode, uint8_t layer)
 524:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // {
 525:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //   if (record->event.pressed) {
 526:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     key_timer = timer_read();
 527:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     if (keycode) {
 528:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //       process_steno(keycode, record);
 529:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     }
 530:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     layer_on(layer);
 531:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //   }
 532:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //   else {
 533:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     layer_off(layer);
 534:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     if (keycode) {
 535:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //       if (timer_elapsed(key_timer) < TAPPING_TERM) {
 536:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //         process_steno(keycode, record);
 537:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //       }
 538:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //       else {
 539:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //         // clear pressed state (request push of updated) process_steno.c and .h
 540:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //         // steno_clear_state();
 541:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //       }
 542:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     }
 543:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //     key_timer = 0;
 544:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //   }
 545:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // }
 546:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // #endif
 547:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 548:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // LT for S(keycode)
 549:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void lt_shift(keyrecord_t *record, uint16_t keycode, uint8_t layer)
 550:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2232               		.loc 1 550 0
 2233               		.cfi_startproc
 2234               	.LVL269:
 2235 0000 0F93      		push r16
 2236               	.LCFI81:
 2237               		.cfi_def_cfa_offset 3
 2238               		.cfi_offset 16, -2
 2239 0002 1F93      		push r17
 2240               	.LCFI82:
 2241               		.cfi_def_cfa_offset 4
 2242               		.cfi_offset 17, -3
 2243 0004 CF93      		push r28
 2244               	.LCFI83:
 2245               		.cfi_def_cfa_offset 5
 2246               		.cfi_offset 28, -4
 2247               	/* prologue: function */
 2248               	/* frame size = 0 */
 2249               	/* stack size = 3 */
 2250               	.L__stack_usage = 3
 2251 0006 8B01      		movw r16,r22
 2252 0008 C42F      		mov r28,r20
 551:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 2253               		.loc 1 551 0
 2254 000a FC01      		movw r30,r24
 2255 000c 8281      		ldd r24,Z+2
 2256               	.LVL270:
 2257 000e 8823      		tst r24
 2258 0010 01F0      		breq .L130
 552:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = timer_read();
 2259               		.loc 1 552 0
 2260 0012 0E94 0000 		call timer_read
 2261               	.LVL271:
 2262 0016 9093 0000 		sts key_timer+1,r25
 2263 001a 8093 0000 		sts key_timer,r24
 553:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(layer);
 2264               		.loc 1 553 0
 2265 001e 8C2F      		mov r24,r28
 2266               	/* epilogue start */
 554:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 555:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 556:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_off(layer);
 557:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // for shifted keycodes, hence, LT_SHIFT
 558:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_press(SHIFT, keycode);
 559:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     clear_mods();
 560:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = 0;
 561:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 562:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2267               		.loc 1 562 0
 2268 0020 CF91      		pop r28
 2269               	.LVL272:
 2270 0022 1F91      		pop r17
 2271 0024 0F91      		pop r16
 2272               	.LVL273:
 553:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(layer);
 2273               		.loc 1 553 0
 2274 0026 0C94 0000 		jmp layer_on
 2275               	.LVL274:
 2276               	.L130:
 556:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     // for shifted keycodes, hence, LT_SHIFT
 2277               		.loc 1 556 0
 2278 002a 842F      		mov r24,r20
 2279 002c 0E94 0000 		call layer_off
 2280               	.LVL275:
 558:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     clear_mods();
 2281               		.loc 1 558 0
 2282 0030 B801      		movw r22,r16
 2283 0032 81E0      		ldi r24,lo8(1)
 2284 0034 0E94 0000 		call key_press
 2285               	.LVL276:
 559:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     key_timer = 0;
 2286               		.loc 1 559 0
 2287 0038 0E94 0000 		call clear_mods
 2288               	.LVL277:
 560:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 2289               		.loc 1 560 0
 2290 003c 1092 0000 		sts key_timer+1,__zero_reg__
 2291 0040 1092 0000 		sts key_timer,__zero_reg__
 2292               	/* epilogue start */
 2293               		.loc 1 562 0
 2294 0044 CF91      		pop r28
 2295               	.LVL278:
 2296 0046 1F91      		pop r17
 2297 0048 0F91      		pop r16
 2298               	.LVL279:
 2299 004a 0895      		ret
 2300               		.cfi_endproc
 2301               	.LFE151:
 2303               		.section	.text.tap_layer,"ax",@progbits
 2304               	.global	tap_layer
 2306               	tap_layer:
 2307               	.LFB152:
 563:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 564:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // set layer asap to overcome macro latency errors, notably tap dance and LT usage
 565:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // this routine inexplicably (?) sets layer_on() faster than can be done in thumb_layer()
 566:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void tap_layer(keyrecord_t *record, uint8_t layer)
 567:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2308               		.loc 1 567 0
 2309               		.cfi_startproc
 2310               	.LVL280:
 2311               	/* prologue: function */
 2312               	/* frame size = 0 */
 2313               	/* stack size = 0 */
 2314               	.L__stack_usage = 0
 568:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 2315               		.loc 1 568 0
 2316 0000 FC01      		movw r30,r24
 2317 0002 8281      		ldd r24,Z+2
 2318               	.LVL281:
 2319 0004 8823      		tst r24
 2320 0006 01F0      		breq .L132
 569:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(layer);
 2321               		.loc 1 569 0
 2322 0008 862F      		mov r24,r22
 2323 000a 0C94 0000 		jmp layer_on
 2324               	.LVL282:
 2325               	.L132:
 570:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 571:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 572:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_off(layer);
 2326               		.loc 1 572 0
 2327 000e 862F      		mov r24,r22
 2328 0010 0C94 0000 		jmp layer_off
 2329               	.LVL283:
 2330               		.cfi_endproc
 2331               	.LFE152:
 2333               		.section	.text.clear_layers,"ax",@progbits
 2334               	.global	clear_layers
 2336               	clear_layers:
 2337               	.LFB153:
 573:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 574:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 575:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 576:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // ..................................................................... Keymaps
 577:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 578:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // void persistant_default_layer_set(uint16_t default_layer)
 579:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // {
 580:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //   eeconfig_update_default_layer(default_layer);
 581:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** //   default_layer_set            (default_layer);
 582:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // }
 583:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 584:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void clear_layers(void)
 585:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2338               		.loc 1 585 0
 2339               		.cfi_startproc
 2340 0000 CF93      		push r28
 2341               	.LCFI84:
 2342               		.cfi_def_cfa_offset 3
 2343               		.cfi_offset 28, -2
 2344               	/* prologue: function */
 2345               	/* frame size = 0 */
 2346               	/* stack size = 1 */
 2347               	.L__stack_usage = 1
 2348               	.LVL284:
 586:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   uint8_t layer;
 587:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   for (layer = 0; layer < _END_LAYERS; layer++) {
 2349               		.loc 1 587 0
 2350 0002 C0E0      		ldi r28,0
 2351               	.LVL285:
 2352               	.L134:
 588:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_off(layer);
 2353               		.loc 1 588 0 discriminator 3
 2354 0004 8C2F      		mov r24,r28
 2355 0006 0E94 0000 		call layer_off
 2356               	.LVL286:
 587:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_off(layer);
 2357               		.loc 1 587 0 discriminator 3
 2358 000a CF5F      		subi r28,lo8(-(1))
 2359               	.LVL287:
 2360 000c CF30      		cpi r28,lo8(15)
 2361 000e 01F4      		brne .L134
 2362               	/* epilogue start */
 589:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 590:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2363               		.loc 1 590 0
 2364 0010 CF91      		pop r28
 2365               	.LVL288:
 2366 0012 0895      		ret
 2367               		.cfi_endproc
 2368               	.LFE153:
 2370               		.section	.text.clear_tt,"ax",@progbits
 2371               	.global	clear_tt
 2373               	clear_tt:
 2374               	.LFB154:
 591:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 592:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #ifdef CENTER_TT
 593:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint16_t tt_keycode = 0;             // current TT keycode
 594:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 595:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void clear_tt(void)
 596:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2375               		.loc 1 596 0
 2376               		.cfi_startproc
 2377               	/* prologue: function */
 2378               	/* frame size = 0 */
 2379               	/* stack size = 0 */
 2380               	.L__stack_usage = 0
 597:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (tt_keycode == KC_CAPS) {
 2381               		.loc 1 597 0
 2382 0000 8091 0000 		lds r24,tt_keycode
 2383 0004 9091 0000 		lds r25,tt_keycode+1
 2384 0008 C997      		sbiw r24,57
 2385 000a 01F4      		brne .L137
 598:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     tap_key(KC_CAPS);                       // clear capslock
 2386               		.loc 1 598 0
 2387 000c 89E3      		ldi r24,lo8(57)
 2388 000e 90E0      		ldi r25,0
 2389 0010 0E94 0000 		call tap_key
 2390               	.LVL289:
 2391               	.L137:
 599:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 600:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   tt_keycode = 0;
 2392               		.loc 1 600 0
 2393 0014 1092 0000 		sts tt_keycode+1,__zero_reg__
 2394 0018 1092 0000 		sts tt_keycode,__zero_reg__
 601:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   clear_layers();
 2395               		.loc 1 601 0
 2396 001c 0E94 0000 		call clear_layers
 2397               	.LVL290:
 602:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   set_single_persistent_default_layer(_BASE);
 2398               		.loc 1 602 0
 2399 0020 80E0      		ldi r24,0
 2400 0022 0C94 0000 		jmp set_single_persistent_default_layer
 2401               	.LVL291:
 2402               		.cfi_endproc
 2403               	.LFE154:
 2405               		.section	.text.toggle_plover,"ax",@progbits
 2406               	.global	toggle_plover
 2408               	toggle_plover:
 2409               	.LFB155:
 603:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 604:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #endif
 605:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 606:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** // txbolt plover run state
 607:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** static uint8_t plover = 0;
 608:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 609:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void toggle_plover(uint8_t state)
 610:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2410               		.loc 1 610 0
 2411               		.cfi_startproc
 2412               	.LVL292:
 2413 0000 CF93      		push r28
 2414               	.LCFI85:
 2415               		.cfi_def_cfa_offset 3
 2416               		.cfi_offset 28, -2
 2417               	/* prologue: function */
 2418               	/* frame size = 0 */
 2419               	/* stack size = 1 */
 2420               	.L__stack_usage = 1
 2421 0002 C82F      		mov r28,r24
 611:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (plover != state) {
 2422               		.loc 1 611 0
 2423 0004 8091 0000 		lds r24,plover
 2424               	.LVL293:
 2425 0008 8C17      		cp r24,r28
 2426 000a 01F0      		breq .L138
 2427               		.file 3 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h"
   1:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** 
   2:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** // simple window manager specific plover keybind hook
   3:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** 
   4:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** // toggle plover application, see herbstluftwm/config/appbinds
   5:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** register_code  (KC_LGUI);
 2428               		.loc 3 5 0
 2429 000c 83EE      		ldi r24,lo8(-29)
 2430 000e 0E94 0000 		call register_code
 2431               	.LVL294:
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** register_code  (KC_LCTL);
 2432               		.loc 3 6 0
 2433 0012 80EE      		ldi r24,lo8(-32)
 2434 0014 0E94 0000 		call register_code
 2435               	.LVL295:
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** tap_key        (KC_EQL);
 2436               		.loc 3 7 0
 2437 0018 8EE2      		ldi r24,lo8(46)
 2438 001a 90E0      		ldi r25,0
 2439 001c 0E94 0000 		call tap_key
 2440               	.LVL296:
   8:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** unregister_code(KC_LCTL);
 2441               		.loc 3 8 0
 2442 0020 80EE      		ldi r24,lo8(-32)
 2443 0022 0E94 0000 		call unregister_code
 2444               	.LVL297:
   9:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/plover_keybind.h **** unregister_code(KC_LGUI);
 2445               		.loc 3 9 0
 2446 0026 83EE      		ldi r24,lo8(-29)
 2447 0028 0E94 0000 		call unregister_code
 2448               	.LVL298:
 612:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #ifdef PLOVER_KEYBIND
 613:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #include "plover_keybind.h"
 614:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #endif
 615:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     plover = state;
 2449               		.loc 1 615 0
 2450 002c C093 0000 		sts plover,r28
 2451               	.L138:
 2452               	/* epilogue start */
 616:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 617:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2453               		.loc 1 617 0
 2454 0030 CF91      		pop r28
 2455               	.LVL299:
 2456 0032 0895      		ret
 2457               		.cfi_endproc
 2458               	.LFE155:
 2460               		.section	.text.base_layer,"ax",@progbits
 2461               	.global	base_layer
 2463               	base_layer:
 2464               	.LFB156:
 618:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 619:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void base_layer(void)
 620:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2465               		.loc 1 620 0
 2466               		.cfi_startproc
 2467               	/* prologue: function */
 2468               	/* frame size = 0 */
 2469               	/* stack size = 0 */
 2470               	.L__stack_usage = 0
 621:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #ifdef AUDIO_ENABLE
 622:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (plover) {
 623:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     PLAY_SONG(song_plover_gb);
 624:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 625:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   else {
 626:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     PLAY_SONG(song_qwerty);
 627:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 628:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #endif
 629:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   clear_layers();
 2471               		.loc 1 629 0
 2472 0000 0E94 0000 		call clear_layers
 2473               	.LVL300:
 630:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   set_single_persistent_default_layer(_BASE);
 2474               		.loc 1 630 0
 2475 0004 80E0      		ldi r24,0
 2476 0006 0E94 0000 		call set_single_persistent_default_layer
 2477               	.LVL301:
 631:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   toggle_plover(0);
 2478               		.loc 1 631 0
 2479 000a 80E0      		ldi r24,0
 2480 000c 0C94 0000 		jmp toggle_plover
 2481               	.LVL302:
 2482               		.cfi_endproc
 2483               	.LFE156:
 2485               		.section	.text.steno,"ax",@progbits
 2486               	.global	steno
 2488               	steno:
 2489               	.LFB157:
 632:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 633:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 634:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void steno(keyrecord_t *record)
 635:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2490               		.loc 1 635 0
 2491               		.cfi_startproc
 2492               	.LVL303:
 2493               	/* prologue: function */
 2494               	/* frame size = 0 */
 2495               	/* stack size = 0 */
 2496               	.L__stack_usage = 0
 636:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 2497               		.loc 1 636 0
 2498 0000 FC01      		movw r30,r24
 2499 0002 8281      		ldd r24,Z+2
 2500               	.LVL304:
 2501 0004 8823      		tst r24
 2502 0006 01F0      		breq .L141
 637:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #ifdef AUDIO_ENABLE
 638:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     PLAY_SONG(song_plover);
 639:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** #endif
 640:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     clear_layers();
 2503               		.loc 1 640 0
 2504 0008 0E94 0000 		call clear_layers
 2505               	.LVL305:
 641:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     layer_on(_PLOVER);
 2506               		.loc 1 641 0
 2507 000c 84E0      		ldi r24,lo8(4)
 2508 000e 0E94 0000 		call layer_on
 2509               	.LVL306:
 642:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (!eeconfig_is_enabled()) {
 2510               		.loc 1 642 0
 2511 0012 0E94 0000 		call eeconfig_is_enabled
 2512               	.LVL307:
 2513 0016 8111      		cpse r24,__zero_reg__
 2514 0018 00C0      		rjmp .L144
 643:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       eeconfig_init();
 2515               		.loc 1 643 0
 2516 001a 0E94 0000 		call eeconfig_init
 2517               	.LVL308:
 2518               	.L144:
 644:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 645:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     keymap_config.raw  = eeconfig_read_keymap();
 2519               		.loc 1 645 0
 2520 001e 0E94 0000 		call eeconfig_read_keymap
 2521               	.LVL309:
 2522 0022 90E0      		ldi r25,0
 2523 0024 9093 0000 		sts keymap_config+1,r25
 2524 0028 8093 0000 		sts keymap_config,r24
 646:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     keymap_config.nkro = 1;
 2525               		.loc 1 646 0
 2526 002c 8068      		ori r24,lo8(1<<7)
 2527 002e 8093 0000 		sts keymap_config,r24
 647:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     eeconfig_update_keymap(keymap_config.raw);
 2528               		.loc 1 647 0
 2529 0032 0E94 0000 		call eeconfig_update_keymap
 2530               	.LVL310:
 648:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     if (!plover) {
 2531               		.loc 1 648 0
 2532 0036 8091 0000 		lds r24,plover
 2533 003a 8111      		cpse r24,__zero_reg__
 2534 003c 00C0      		rjmp .L141
 649:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****       toggle_plover(1);
 2535               		.loc 1 649 0
 2536 003e 81E0      		ldi r24,lo8(1)
 2537 0040 0C94 0000 		jmp toggle_plover
 2538               	.LVL311:
 2539               	.L141:
 2540               	/* epilogue start */
 650:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     }
 651:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 652:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2541               		.loc 1 652 0
 2542 0044 0895      		ret
 2543               		.cfi_endproc
 2544               	.LFE157:
 2546               		.section	.text.steno_exit,"ax",@progbits
 2547               	.global	steno_exit
 2549               	steno_exit:
 2550               	.LFB158:
 653:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** 
 654:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** void steno_exit(keyrecord_t *record)
 655:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** {
 2551               		.loc 1 655 0
 2552               		.cfi_startproc
 2553               	.LVL312:
 2554               	/* prologue: function */
 2555               	/* frame size = 0 */
 2556               	/* stack size = 0 */
 2557               	.L__stack_usage = 0
 656:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   if (record->event.pressed) {
 2558               		.loc 1 656 0
 2559 0000 FC01      		movw r30,r24
 2560 0002 8281      		ldd r24,Z+2
 2561               	.LVL313:
 2562 0004 8823      		tst r24
 2563 0006 01F0      		breq .L146
 657:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     base_layer();
 2564               		.loc 1 657 0
 2565 0008 0E94 0000 		call base_layer
 2566               	.LVL314:
 658:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****     toggle_plover(0);
 2567               		.loc 1 658 0
 2568 000c 80E0      		ldi r24,0
 2569 000e 0C94 0000 		jmp toggle_plover
 2570               	.LVL315:
 2571               	.L146:
 2572               	/* epilogue start */
 659:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h ****   }
 660:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/keycode_functions.h **** }
 2573               		.loc 1 660 0
 2574 0012 0895      		ret
 2575               		.cfi_endproc
 2576               	.LFE158:
 2578               		.section	.text.process_record_user,"ax",@progbits
 2579               	.global	process_record_user
 2581               	process_record_user:
 2582               	.LFB159:
 2583               		.file 4 "keyboards/splitography/keymaps/hiea/keymap.c"
   1:keyboards/splitography/keymaps/hiea/keymap.c **** // This is the canonical layout file for the Quantum project. If you want to add another keyboard,
   2:keyboards/splitography/keymaps/hiea/keymap.c **** // this is the style you want to emulate.
   3:keyboards/splitography/keymaps/hiea/keymap.c **** //
   4:keyboards/splitography/keymaps/hiea/keymap.c **** // To flash planck firmware
   5:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
   6:keyboards/splitography/keymaps/hiea/keymap.c **** //   Reset keyboard or press hw reset button on base (hole)
   7:keyboards/splitography/keymaps/hiea/keymap.c **** //
   8:keyboards/splitography/keymaps/hiea/keymap.c **** //   cd qmk_firmware/keyboards/planck
   9:keyboards/splitography/keymaps/hiea/keymap.c **** //   sudo make KEYMAP=sdothum dfu
  10:keyboards/splitography/keymaps/hiea/keymap.c **** //
  11:keyboards/splitography/keymaps/hiea/keymap.c **** //   sudo make clean          (good practice before flashing)
  12:keyboards/splitography/keymaps/hiea/keymap.c **** //   sudo make KEYMAP=sdothum (to compile check)
  13:keyboards/splitography/keymaps/hiea/keymap.c **** //
  14:keyboards/splitography/keymaps/hiea/keymap.c **** // Package requirements (for arch linux)
  15:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
  16:keyboards/splitography/keymaps/hiea/keymap.c **** //   avr-gcc-atmel
  17:keyboards/splitography/keymaps/hiea/keymap.c **** //   avr-libc-atmel
  18:keyboards/splitography/keymaps/hiea/keymap.c **** //   dfu-programmer
  19:keyboards/splitography/keymaps/hiea/keymap.c **** //
  20:keyboards/splitography/keymaps/hiea/keymap.c **** // Notes
  21:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔▔
  22:keyboards/splitography/keymaps/hiea/keymap.c **** //   ** E R G O   W I D E   S P L I T ** Layout
  23:keyboards/splitography/keymaps/hiea/keymap.c **** //
  24:keyboards/splitography/keymaps/hiea/keymap.c **** //   Autocompletion tap dance key pairs (),[],{} are available from the
  25:keyboards/splitography/keymaps/hiea/keymap.c **** //   number/symbol layer, as well as, numerous (un)shift key values
  26:keyboards/splitography/keymaps/hiea/keymap.c **** //
  27:keyboards/splitography/keymaps/hiea/keymap.c **** //   The navigation pad provides a single hand right thumb activated cluster
  28:keyboards/splitography/keymaps/hiea/keymap.c **** //   with left hand modifiers
  29:keyboards/splitography/keymaps/hiea/keymap.c **** //
  30:keyboards/splitography/keymaps/hiea/keymap.c **** //   #define PRIVATE_STRING includes private_string.h, a user defined code
  31:keyboards/splitography/keymaps/hiea/keymap.c **** //   block for the PRIV tap dance e.g. SEND_STRING("secret messape"),
  32:keyboards/splitography/keymaps/hiea/keymap.c **** //   see function private()
  33:keyboards/splitography/keymaps/hiea/keymap.c **** //
  34:keyboards/splitography/keymaps/hiea/keymap.c **** // Modifier clusters
  35:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔▔
  36:keyboards/splitography/keymaps/hiea/keymap.c **** //   The num and sym keys together access the navigation pad layer
  37:keyboards/splitography/keymaps/hiea/keymap.c **** //
  38:keyboards/splitography/keymaps/hiea/keymap.c **** //   ,-----------------------------------------------------------------------------------.
  39:keyboards/splitography/keymaps/hiea/keymap.c **** //   | Ctrl |  GUI |  Alt |  Esc | Space|  Tab | Bksp |  Ent | Left | Down |  Up  | Right|
  40:keyboards/splitography/keymaps/hiea/keymap.c **** //   `-----------------------------------------------------------------------------------'
  41:keyboards/splitography/keymaps/hiea/keymap.c **** //
  42:keyboards/splitography/keymaps/hiea/keymap.c **** // Hint
  43:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔
  44:keyboards/splitography/keymaps/hiea/keymap.c **** //   For sculpted keycaps such as Cherry or OEM profile, reverse the Alt, Num,
  45:keyboards/splitography/keymaps/hiea/keymap.c **** //   Shift, Shift, Nav, Sym keycaps for more ergonomic thumb orientation and
  46:keyboards/splitography/keymaps/hiea/keymap.c **** //   actuation
  47:keyboards/splitography/keymaps/hiea/keymap.c **** //
  48:keyboards/splitography/keymaps/hiea/keymap.c **** // Code
  49:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔
  50:keyboards/splitography/keymaps/hiea/keymap.c **** //   This source is shamelessly based on the "default" planck layout
  51:keyboards/splitography/keymaps/hiea/keymap.c **** //
  52:keyboards/splitography/keymaps/hiea/keymap.c **** //   #ifdef/#endif block structures are not indented, as syntax highlighting
  53:keyboards/splitography/keymaps/hiea/keymap.c **** //   in vim is sufficient for identification
  54:keyboards/splitography/keymaps/hiea/keymap.c **** //
  55:keyboards/splitography/keymaps/hiea/keymap.c **** //   c++ commenting style is used throughout
  56:keyboards/splitography/keymaps/hiea/keymap.c **** //
  57:keyboards/splitography/keymaps/hiea/keymap.c **** // Change history
  58:keyboards/splitography/keymaps/hiea/keymap.c **** // ▔▔▔▔▔▔▔▔▔▔▔▔▔▔
  59:keyboards/splitography/keymaps/hiea/keymap.c **** //   See http://thedarnedestthing.com/planck%20constant
  60:keyboards/splitography/keymaps/hiea/keymap.c **** //   See http://thedarnedestthing.com/planck%20done
  61:keyboards/splitography/keymaps/hiea/keymap.c **** 
  62:keyboards/splitography/keymaps/hiea/keymap.c **** 
  63:keyboards/splitography/keymaps/hiea/keymap.c **** 
  64:keyboards/splitography/keymaps/hiea/keymap.c **** //                === N O T E ===
  65:keyboards/splitography/keymaps/hiea/keymap.c **** //
  66:keyboards/splitography/keymaps/hiea/keymap.c **** // sudo CPATH=<keymap.c directory>/common make ...
  67:keyboards/splitography/keymaps/hiea/keymap.c **** 
  68:keyboards/splitography/keymaps/hiea/keymap.c **** 
  69:keyboards/splitography/keymaps/hiea/keymap.c **** #include "config.h"
  70:keyboards/splitography/keymaps/hiea/keymap.c **** #include "splitography.h"
  71:keyboards/splitography/keymaps/hiea/keymap.c **** #include "action_layer.h"
  72:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef STENO_ENABLE
  73:keyboards/splitography/keymaps/hiea/keymap.c **** #include "keymap_steno.h"
  74:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
  75:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef AUDIO_ENABLE
  76:keyboards/splitography/keymaps/hiea/keymap.c **** #include "audio.h"
  77:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
  78:keyboards/splitography/keymaps/hiea/keymap.c **** #include "eeconfig.h"
  79:keyboards/splitography/keymaps/hiea/keymap.c **** 
  80:keyboards/splitography/keymaps/hiea/keymap.c **** extern keymap_config_t keymap_config;
  81:keyboards/splitography/keymaps/hiea/keymap.c **** 
  82:keyboards/splitography/keymaps/hiea/keymap.c **** enum planck_layers {
  83:keyboards/splitography/keymaps/hiea/keymap.c ****   _BASE = 0
  84:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_SHIFT
  85:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_LSHIFT
  86:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_RSHIFT
  87:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_PLOVER
  88:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_NUMBER
  89:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_SYMBOL
  90:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_FNCKEY
  91:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_MOUSE
  92:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
  93:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_TTNUMBER
  94:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_TTREGEX
  95:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_TTFNCKEY
  96:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_TTCURSOR
  97:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_TTMOUSE
  98:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
  99:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_EDIT
 100:keyboards/splitography/keymaps/hiea/keymap.c ****  ,_END_LAYERS
 101:keyboards/splitography/keymaps/hiea/keymap.c **** };
 102:keyboards/splitography/keymaps/hiea/keymap.c **** 
 103:keyboards/splitography/keymaps/hiea/keymap.c **** enum planck_keycodes {
 104:keyboards/splitography/keymaps/hiea/keymap.c ****   BASE = SAFE_RANGE
 105:keyboards/splitography/keymaps/hiea/keymap.c ****  ,BASE1
 106:keyboards/splitography/keymaps/hiea/keymap.c ****  ,BASE2
 107:keyboards/splitography/keymaps/hiea/keymap.c ****  ,PLOVER
 108:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SM_CIRC   // pseudo GUI_T(S(KC_6))                      for shifted key-codes, see process_record
 109:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SM_DLR    // pseudo SFT_T(S(KC_4))                      for shifted key-codes, see process_record
 110:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SM_G      // pseudo MT   (MOD_LALT | MOD_LSFT, S(KC_G)) for shifted key-codes, see process_record
 111:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SM_H      // pseudo MT   (MOD_LGUI | MOD_LSFT, S(KC_H)) for shifted key-codes, see process_record
 112:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SM_PERC   // pseudo ALT_T(S(KC_5))                      for shifted key-codes, see process_record
 113:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SM_W      // pseudo MT   (MOD_LGUI | MOD_LSFT, S(KC_W)) for shifted key-codes, see process_record
 114:keyboards/splitography/keymaps/hiea/keymap.c ****  ,SL_DEL    // pseudo LT   (_MOUSE, S(KC_DEL))            for shifted key-codes, see process_record
 115:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
 116:keyboards/splitography/keymaps/hiea/keymap.c ****  ,TT_ESC
 117:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 118:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef STENO_ENABLE
 119:keyboards/splitography/keymaps/hiea/keymap.c ****  ,PS_STNA = STN_A
 120:keyboards/splitography/keymaps/hiea/keymap.c ****  ,PS_STNO = STN_O
 121:keyboards/splitography/keymaps/hiea/keymap.c ****  ,PS_STNE = STN_E
 122:keyboards/splitography/keymaps/hiea/keymap.c ****  ,PS_STNU = STN_U
 123:keyboards/splitography/keymaps/hiea/keymap.c **** #else
 124:keyboards/splitography/keymaps/hiea/keymap.c ****  ,LT_C    = LT (_NUMBER, KC_C)
 125:keyboards/splitography/keymaps/hiea/keymap.c ****  ,LT_V    = LT (_FNCKEY, KC_V)
 126:keyboards/splitography/keymaps/hiea/keymap.c ****  ,LT_N    = LT (_EDIT,   KC_N)
 127:keyboards/splitography/keymaps/hiea/keymap.c ****  ,LT_M    = LT (_SYMBOL, KC_M)
 128:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 129:keyboards/splitography/keymaps/hiea/keymap.c ****  ,PS_BASE
 130:keyboards/splitography/keymaps/hiea/keymap.c **** };
 131:keyboards/splitography/keymaps/hiea/keymap.c **** 
 132:keyboards/splitography/keymaps/hiea/keymap.c **** // modifier keys
 133:keyboards/splitography/keymaps/hiea/keymap.c **** #define AT_B    ALT_T(KC_B)
 134:keyboards/splitography/keymaps/hiea/keymap.c **** #define GT_C    CTL_T(KC_C)
 135:keyboards/splitography/keymaps/hiea/keymap.c **** #define MT_E    MT   (MOD_LCTL | MOD_LALT, KC_E)
 136:keyboards/splitography/keymaps/hiea/keymap.c **** #define ST_A    SFT_T(KC_A)
 137:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef HOME_MODS
 138:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_H  GUI_T(KC_H)
 139:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_I  CTL_T(KC_I)
 140:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_E  ALT_T(KC_E)
 141:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_A  SFT_T(KC_A)
 142:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_T  SFT_T(KC_T)
 143:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_R  ALT_T(KC_R)
 144:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_S  CTL_T(KC_S)
 145:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_W  GUI_T(KC_W)
 146:keyboards/splitography/keymaps/hiea/keymap.c **** #else
 147:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_H  KC_H
 148:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_I  KC_I
 149:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_E  KC_E
 150:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_A  KC_A
 151:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_T  KC_T
 152:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_R  KC_R
 153:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_S  KC_S
 154:keyboards/splitography/keymaps/hiea/keymap.c **** #define HOME_W  KC_W
 155:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 156:keyboards/splitography/keymaps/hiea/keymap.c **** 
 157:keyboards/splitography/keymaps/hiea/keymap.c **** #define S_DOWN  S    (KC_DOWN)
 158:keyboards/splitography/keymaps/hiea/keymap.c **** #define S_TAB   S    (KC_TAB)
 159:keyboards/splitography/keymaps/hiea/keymap.c **** 
 160:keyboards/splitography/keymaps/hiea/keymap.c **** #include "tapdance.h"
 161:keyboards/splitography/keymaps/hiea/keymap.c **** 
 162:keyboards/splitography/keymaps/hiea/keymap.c **** // keycodes
 163:keyboards/splitography/keymaps/hiea/keymap.c **** #define ___x___ KC_TRNS
 164:keyboards/splitography/keymaps/hiea/keymap.c **** #define ___fn__ KC_TRNS
 165:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef _______
 166:keyboards/splitography/keymaps/hiea/keymap.c **** #undef _______
 167:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 168:keyboards/splitography/keymaps/hiea/keymap.c **** #define _______ KC_NO
 169:keyboards/splitography/keymaps/hiea/keymap.c **** 
 170:keyboards/splitography/keymaps/hiea/keymap.c **** #define COPY    LCTL(KC_C)
 171:keyboards/splitography/keymaps/hiea/keymap.c **** #define CUT     LCTL(KC_X)
 172:keyboards/splitography/keymaps/hiea/keymap.c **** #define EOT     LCTL(KC_D)
 173:keyboards/splitography/keymaps/hiea/keymap.c **** #define NAK     LCTL(KC_U)
 174:keyboards/splitography/keymaps/hiea/keymap.c **** #define PASTE   LCTL(KC_V)
 175:keyboards/splitography/keymaps/hiea/keymap.c **** #define UNDO    LCTL(KC_Z)
 176:keyboards/splitography/keymaps/hiea/keymap.c **** #define TMCOPY  LALT(LCTL(KC_C))
 177:keyboards/splitography/keymaps/hiea/keymap.c **** #define TMPASTE LALT(LCTL(KC_V))
 178:keyboards/splitography/keymaps/hiea/keymap.c **** #define LT_BSLS LT  (_MOUSE,  KC_BSLS)      // see process_record_user() for extended handling
 179:keyboards/splitography/keymaps/hiea/keymap.c **** #define LT_BSPC LT  (_SYMBOL, KC_BSPC)      // see process_record_user() for extended handling
 180:keyboards/splitography/keymaps/hiea/keymap.c **** #define LT_ESC  LT  (_NUMBER, KC_ESC)
 181:keyboards/splitography/keymaps/hiea/keymap.c **** #define ADJUST  MO  (_EDIT)
 182:keyboards/splitography/keymaps/hiea/keymap.c **** #define OS_ALT  OSM (MOD_LALT)
 183:keyboards/splitography/keymaps/hiea/keymap.c **** #define OS_CTL  OSM (MOD_LCTL)
 184:keyboards/splitography/keymaps/hiea/keymap.c **** #define OS_GUI  OSM (MOD_LGUI)
 185:keyboards/splitography/keymaps/hiea/keymap.c **** #define OS_SFT  OSM (MOD_LSFT)
 186:keyboards/splitography/keymaps/hiea/keymap.c **** 
 187:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
 188:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_TL TT  (_TTFNCKEY)
 189:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_TR     KC_CAPS
 190:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_HL TT  (_TTCURSOR)
 191:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_HR TT  (_TTMOUSE)
 192:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_BL TT  (_TTNUMBER)
 193:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_BR TT  (_TTREGEX)
 194:keyboards/splitography/keymaps/hiea/keymap.c **** #else
 195:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_TL OSM (MOD_LALT | MOD_LCTL)
 196:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_TR OSM (MOD_LGUI | MOD_LCTL)
 197:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_HL OSM (MOD_LALT | MOD_LSFT)
 198:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_HR OSM (MOD_LGUI | MOD_LSFT)
 199:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_BL TD(_CAPS)
 200:keyboards/splitography/keymaps/hiea/keymap.c **** #define CNTR_BR OSM (MOD_LSFT | MOD_LCTL)
 201:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 202:keyboards/splitography/keymaps/hiea/keymap.c **** 
 203:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef THUMB_0
 204:keyboards/splitography/keymaps/hiea/keymap.c **** #define LT_EQL  LT  (_EDIT, KC_EQL)
 205:keyboards/splitography/keymaps/hiea/keymap.c **** #else
 206:keyboards/splitography/keymaps/hiea/keymap.c **** #define LT_0    LT  (_EDIT, KC_0)
 207:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 208:keyboards/splitography/keymaps/hiea/keymap.c **** 
 209:keyboards/splitography/keymaps/hiea/keymap.c **** // ........................................................ Default Alpha Layout
 210:keyboards/splitography/keymaps/hiea/keymap.c **** 
 211:keyboards/splitography/keymaps/hiea/keymap.c **** const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
 212:keyboards/splitography/keymaps/hiea/keymap.c **** 
 213:keyboards/splitography/keymaps/hiea/keymap.c **** #include "base_layout.h"
 214:keyboards/splitography/keymaps/hiea/keymap.c **** #include "steno_layout.h"
 215:keyboards/splitography/keymaps/hiea/keymap.c **** 
 216:keyboards/splitography/keymaps/hiea/keymap.c **** // ...................................................... Number / Function Keys
 217:keyboards/splitography/keymaps/hiea/keymap.c **** 
 218:keyboards/splitography/keymaps/hiea/keymap.c **** #include "number_fkey_layout.h"
 219:keyboards/splitography/keymaps/hiea/keymap.c **** 
 220:keyboards/splitography/keymaps/hiea/keymap.c **** // ......................................................... Symbol / Navigation
 221:keyboards/splitography/keymaps/hiea/keymap.c **** 
 222:keyboards/splitography/keymaps/hiea/keymap.c **** #include "symbol_guifn_layout.h"
 223:keyboards/splitography/keymaps/hiea/keymap.c **** 
 224:keyboards/splitography/keymaps/hiea/keymap.c **** // ............................................................... Toggle Layers
 225:keyboards/splitography/keymaps/hiea/keymap.c **** 
 226:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
 227:keyboards/splitography/keymaps/hiea/keymap.c **** #include "toggle_layout.h"
 228:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 229:keyboards/splitography/keymaps/hiea/keymap.c **** 
 230:keyboards/splitography/keymaps/hiea/keymap.c **** // ......................................................... Short Cuts / Adjust
 231:keyboards/splitography/keymaps/hiea/keymap.c **** 
 232:keyboards/splitography/keymaps/hiea/keymap.c **** #include "chord_layout.h"
 233:keyboards/splitography/keymaps/hiea/keymap.c **** 
 234:keyboards/splitography/keymaps/hiea/keymap.c **** };
 235:keyboards/splitography/keymaps/hiea/keymap.c **** 
 236:keyboards/splitography/keymaps/hiea/keymap.c **** // ...................................................................... Sounds
 237:keyboards/splitography/keymaps/hiea/keymap.c **** 
 238:keyboards/splitography/keymaps/hiea/keymap.c **** #include "sounds.h"
 239:keyboards/splitography/keymaps/hiea/keymap.c **** 
 240:keyboards/splitography/keymaps/hiea/keymap.c **** // ........................................................... User Keycode Trap
 241:keyboards/splitography/keymaps/hiea/keymap.c **** 
 242:keyboards/splitography/keymaps/hiea/keymap.c **** #include "keycode_functions.h"
 243:keyboards/splitography/keymaps/hiea/keymap.c **** 
 244:keyboards/splitography/keymaps/hiea/keymap.c **** #define BASE_1  1
 245:keyboards/splitography/keymaps/hiea/keymap.c **** #define BASE_2  2
 246:keyboards/splitography/keymaps/hiea/keymap.c **** #define BASE_12 3
 247:keyboards/splitography/keymaps/hiea/keymap.c **** static uint8_t base_n = 0;
 248:keyboards/splitography/keymaps/hiea/keymap.c **** 
 249:keyboards/splitography/keymaps/hiea/keymap.c **** bool process_record_user(uint16_t keycode, keyrecord_t *record)
 250:keyboards/splitography/keymaps/hiea/keymap.c **** {
 2584               		.loc 4 250 0
 2585               		.cfi_startproc
 2586               	.LVL316:
 2587 0000 CF92      		push r12
 2588               	.LCFI86:
 2589               		.cfi_def_cfa_offset 3
 2590               		.cfi_offset 12, -2
 2591 0002 DF92      		push r13
 2592               	.LCFI87:
 2593               		.cfi_def_cfa_offset 4
 2594               		.cfi_offset 13, -3
 2595 0004 EF92      		push r14
 2596               	.LCFI88:
 2597               		.cfi_def_cfa_offset 5
 2598               		.cfi_offset 14, -4
 2599 0006 0F93      		push r16
 2600               	.LCFI89:
 2601               		.cfi_def_cfa_offset 6
 2602               		.cfi_offset 16, -5
 2603 0008 CF93      		push r28
 2604               	.LCFI90:
 2605               		.cfi_def_cfa_offset 7
 2606               		.cfi_offset 28, -6
 2607 000a DF93      		push r29
 2608               	.LCFI91:
 2609               		.cfi_def_cfa_offset 8
 2610               		.cfi_offset 29, -7
 2611               	/* prologue: function */
 2612               	/* frame size = 0 */
 2613               	/* stack size = 6 */
 2614               	.L__stack_usage = 6
 2615 000c EC01      		movw r28,r24
 2616 000e 6B01      		movw r12,r22
 251:keyboards/splitography/keymaps/hiea/keymap.c ****   switch (keycode) {
 2617               		.loc 4 251 0
 2618 0010 CE3D      		cpi r28,-34
 2619 0012 8CE5      		ldi r24,92
 2620 0014 D807      		cpc r29,r24
 2621 0016 01F4      		brne .+2
 2622 0018 00C0      		rjmp .L150
 2623               	.LVL317:
 2624 001a 00F0      		brlo .+2
 2625 001c 00C0      		rjmp .L151
 2626 001e C830      		cpi r28,8
 2627 0020 F5E5      		ldi r31,85
 2628 0022 DF07      		cpc r29,r31
 2629 0024 01F4      		brne .+2
 2630 0026 00C0      		rjmp .L152
 2631 0028 00F4      		brsh .L153
 2632 002a CA32      		cpi r28,42
 2633 002c E6E4      		ldi r30,70
 2634 002e DE07      		cpc r29,r30
 2635 0030 01F4      		brne .+2
 2636 0032 00C0      		rjmp .L154
 2637 0034 00F4      		brsh .L155
 2638 0036 C933      		cpi r28,57
 2639 0038 D105      		cpc r29,__zero_reg__
 2640 003a 01F4      		brne .+2
 2641 003c 00C0      		rjmp .L156
 2642 003e C932      		cpi r28,41
 2643 0040 D544      		sbci r29,69
 2644 0042 01F4      		brne .+2
 2645 0044 00C0      		rjmp .L157
 2646               	.LVL318:
 2647               	.L184:
 252:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 253:keyboards/splitography/keymaps/hiea/keymap.c ****       if (record->event.pressed) {
 254:keyboards/splitography/keymaps/hiea/keymap.c ****         base_n = base_n | BASE_1;
 255:keyboards/splitography/keymaps/hiea/keymap.c ****         if (base_n == BASE_12) {
 256:keyboards/splitography/keymaps/hiea/keymap.c ****           base_layer();
 257:keyboards/splitography/keymaps/hiea/keymap.c ****         }
 258:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 259:keyboards/splitography/keymaps/hiea/keymap.c ****       else {
 260:keyboards/splitography/keymaps/hiea/keymap.c ****         base_n = base_n & ~BASE_1;
 261:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 262:keyboards/splitography/keymaps/hiea/keymap.c ****       return false;
 263:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE2:
 264:keyboards/splitography/keymaps/hiea/keymap.c ****       if (record->event.pressed) {
 265:keyboards/splitography/keymaps/hiea/keymap.c ****         base_n = base_n | BASE_2;
 266:keyboards/splitography/keymaps/hiea/keymap.c ****         if (base_n == BASE_12) {
 267:keyboards/splitography/keymaps/hiea/keymap.c ****           base_layer();
 268:keyboards/splitography/keymaps/hiea/keymap.c ****         }
 269:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 270:keyboards/splitography/keymaps/hiea/keymap.c ****       else {
 271:keyboards/splitography/keymaps/hiea/keymap.c ****         base_n = base_n & ~BASE_2;
 272:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 273:keyboards/splitography/keymaps/hiea/keymap.c ****       return false;
 274:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef HOME_MODS
 275:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_E:
 276:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_R:
 277:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 278:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LALT);
 279:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 280:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef HOME_MODS
 281:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_H:
 282:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_W:
 283:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 284:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LGUI);
 285:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 286:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef HOME_MODS
 287:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_I:
 288:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_S:
 289:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 290:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LCTL);
 291:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 292:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef HOME_MODS
 293:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_A:
 294:keyboards/splitography/keymaps/hiea/keymap.c ****     case HOME_T:
 295:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LSFT);
 296:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 297:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 298:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
 299:keyboards/splitography/keymaps/hiea/keymap.c ****     case TT_ESC:
 300:keyboards/splitography/keymaps/hiea/keymap.c ****       clear_tt();                           // exit TT layer
 301:keyboards/splitography/keymaps/hiea/keymap.c ****       return false;
 302:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 303:keyboards/splitography/keymaps/hiea/keymap.c ****     case LT_ESC:
 304:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
 305:keyboards/splitography/keymaps/hiea/keymap.c ****       if (tt_keycode != 0) {
 306:keyboards/splitography/keymaps/hiea/keymap.c ****         clear_tt();                         // exit TT layer
 307:keyboards/splitography/keymaps/hiea/keymap.c ****         return false;
 308:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 309:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 310:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_layer(record, _NUMBER);
 311:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 312:keyboards/splitography/keymaps/hiea/keymap.c ****     case OS_ALT:
 313:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LALT);
 314:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 315:keyboards/splitography/keymaps/hiea/keymap.c ****     case OS_CTL:
 316:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LCTL);
 317:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 318:keyboards/splitography/keymaps/hiea/keymap.c ****     case OS_GUI:
 319:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_mods(record, KC_LGUI);
 320:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 321:keyboards/splitography/keymaps/hiea/keymap.c ****     case SM_CIRC:
 322:keyboards/splitography/keymaps/hiea/keymap.c ****       // GUI_T(S(KC_6))
 323:keyboards/splitography/keymaps/hiea/keymap.c ****       mt_shift(record, KC_LGUI, 0, KC_6);
 324:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 325:keyboards/splitography/keymaps/hiea/keymap.c ****     case SM_DLR:
 326:keyboards/splitography/keymaps/hiea/keymap.c ****       // SFT_T(S(KC_4))
 327:keyboards/splitography/keymaps/hiea/keymap.c ****       mt_shift(record, KC_LSFT, 0, KC_4);
 328:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 329:keyboards/splitography/keymaps/hiea/keymap.c ****     case SM_G:
 330:keyboards/splitography/keymaps/hiea/keymap.c ****       // MT(MOD_LALT | MOD_LSFT, S(KC_G))
 331:keyboards/splitography/keymaps/hiea/keymap.c ****       mt_shift(record, KC_LALT, KC_LSFT, KC_G);
 332:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 333:keyboards/splitography/keymaps/hiea/keymap.c ****     case SM_H:
 334:keyboards/splitography/keymaps/hiea/keymap.c ****       // MT(MOD_LGUI | MOD_LSFT, S(KC_K))
 335:keyboards/splitography/keymaps/hiea/keymap.c ****       mt_shift(record, KC_LGUI, KC_LSFT, KC_H);
 336:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 337:keyboards/splitography/keymaps/hiea/keymap.c ****     case SM_W:
 338:keyboards/splitography/keymaps/hiea/keymap.c ****       // MT(MOD_LGUI | MOD_LSFT, S(KC_W))
 339:keyboards/splitography/keymaps/hiea/keymap.c ****       mt_shift(record, KC_LGUI, KC_LSFT, KC_W);
 340:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 341:keyboards/splitography/keymaps/hiea/keymap.c ****     case SM_PERC:
 342:keyboards/splitography/keymaps/hiea/keymap.c ****       // ALT_T(S(KC_5))
 343:keyboards/splitography/keymaps/hiea/keymap.c ****       mt_shift(record, KC_LALT, 0, KC_5);
 344:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 345:keyboards/splitography/keymaps/hiea/keymap.c ****     case TD_ENT:
 346:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_layer(record, _RSHIFT);
 347:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_RSHIFT, KC_ENT) emulation, see tap dance enter
 348:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 349:keyboards/splitography/keymaps/hiea/keymap.c ****     case LT_BSLS:
 350:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_layer(record, _MOUSE);
 351:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_MOUSE, KC_BSLS) left right combination layer, see #define LT_BSLS
 352:keyboards/splitography/keymaps/hiea/keymap.c ****       thumb_layer(record, LEFT, 0, 0, _MOUSE, _SYMBOL);
 353:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 354:keyboards/splitography/keymaps/hiea/keymap.c ****     case LT_BSPC:
 355:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_layer(record, _SYMBOL);
 356:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_SYMBOL, KC_LEFT) left right combination layer
 357:keyboards/splitography/keymaps/hiea/keymap.c ****       thumb_layer(record, RIGHT, 0, 0, _SYMBOL, _LSHIFT);
 358:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 359:keyboards/splitography/keymaps/hiea/keymap.c ****     case SL_DEL:
 360:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_layer(record, _MOUSE);
 361:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_MOUSE, S(KC_DEL)) left right combination layer
 362:keyboards/splitography/keymaps/hiea/keymap.c ****       thumb_layer(record, RIGHT, NOSHIFT, KC_DEL, _MOUSE, _LSHIFT);
 363:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 364:keyboards/splitography/keymaps/hiea/keymap.c ****     case TD_SPC:
 365:keyboards/splitography/keymaps/hiea/keymap.c ****       tap_layer(record, _LSHIFT);
 366:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_LSHIFT, KC_SPC) left right combination layer, see tap dance TD_SPC
 367:keyboards/splitography/keymaps/hiea/keymap.c ****       thumb_layer(record, LEFT, 0, 0, _LSHIFT, _SYMBOL);
 368:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 369:keyboards/splitography/keymaps/hiea/keymap.c **** #ifdef CENTER_TT
 370:keyboards/splitography/keymaps/hiea/keymap.c ****     case CNTR_TL:
 371:keyboards/splitography/keymaps/hiea/keymap.c ****     case CNTR_TR:
 372:keyboards/splitography/keymaps/hiea/keymap.c ****     case CNTR_HL:
 373:keyboards/splitography/keymaps/hiea/keymap.c ****     case CNTR_HR:
 374:keyboards/splitography/keymaps/hiea/keymap.c ****     case CNTR_BL:
 375:keyboards/splitography/keymaps/hiea/keymap.c ****     case CNTR_BR:
 376:keyboards/splitography/keymaps/hiea/keymap.c ****       if (tt_keycode != keycode && tt_keycode != 0) {
 377:keyboards/splitography/keymaps/hiea/keymap.c ****         clear_tt();                         // return to base layer first if different TT layer sel
 378:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 379:keyboards/splitography/keymaps/hiea/keymap.c ****       tt_keycode = keycode;
 380:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 381:keyboards/splitography/keymaps/hiea/keymap.c **** #endif
 382:keyboards/splitography/keymaps/hiea/keymap.c **** // #ifdef STENO_ENABLE
 383:keyboards/splitography/keymaps/hiea/keymap.c **** //     case PS_STNA:
 384:keyboards/splitography/keymaps/hiea/keymap.c **** //       stn_layer(record, STN_A, _NUMBER);
 385:keyboards/splitography/keymaps/hiea/keymap.c **** //       break;
 386:keyboards/splitography/keymaps/hiea/keymap.c **** //     case PS_STNO:
 387:keyboards/splitography/keymaps/hiea/keymap.c **** //       stn_layer(record, STN_O, _FNCKEY);
 388:keyboards/splitography/keymaps/hiea/keymap.c **** //       break;
 389:keyboards/splitography/keymaps/hiea/keymap.c **** //     case PS_STNE:
 390:keyboards/splitography/keymaps/hiea/keymap.c **** //       stn_layer(record, STN_E, _EDIT);
 391:keyboards/splitography/keymaps/hiea/keymap.c **** //       break;
 392:keyboards/splitography/keymaps/hiea/keymap.c **** //     case PS_STNU:
 393:keyboards/splitography/keymaps/hiea/keymap.c **** //       stn_layer(record, STN_U, _SYMBOL);
 394:keyboards/splitography/keymaps/hiea/keymap.c **** //       break;
 395:keyboards/splitography/keymaps/hiea/keymap.c **** // #endif
 396:keyboards/splitography/keymaps/hiea/keymap.c ****     case PLOVER:
 397:keyboards/splitography/keymaps/hiea/keymap.c ****       steno(record);
 398:keyboards/splitography/keymaps/hiea/keymap.c ****       return false;
 399:keyboards/splitography/keymaps/hiea/keymap.c ****   }
 400:keyboards/splitography/keymaps/hiea/keymap.c ****   return true;
 2648               		.loc 4 400 0
 2649 0046 81E0      		ldi r24,lo8(1)
 2650 0048 00C0      		rjmp .L148
 2651               	.L155:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****   switch (keycode) {
 2652               		.loc 4 251 0
 2653 004a C130      		cpi r28,1
 2654 004c E5E5      		ldi r30,85
 2655 004e DE07      		cpc r29,r30
 2656 0050 01F4      		brne .+2
 2657 0052 00C0      		rjmp .L158
 2658 0054 C430      		cpi r28,4
 2659 0056 F5E5      		ldi r31,85
 2660 0058 DF07      		cpc r29,r31
 2661 005a 01F4      		brne .+2
 2662 005c 00C0      		rjmp .L159
 2663 005e C133      		cpi r28,49
 2664 0060 D844      		sbci r29,72
 2665 0062 01F4      		brne .L184
 350:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_MOUSE, KC_BSLS) left right combination layer, see #define LT_BSLS
 2666               		.loc 4 350 0
 2667 0064 68E0      		ldi r22,lo8(8)
 2668 0066 C601      		movw r24,r12
 2669 0068 0E94 0000 		call tap_layer
 2670               	.LVL319:
 352:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2671               		.loc 4 352 0
 2672 006c 36E0      		ldi r19,lo8(6)
 2673 006e E32E      		mov r14,r19
 2674 0070 08E0      		ldi r16,lo8(8)
 2675               	.L240:
 367:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2676               		.loc 4 367 0
 2677 0072 30E0      		ldi r19,0
 2678 0074 20E0      		ldi r18,0
 2679 0076 40E0      		ldi r20,0
 2680 0078 61E0      		ldi r22,lo8(1)
 2681 007a 00C0      		rjmp .L235
 2682               	.L153:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 2683               		.loc 4 251 0
 2684 007c CE30      		cpi r28,14
 2685 007e E8E5      		ldi r30,88
 2686 0080 DE07      		cpc r29,r30
 2687 0082 00F4      		brsh .L161
 2688 0084 C930      		cpi r28,9
 2689 0086 F8E5      		ldi r31,88
 2690 0088 DF07      		cpc r29,r31
 2691 008a 00F0      		brlo .+2
 2692 008c 00C0      		rjmp .L156
 2693 008e C530      		cpi r28,5
 2694 0090 87E5      		ldi r24,87
 2695 0092 D807      		cpc r29,r24
 2696 0094 01F4      		brne .+2
 2697 0096 00C0      		rjmp .L162
 2698 0098 C431      		cpi r28,20
 2699 009a D745      		sbci r29,87
 2700 009c 01F4      		brne .L184
 365:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_LSHIFT, KC_SPC) left right combination layer, see tap dance TD_SPC
 2701               		.loc 4 365 0
 2702 009e 62E0      		ldi r22,lo8(2)
 2703 00a0 C601      		movw r24,r12
 2704 00a2 0E94 0000 		call tap_layer
 2705               	.LVL320:
 367:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2706               		.loc 4 367 0
 2707 00a6 86E0      		ldi r24,lo8(6)
 2708 00a8 E82E      		mov r14,r24
 2709 00aa 02E0      		ldi r16,lo8(2)
 2710 00ac 00C0      		rjmp .L240
 2711               	.L161:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 2712               		.loc 4 251 0
 2713 00ae CC3D      		cpi r28,-36
 2714 00b0 FCE5      		ldi r31,92
 2715 00b2 DF07      		cpc r29,r31
 2716 00b4 01F4      		brne .+2
 2717 00b6 00C0      		rjmp .L164
 2718 00b8 00F0      		brlo .+2
 2719 00ba 00C0      		rjmp .L165
 2720 00bc CB3D      		cpi r28,-37
 2721 00be DC45      		sbci r29,92
 2722 00c0 01F4      		brne .L184
 253:keyboards/splitography/keymaps/hiea/keymap.c ****         base_n = base_n | BASE_1;
 2723               		.loc 4 253 0
 2724 00c2 FB01      		movw r30,r22
 2725 00c4 8281      		ldd r24,Z+2
 2726 00c6 9091 0000 		lds r25,base_n
 2727 00ca 8823      		tst r24
 2728 00cc 01F4      		brne .+2
 2729 00ce 00C0      		rjmp .L178
 254:keyboards/splitography/keymaps/hiea/keymap.c ****         if (base_n == BASE_12) {
 2730               		.loc 4 254 0
 2731 00d0 9160      		ori r25,lo8(1)
 2732               	.L231:
 2733 00d2 9093 0000 		sts base_n,r25
 255:keyboards/splitography/keymaps/hiea/keymap.c ****           base_layer();
 2734               		.loc 4 255 0
 2735 00d6 9330      		cpi r25,lo8(3)
 2736 00d8 01F4      		brne .+2
 2737 00da 00C0      		rjmp .L179
 2738               	.L232:
 398:keyboards/splitography/keymaps/hiea/keymap.c ****   }
 2739               		.loc 4 398 0
 2740 00dc 80E0      		ldi r24,0
 2741 00de 00C0      		rjmp .L148
 2742               	.L151:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 2743               		.loc 4 251 0
 2744 00e0 CC30      		cpi r28,12
 2745 00e2 F1E6      		ldi r31,97
 2746 00e4 DF07      		cpc r29,r31
 2747 00e6 01F0      		breq .L158
 2748 00e8 00F4      		brsh .L167
 2749 00ea C23E      		cpi r28,-30
 2750 00ec ECE5      		ldi r30,92
 2751 00ee DE07      		cpc r29,r30
 2752 00f0 01F4      		brne .+2
 2753 00f2 00C0      		rjmp .L168
 2754 00f4 00F4      		brsh .L169
 2755 00f6 C03E      		cpi r28,-32
 2756 00f8 8CE5      		ldi r24,92
 2757 00fa D807      		cpc r29,r24
 2758 00fc 01F4      		brne .+2
 2759 00fe 00C0      		rjmp .L170
 2760 0100 00F4      		brsh .+2
 2761 0102 00C0      		rjmp .L230
 335:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2762               		.loc 4 335 0
 2763 0104 2BE0      		ldi r18,lo8(11)
 2764 0106 30E0      		ldi r19,0
 2765               	.L242:
 2766 0108 41EE      		ldi r20,lo8(-31)
 2767 010a 50E0      		ldi r21,0
 2768 010c 00C0      		rjmp .L241
 2769               	.L169:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 2770               		.loc 4 251 0
 2771 010e C43E      		cpi r28,-28
 2772 0110 FCE5      		ldi r31,92
 2773 0112 DF07      		cpc r29,r31
 2774 0114 01F4      		brne .+2
 2775 0116 00C0      		rjmp .L173
 2776 0118 00F4      		brsh .+2
 2777 011a 00C0      		rjmp .L174
 2778 011c C53E      		cpi r28,-27
 2779 011e DC45      		sbci r29,92
 2780 0120 01F0      		breq .+2
 2781 0122 00C0      		rjmp .L184
 2782               	.L234:
 306:keyboards/splitography/keymaps/hiea/keymap.c ****         return false;
 2783               		.loc 4 306 0
 2784 0124 0E94 0000 		call clear_tt
 2785               	.LVL321:
 2786 0128 00C0      		rjmp .L232
 2787               	.L167:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 2788               		.loc 4 251 0
 2789 012a C830      		cpi r28,8
 2790 012c F4E6      		ldi r31,100
 2791 012e DF07      		cpc r29,r31
 2792 0130 01F0      		breq .L159
 2793 0132 00F4      		brsh .L176
 2794 0134 C430      		cpi r28,4
 2795 0136 E2E6      		ldi r30,98
 2796 0138 DE07      		cpc r29,r30
 2797 013a 01F0      		breq .L177
 2798 013c C731      		cpi r28,23
 2799 013e F2E6      		ldi r31,98
 2800 0140 DF07      		cpc r29,r31
 2801 0142 01F0      		breq .L177
 2802 0144 C631      		cpi r28,22
 2803 0146 D146      		sbci r29,97
 2804 0148 01F0      		breq .+2
 2805 014a 00C0      		rjmp .L184
 2806               	.L158:
 290:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2807               		.loc 4 290 0
 2808 014c 60EE      		ldi r22,lo8(-32)
 2809 014e 70E0      		ldi r23,0
 2810 0150 00C0      		rjmp .L236
 2811               	.L176:
 251:keyboards/splitography/keymaps/hiea/keymap.c ****     case BASE1:
 2812               		.loc 4 251 0
 2813 0152 CB30      		cpi r28,11
 2814 0154 E8E6      		ldi r30,104
 2815 0156 DE07      		cpc r29,r30
 2816 0158 01F0      		breq .L152
 2817 015a CA31      		cpi r28,26
 2818 015c F8E6      		ldi r31,104
 2819 015e DF07      		cpc r29,r31
 2820 0160 01F0      		breq .L152
 2821 0162 C531      		cpi r28,21
 2822 0164 D446      		sbci r29,100
 2823 0166 01F0      		breq .+2
 2824 0168 00C0      		rjmp .L184
 2825               	.L159:
 278:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2826               		.loc 4 278 0
 2827 016a 62EE      		ldi r22,lo8(-30)
 2828 016c 70E0      		ldi r23,0
 2829               	.L236:
 295:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2830               		.loc 4 295 0
 2831 016e C601      		movw r24,r12
 2832 0170 0E94 0000 		call tap_mods
 2833               	.LVL322:
 2834 0174 00C0      		rjmp .L184
 2835               	.L179:
 256:keyboards/splitography/keymaps/hiea/keymap.c ****         }
 2836               		.loc 4 256 0
 2837 0176 0E94 0000 		call base_layer
 2838               	.LVL323:
 2839 017a 00C0      		rjmp .L232
 2840               	.L178:
 260:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 2841               		.loc 4 260 0
 2842 017c 9E7F      		andi r25,lo8(-2)
 2843               	.L233:
 271:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 2844               		.loc 4 271 0
 2845 017e 9093 0000 		sts base_n,r25
 2846               	.L148:
 2847               	/* epilogue start */
 401:keyboards/splitography/keymaps/hiea/keymap.c **** }
 2848               		.loc 4 401 0
 2849 0182 DF91      		pop r29
 2850 0184 CF91      		pop r28
 2851               	.LVL324:
 2852 0186 0F91      		pop r16
 2853 0188 EF90      		pop r14
 2854 018a DF90      		pop r13
 2855 018c CF90      		pop r12
 2856               	.LVL325:
 2857 018e 0895      		ret
 2858               	.LVL326:
 2859               	.L164:
 264:keyboards/splitography/keymaps/hiea/keymap.c ****         base_n = base_n | BASE_2;
 2860               		.loc 4 264 0
 2861 0190 FB01      		movw r30,r22
 2862 0192 8281      		ldd r24,Z+2
 2863 0194 9091 0000 		lds r25,base_n
 2864 0198 8823      		tst r24
 2865 019a 01F0      		breq .L180
 265:keyboards/splitography/keymaps/hiea/keymap.c ****         if (base_n == BASE_12) {
 2866               		.loc 4 265 0
 2867 019c 9260      		ori r25,lo8(2)
 2868 019e 00C0      		rjmp .L231
 2869               	.L180:
 271:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 2870               		.loc 4 271 0
 2871 01a0 9D7F      		andi r25,lo8(-3)
 2872 01a2 00C0      		rjmp .L233
 2873               	.L152:
 284:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2874               		.loc 4 284 0
 2875 01a4 63EE      		ldi r22,lo8(-29)
 2876 01a6 70E0      		ldi r23,0
 2877 01a8 00C0      		rjmp .L236
 2878               	.L177:
 295:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2879               		.loc 4 295 0
 2880 01aa 61EE      		ldi r22,lo8(-31)
 2881 01ac 70E0      		ldi r23,0
 2882 01ae 00C0      		rjmp .L236
 2883               	.L157:
 305:keyboards/splitography/keymaps/hiea/keymap.c ****         clear_tt();                         // exit TT layer
 2884               		.loc 4 305 0
 2885 01b0 8091 0000 		lds r24,tt_keycode
 2886 01b4 9091 0000 		lds r25,tt_keycode+1
 2887 01b8 892B      		or r24,r25
 2888 01ba 01F0      		breq .+2
 2889 01bc 00C0      		rjmp .L234
 310:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2890               		.loc 4 310 0
 2891 01be 65E0      		ldi r22,lo8(5)
 2892               	.L237:
 346:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_RSHIFT, KC_ENT) emulation, see tap dance enter
 2893               		.loc 4 346 0
 2894 01c0 C601      		movw r24,r12
 2895 01c2 0E94 0000 		call tap_layer
 2896               	.LVL327:
 2897 01c6 00C0      		rjmp .L184
 2898               	.L150:
 323:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2899               		.loc 4 323 0
 2900 01c8 23E2      		ldi r18,lo8(35)
 2901 01ca 30E0      		ldi r19,0
 2902 01cc 50E0      		ldi r21,0
 2903 01ce 40E0      		ldi r20,0
 2904               	.L241:
 335:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2905               		.loc 4 335 0
 2906 01d0 63EE      		ldi r22,lo8(-29)
 2907 01d2 70E0      		ldi r23,0
 2908 01d4 00C0      		rjmp .L238
 2909               	.L230:
 327:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2910               		.loc 4 327 0
 2911 01d6 21E2      		ldi r18,lo8(33)
 2912 01d8 30E0      		ldi r19,0
 2913 01da 50E0      		ldi r21,0
 2914 01dc 40E0      		ldi r20,0
 2915 01de 61EE      		ldi r22,lo8(-31)
 2916 01e0 70E0      		ldi r23,0
 2917               	.L238:
 343:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2918               		.loc 4 343 0
 2919 01e2 C601      		movw r24,r12
 2920 01e4 0E94 0000 		call mt_shift
 2921               	.LVL328:
 2922 01e8 00C0      		rjmp .L184
 2923               	.L170:
 331:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2924               		.loc 4 331 0
 2925 01ea 2AE0      		ldi r18,lo8(10)
 2926 01ec 30E0      		ldi r19,0
 2927 01ee 41EE      		ldi r20,lo8(-31)
 2928 01f0 50E0      		ldi r21,0
 2929               	.L239:
 343:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2930               		.loc 4 343 0
 2931 01f2 62EE      		ldi r22,lo8(-30)
 2932 01f4 70E0      		ldi r23,0
 2933 01f6 00C0      		rjmp .L238
 2934               	.L174:
 339:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2935               		.loc 4 339 0
 2936 01f8 2AE1      		ldi r18,lo8(26)
 2937 01fa 30E0      		ldi r19,0
 2938 01fc 00C0      		rjmp .L242
 2939               	.L168:
 343:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2940               		.loc 4 343 0
 2941 01fe 22E2      		ldi r18,lo8(34)
 2942 0200 30E0      		ldi r19,0
 2943 0202 50E0      		ldi r21,0
 2944 0204 40E0      		ldi r20,0
 2945 0206 00C0      		rjmp .L239
 2946               	.L162:
 346:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_RSHIFT, KC_ENT) emulation, see tap dance enter
 2947               		.loc 4 346 0
 2948 0208 63E0      		ldi r22,lo8(3)
 2949 020a 00C0      		rjmp .L237
 2950               	.L154:
 355:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_SYMBOL, KC_LEFT) left right combination layer
 2951               		.loc 4 355 0
 2952 020c 66E0      		ldi r22,lo8(6)
 2953 020e C601      		movw r24,r12
 2954 0210 0E94 0000 		call tap_layer
 2955               	.LVL329:
 357:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2956               		.loc 4 357 0
 2957 0214 22E0      		ldi r18,lo8(2)
 2958 0216 E22E      		mov r14,r18
 2959 0218 06E0      		ldi r16,lo8(6)
 2960 021a 30E0      		ldi r19,0
 2961 021c 20E0      		ldi r18,0
 2962               	.L243:
 362:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2963               		.loc 4 362 0
 2964 021e 40E0      		ldi r20,0
 2965 0220 62E0      		ldi r22,lo8(2)
 2966               	.L235:
 367:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2967               		.loc 4 367 0
 2968 0222 C601      		movw r24,r12
 2969 0224 0E94 0000 		call thumb_layer
 2970               	.LVL330:
 2971 0228 00C0      		rjmp .L184
 2972               	.L173:
 360:keyboards/splitography/keymaps/hiea/keymap.c ****       // LT (_MOUSE, S(KC_DEL)) left right combination layer
 2973               		.loc 4 360 0
 2974 022a 68E0      		ldi r22,lo8(8)
 2975 022c C601      		movw r24,r12
 2976 022e 0E94 0000 		call tap_layer
 2977               	.LVL331:
 362:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2978               		.loc 4 362 0
 2979 0232 92E0      		ldi r25,lo8(2)
 2980 0234 E92E      		mov r14,r25
 2981 0236 08E0      		ldi r16,lo8(8)
 2982 0238 2CE4      		ldi r18,lo8(76)
 2983 023a 30E0      		ldi r19,0
 2984 023c 00C0      		rjmp .L243
 2985               	.L156:
 376:keyboards/splitography/keymaps/hiea/keymap.c ****         clear_tt();                         // return to base layer first if different TT layer sel
 2986               		.loc 4 376 0
 2987 023e 8091 0000 		lds r24,tt_keycode
 2988 0242 9091 0000 		lds r25,tt_keycode+1
 2989 0246 8C17      		cp r24,r28
 2990 0248 9D07      		cpc r25,r29
 2991 024a 01F0      		breq .L183
 376:keyboards/splitography/keymaps/hiea/keymap.c ****         clear_tt();                         // return to base layer first if different TT layer sel
 2992               		.loc 4 376 0 is_stmt 0 discriminator 1
 2993 024c 892B      		or r24,r25
 2994 024e 01F0      		breq .L183
 377:keyboards/splitography/keymaps/hiea/keymap.c ****       }
 2995               		.loc 4 377 0 is_stmt 1
 2996 0250 0E94 0000 		call clear_tt
 2997               	.LVL332:
 2998               	.L183:
 379:keyboards/splitography/keymaps/hiea/keymap.c ****       break;
 2999               		.loc 4 379 0
 3000 0254 D093 0000 		sts tt_keycode+1,r29
 3001 0258 C093 0000 		sts tt_keycode,r28
 3002 025c 00C0      		rjmp .L184
 3003               	.L165:
 397:keyboards/splitography/keymaps/hiea/keymap.c ****       return false;
 3004               		.loc 4 397 0
 3005 025e CB01      		movw r24,r22
 3006 0260 0E94 0000 		call steno
 3007               	.LVL333:
 3008 0264 00C0      		rjmp .L232
 3009               		.cfi_endproc
 3010               	.LFE159:
 3012               		.section	.text.matrix_init_user,"ax",@progbits
 3013               	.global	matrix_init_user
 3015               	matrix_init_user:
 3016               	.LFB160:
 3017               		.file 5 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h"
   1:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h **** 
   2:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h **** // ....................................................................... Audio
   3:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h **** 
   4:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h **** void matrix_init_user(void)
   5:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h **** {
 3018               		.loc 5 5 0
 3019               		.cfi_startproc
 3020               	/* prologue: function */
 3021               	/* frame size = 0 */
 3022               	/* stack size = 0 */
 3023               	.L__stack_usage = 0
   6:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h **** #ifdef STENO_ENABLE
   7:/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/init.h ****   steno_set_mode(STENO_MODE_BOLT);          // or STENO_MODE_GEMINI
 3024               		.loc 5 7 0
 3025 0000 80E0      		ldi r24,0
 3026 0002 0C94 0000 		jmp steno_set_mode
 3027               	.LVL334:
 3028               		.cfi_endproc
 3029               	.LFE160:
 3031               		.section	.progmem.data.__c.5780,"a",@progbits
 3034               	__c.5780:
 3035 0000 3A25 732F 		.string	":%s/arch=(.*)/arch=('any')\n"
 3035      6172 6368 
 3035      3D28 2E2A 
 3035      292F 6172 
 3035      6368 3D28 
 3036               		.section	.progmem.data.__c.5774,"a",@progbits
 3039               	__c.5774:
 3040 0000 7468 6520 		.string	"the keys of enoch"
 3040      6B65 7973 
 3040      206F 6620 
 3040      656E 6F63 
 3040      6800 
 3041               		.section	.bss.base_n,"aw",@nobits
 3044               	base_n:
 3045 0000 00        		.zero	1
 3046               		.section	.bss.plover,"aw",@nobits
 3049               	plover:
 3050 0000 00        		.zero	1
 3051               		.section	.bss.tt_keycode,"aw",@nobits
 3054               	tt_keycode:
 3055 0000 0000      		.zero	2
 3056               		.section	.bss.overlayer,"aw",@nobits
 3059               	overlayer:
 3060 0000 00        		.zero	1
 3061               		.section	.bss.thumb,"aw",@nobits
 3064               	thumb:
 3065 0000 00        		.zero	1
 3066               	.global	tap_dance_actions
 3067               		.section	.data.tap_dance_actions,"aw",@progbits
 3070               	tap_dance_actions:
 3071 0000 0000      		.word	0
 3072 0002 0000      		.word	gs(caps)
 3073 0004 0000      		.word	gs(caps_reset)
 3074 0006 0000 0000 		.zero	11
 3074      0000 0000 
 3074      0000 00
 3075 0011 0000      		.word	0
 3076 0013 0000      		.word	0
 3077 0015 0000      		.word	gs(colon)
 3078 0017 0000      		.word	0
 3079 0019 0000 0000 		.zero	11
 3079      0000 0000 
 3079      0000 00
 3080 0024 0000      		.word	0
 3081 0026 0000      		.word	0
 3082 0028 0000      		.word	gs(comma)
 3083 002a 0000      		.word	0
 3084 002c 0000 0000 		.zero	11
 3084      0000 0000 
 3084      0000 00
 3085 0037 0000      		.word	0
 3086 0039 0000      		.word	0
 3087 003b 0000      		.word	gs(dot)
 3088 003d 0000      		.word	0
 3089 003f 0000 0000 		.zero	11
 3089      0000 0000 
 3089      0000 00
 3090 004a 0000      		.word	0
 3091 004c 0000      		.word	0
 3092 004e 0000      		.word	gs(doublequote)
 3093 0050 0000      		.word	0
 3094 0052 0000 0000 		.zero	11
 3094      0000 0000 
 3094      0000 00
 3095 005d 0000      		.word	0
 3096 005f 0000      		.word	0
 3097 0061 0000      		.word	gs(enter)
 3098 0063 0000      		.word	gs(enter_reset)
 3099 0065 0000 0000 		.zero	11
 3099      0000 0000 
 3099      0000 00
 3100 0070 0000      		.word	0
 3101 0072 0000      		.word	0
 3102 0074 0000      		.word	gs(eql)
 3103 0076 0000      		.word	0
 3104 0078 0000 0000 		.zero	11
 3104      0000 0000 
 3104      0000 00
 3105 0083 0000      		.word	0
 3106 0085 0000      		.word	0
 3107 0087 0000      		.word	gs(grave)
 3108 0089 0000      		.word	0
 3109 008b 0000 0000 		.zero	11
 3109      0000 0000 
 3109      0000 00
 3110 0096 0000      		.word	0
 3111 0098 0000      		.word	0
 3112 009a 0000      		.word	gs(greater)
 3113 009c 0000      		.word	0
 3114 009e 0000 0000 		.zero	11
 3114      0000 0000 
 3114      0000 00
 3115 00a9 0000      		.word	0
 3116 00ab 0000      		.word	0
 3117 00ad 0000      		.word	gs(lbrace)
 3118 00af 0000      		.word	0
 3119 00b1 0000 0000 		.zero	11
 3119      0000 0000 
 3119      0000 00
 3120 00bc 0000      		.word	0
 3121 00be 0000      		.word	0
 3122 00c0 0000      		.word	gs(lcurly)
 3123 00c2 0000      		.word	0
 3124 00c4 0000 0000 		.zero	11
 3124      0000 0000 
 3124      0000 00
 3125 00cf 0000      		.word	0
 3126 00d1 0000      		.word	0
 3127 00d3 0000      		.word	gs(lparen)
 3128 00d5 0000      		.word	gs(lparen_reset)
 3129 00d7 0000 0000 		.zero	11
 3129      0000 0000 
 3129      0000 00
 3130 00e2 0000      		.word	0
 3131 00e4 0000      		.word	0
 3132 00e6 0000      		.word	gs(lesser)
 3133 00e8 0000      		.word	0
 3134 00ea 0000 0000 		.zero	11
 3134      0000 0000 
 3134      0000 00
 3135 00f5 0000      		.word	0
 3136 00f7 0000      		.word	0
 3137 00f9 0000      		.word	gs(private)
 3138 00fb 0000      		.word	0
 3139 00fd 0000 0000 		.zero	11
 3139      0000 0000 
 3139      0000 00
 3140 0108 0000      		.word	0
 3141 010a 0000      		.word	0
 3142 010c 0000      		.word	gs(quote)
 3143 010e 0000      		.word	0
 3144 0110 0000 0000 		.zero	11
 3144      0000 0000 
 3144      0000 00
 3145 011b 0000      		.word	0
 3146 011d 0000      		.word	0
 3147 011f 0000      		.word	gs(rbrace)
 3148 0121 0000      		.word	0
 3149 0123 0000 0000 		.zero	11
 3149      0000 0000 
 3149      0000 00
 3150 012e 0000      		.word	0
 3151 0130 0000      		.word	0
 3152 0132 0000      		.word	gs(rcurly)
 3153 0134 0000      		.word	0
 3154 0136 0000 0000 		.zero	11
 3154      0000 0000 
 3154      0000 00
 3155 0141 0000      		.word	0
 3156 0143 0000      		.word	0
 3157 0145 0000      		.word	gs(rangle)
 3158 0147 0000      		.word	0
 3159 0149 0000 0000 		.zero	11
 3159      0000 0000 
 3159      0000 00
 3160 0154 0000      		.word	0
 3161 0156 0000      		.word	0
 3162 0158 0000      		.word	gs(rparen)
 3163 015a 0000      		.word	gs(rparen_reset)
 3164 015c 0000 0000 		.zero	11
 3164      0000 0000 
 3164      0000 00
 3165 0167 0000      		.word	0
 3166 0169 0000      		.word	0
 3167 016b 0000      		.word	gs(send)
 3168 016d 0000      		.word	0
 3169 016f 0000 0000 		.zero	11
 3169      0000 0000 
 3169      0000 00
 3170 017a 0000      		.word	0
 3171 017c 0000      		.word	0
 3172 017e 0000      		.word	gs(space)
 3173 0180 0000      		.word	gs(space_reset)
 3174 0182 0000 0000 		.zero	11
 3174      0000 0000 
 3174      0000 00
 3175 018d 0000      		.word	0
 3176 018f 0000      		.word	0
 3177 0191 0000      		.word	gs(tilde)
 3178 0193 0000      		.word	gs(tilde_reset)
 3179 0195 0000 0000 		.zero	11
 3179      0000 0000 
 3179      0000 00
 3180 01a0 0000      		.word	0
 3181               		.section	.bss.dt_shift,"aw",@nobits
 3184               	dt_shift:
 3185 0000 00        		.zero	1
 3186               		.section	.bss.mods,"aw",@nobits
 3189               	mods:
 3190 0000 00        		.zero	1
 3191               		.section	.bss.key_timer,"aw",@nobits
 3194               	key_timer:
 3195 0000 0000      		.zero	2
 3196               	.global	keymaps
 3197               		.section	.progmem.data.keymaps,"a",@progbits
 3200               	keymaps:
 3201 0000 1400      		.word	20
 3202 0002 1C00      		.word	28
 3203 0004 1200      		.word	18
 3204 0006 1800      		.word	24
 3205 0008 1D00      		.word	29
 3206 000a 0B58      		.word	22539
 3207 000c 3900      		.word	57
 3208 000e 0A00      		.word	10
 3209 0010 0700      		.word	7
 3210 0012 1100      		.word	17
 3211 0014 1000      		.word	16
 3212 0016 1B00      		.word	27
 3213 0018 0B68      		.word	26635
 3214 001a 0C61      		.word	24844
 3215 001c 0864      		.word	25608
 3216 001e 0462      		.word	25092
 3217 0020 3700      		.word	55
 3218 0022 0C58      		.word	22540
 3219 0024 0D58      		.word	22541
 3220 0026 0600      		.word	6
 3221 0028 1762      		.word	25111
 3222 002a 1564      		.word	25621
 3223 002c 1661      		.word	24854
 3224 002e 1A68      		.word	26650
 3225 0030 0D00      		.word	13
 3226 0032 3300      		.word	51
 3227 0034 0E57      		.word	22286
 3228 0036 0E00      		.word	14
 3229 0038 3600      		.word	54
 3230 003a 0958      		.word	22537
 3231 003c 0A58      		.word	22538
 3232 003e 0500      		.word	5
 3233 0040 1300      		.word	19
 3234 0042 0F00      		.word	15
 3235 0044 0900      		.word	9
 3236 0046 1900      		.word	25
 3237 0048 0000      		.word	0
 3238 004a 0000      		.word	0
 3239 004c 0000      		.word	0
 3240 004e 0000      		.word	0
 3241 0050 2945      		.word	17705
 3242 0052 1457      		.word	22292
 3243 0054 0557      		.word	22277
 3244 0056 2A46      		.word	17962
 3245 0058 0000      		.word	0
 3246 005a 0000      		.word	0
 3247 005c 0000      		.word	0
 3248 005e 0000      		.word	0
 3249 0060 1402      		.word	532
 3250 0062 1C02      		.word	540
 3251 0064 1202      		.word	530
 3252 0066 1802      		.word	536
 3253 0068 1D02      		.word	541
 3254 006a 0B58      		.word	22539
 3255 006c 3900      		.word	57
 3256 006e 0A02      		.word	522
 3257 0070 0702      		.word	519
 3258 0072 1102      		.word	529
 3259 0074 1002      		.word	528
 3260 0076 1B02      		.word	539
 3261 0078 0B02      		.word	523
 3262 007a 0C02      		.word	524
 3263 007c 0802      		.word	520
 3264 007e 0402      		.word	516
 3265 0080 3700      		.word	55
 3266 0082 0C58      		.word	22540
 3267 0084 0D58      		.word	22541
 3268 0086 0602      		.word	518
 3269 0088 1702      		.word	535
 3270 008a 1502      		.word	533
 3271 008c 1602      		.word	534
 3272 008e 1A02      		.word	538
 3273 0090 0D02      		.word	525
 3274 0092 3300      		.word	51
 3275 0094 0E57      		.word	22286
 3276 0096 0E02      		.word	526
 3277 0098 3600      		.word	54
 3278 009a 0958      		.word	22537
 3279 009c 0A58      		.word	22538
 3280 009e 0502      		.word	517
 3281 00a0 1302      		.word	531
 3282 00a2 0F02      		.word	527
 3283 00a4 0902      		.word	521
 3284 00a6 1902      		.word	537
 3285 00a8 0000      		.word	0
 3286 00aa 0000      		.word	0
 3287 00ac 0000      		.word	0
 3288 00ae 0000      		.word	0
 3289 00b0 2945      		.word	17705
 3290 00b2 1457      		.word	22292
 3291 00b4 0557      		.word	22277
 3292 00b6 2A46      		.word	17962
 3293 00b8 0000      		.word	0
 3294 00ba 0000      		.word	0
 3295 00bc 0000      		.word	0
 3296 00be 0000      		.word	0
 3297 00c0 1402      		.word	532
 3298 00c2 1C02      		.word	540
 3299 00c4 2F00      		.word	47
 3300 00c6 3000      		.word	48
 3301 00c8 1D02      		.word	541
 3302 00ca 0B58      		.word	22539
 3303 00cc 3900      		.word	57
 3304 00ce 0A02      		.word	522
 3305 00d0 0702      		.word	519
 3306 00d2 1102      		.word	529
 3307 00d4 1002      		.word	528
 3308 00d6 1B02      		.word	539
 3309 00d8 E15C      		.word	23777
 3310 00da 2302      		.word	547
 3311 00dc 0C57      		.word	22284
 3312 00de 0857      		.word	22280
 3313 00e0 1557      		.word	22293
 3314 00e2 0C58      		.word	22540
 3315 00e4 0D58      		.word	22541
 3316 00e6 0602      		.word	518
 3317 00e8 1702      		.word	535
 3318 00ea 1502      		.word	533
 3319 00ec 1602      		.word	534
 3320 00ee 1A02      		.word	538
 3321 00f0 0D02      		.word	525
 3322 00f2 0157      		.word	22273
 3323 00f4 1E02      		.word	542
 3324 00f6 0657      		.word	22278
 3325 00f8 0757      		.word	22279
 3326 00fa 0958      		.word	22537
 3327 00fc 0A58      		.word	22538
 3328 00fe 0502      		.word	517
 3329 0100 1302      		.word	531
 3330 0102 0F02      		.word	527
 3331 0104 0902      		.word	521
 3332 0106 1902      		.word	537
 3333 0108 0000      		.word	0
 3334 010a 0000      		.word	0
 3335 010c 0000      		.word	0
 3336 010e 0000      		.word	0
 3337 0110 2B02      		.word	555
 3338 0112 0100      		.word	1
 3339 0114 2D02      		.word	557
 3340 0116 E45C      		.word	23780
 3341 0118 0000      		.word	0
 3342 011a 0000      		.word	0
 3343 011c 0000      		.word	0
 3344 011e 0000      		.word	0
 3345 0120 1402      		.word	532
 3346 0122 1C02      		.word	540
 3347 0124 1202      		.word	530
 3348 0126 1802      		.word	536
 3349 0128 1D02      		.word	541
 3350 012a 0B58      		.word	22539
 3351 012c 3900      		.word	57
 3352 012e 0A02      		.word	522
 3353 0130 2F02      		.word	559
 3354 0132 3002      		.word	560
 3355 0134 1002      		.word	528
 3356 0136 1B02      		.word	539
 3357 0138 0B02      		.word	523
 3358 013a 0C02      		.word	524
 3359 013c 0802      		.word	520
 3360 013e 0402      		.word	516
 3361 0140 3802      		.word	568
 3362 0142 0C58      		.word	22540
 3363 0144 0D58      		.word	22541
 3364 0146 3102      		.word	561
 3365 0148 2602      		.word	550
 3366 014a 2702      		.word	551
 3367 014c 2102      		.word	545
 3368 014e E35C      		.word	23779
 3369 0150 0D02      		.word	525
 3370 0152 0157      		.word	22273
 3371 0154 0457      		.word	22276
 3372 0156 0E02      		.word	526
 3373 0158 3800      		.word	56
 3374 015a 0958      		.word	22537
 3375 015c 0A58      		.word	22538
 3376 015e 3100      		.word	49
 3377 0160 2502      		.word	549
 3378 0162 3700      		.word	55
 3379 0164 1302      		.word	531
 3380 0166 1902      		.word	537
 3381 0168 0000      		.word	0
 3382 016a 0000      		.word	0
 3383 016c 0000      		.word	0
 3384 016e 0000      		.word	0
 3385 0170 2B00      		.word	43
 3386 0172 2D00      		.word	45
 3387 0174 0100      		.word	1
 3388 0176 2A46      		.word	17962
 3389 0178 0000      		.word	0
 3390 017a 0000      		.word	0
 3391 017c 0000      		.word	0
 3392 017e 0000      		.word	0
 3393 0180 015A      		.word	23041
 3394 0182 025A      		.word	23042
 3395 0184 035A      		.word	23043
 3396 0186 045A      		.word	23044
 3397 0188 055A      		.word	23045
 3398 018a 065A      		.word	23046
 3399 018c 235A      		.word	23075
 3400 018e 245A      		.word	23076
 3401 0190 255A      		.word	23077
 3402 0192 265A      		.word	23078
 3403 0194 275A      		.word	23079
 3404 0196 285A      		.word	23080
 3405 0198 DB5C      		.word	23771
 3406 019a 075A      		.word	23047
 3407 019c 095A      		.word	23049
 3408 019e 0B5A      		.word	23051
 3409 01a0 0D5A      		.word	23053
 3410 01a2 115A      		.word	23057
 3411 01a4 165A      		.word	23062
 3412 01a6 1A5A      		.word	23066
 3413 01a8 1C5A      		.word	23068
 3414 01aa 1E5A      		.word	23070
 3415 01ac 205A      		.word	23072
 3416 01ae 225A      		.word	23074
 3417 01b0 DC5C      		.word	23772
 3418 01b2 085A      		.word	23048
 3419 01b4 0A5A      		.word	23050
 3420 01b6 0C5A      		.word	23052
 3421 01b8 0E5A      		.word	23054
 3422 01ba 125A      		.word	23058
 3423 01bc 175A      		.word	23063
 3424 01be 1B5A      		.word	23067
 3425 01c0 1D5A      		.word	23069
 3426 01c2 1F5A      		.word	23071
 3427 01c4 215A      		.word	23073
 3428 01c6 295A      		.word	23081
 3429 01c8 0000      		.word	0
 3430 01ca 0000      		.word	0
 3431 01cc 0000      		.word	0
 3432 01ce 0000      		.word	0
 3433 01d0 0F5A      		.word	23055
 3434 01d2 105A      		.word	23056
 3435 01d4 185A      		.word	23064
 3436 01d6 195A      		.word	23065
 3437 01d8 0000      		.word	0
 3438 01da 0000      		.word	0
 3439 01dc 0000      		.word	0
 3440 01de 0000      		.word	0
 3441 01e0 0000      		.word	0
 3442 01e2 0900      		.word	9
 3443 01e4 0865      		.word	25864
 3444 01e6 0700      		.word	7
 3445 01e8 0000      		.word	0
 3446 01ea 0100      		.word	1
 3447 01ec 0100      		.word	1
 3448 01ee 3800      		.word	56
 3449 01f0 2400      		.word	36
 3450 01f2 2500      		.word	37
 3451 01f4 2600      		.word	38
 3452 01f6 2502      		.word	549
 3453 01f8 0855      		.word	21768
 3454 01fa 0661      		.word	24838
 3455 01fc 0564      		.word	25605
 3456 01fe 0462      		.word	25092
 3457 0200 0000      		.word	0
 3458 0202 0100      		.word	1
 3459 0204 0100      		.word	1
 3460 0206 0357      		.word	22275
 3461 0208 2100      		.word	33
 3462 020a 2200      		.word	34
 3463 020c 2300      		.word	35
 3464 020e 2D00      		.word	45
 3465 0210 0000      		.word	0
 3466 0212 2002      		.word	544
 3467 0214 E05C      		.word	23776
 3468 0216 3100      		.word	49
 3469 0218 0000      		.word	0
 3470 021a 0100      		.word	1
 3471 021c 0100      		.word	1
 3472 021e 0257      		.word	22274
 3473 0220 1E00      		.word	30
 3474 0222 1F00      		.word	31
 3475 0224 2000      		.word	32
 3476 0226 2E02      		.word	558
 3477 0228 0000      		.word	0
 3478 022a 0000      		.word	0
 3479 022c 0000      		.word	0
 3480 022e 0000      		.word	0
 3481 0230 0100      		.word	1
 3482 0232 0100      		.word	1
 3483 0234 2700      		.word	39
 3484 0236 2E4E      		.word	20014
 3485 0238 0000      		.word	0
 3486 023a 0000      		.word	0
 3487 023c 0000      		.word	0
 3488 023e 0000      		.word	0
 3489 0240 0000      		.word	0
 3490 0242 3502      		.word	565
 3491 0244 2502      		.word	549
 3492 0246 2402      		.word	548
 3493 0248 0000      		.word	0
 3494 024a 0100      		.word	1
 3495 024c 0100      		.word	1
 3496 024e 0000      		.word	0
 3497 0250 4A00      		.word	74
 3498 0252 5200      		.word	82
 3499 0254 4D00      		.word	77
 3500 0256 4B00      		.word	75
 3501 0258 0855      		.word	21768
 3502 025a DE5C      		.word	23774
 3503 025c E25C      		.word	23778
 3504 025e DF5C      		.word	23775
 3505 0260 0000      		.word	0
 3506 0262 0100      		.word	1
 3507 0264 0100      		.word	1
 3508 0266 0000      		.word	0
 3509 0268 5000      		.word	80
 3510 026a 5100      		.word	81
 3511 026c 4F00      		.word	79
 3512 026e 4E00      		.word	78
 3513 0270 0000      		.word	0
 3514 0272 2002      		.word	544
 3515 0274 1F02      		.word	543
 3516 0276 1E02      		.word	542
 3517 0278 0000      		.word	0
 3518 027a 0100      		.word	1
 3519 027c 0100      		.word	1
 3520 027e 0000      		.word	0
 3521 0280 0000      		.word	0
 3522 0282 0000      		.word	0
 3523 0284 0000      		.word	0
 3524 0286 0000      		.word	0
 3525 0288 0000      		.word	0
 3526 028a 0000      		.word	0
 3527 028c 0000      		.word	0
 3528 028e 0000      		.word	0
 3529 0290 0E51      		.word	20750
 3530 0292 3148      		.word	18481
 3531 0294 0100      		.word	1
 3532 0296 0100      		.word	1
 3533 0298 0000      		.word	0
 3534 029a 0000      		.word	0
 3535 029c 0000      		.word	0
 3536 029e 0000      		.word	0
 3537 02a0 0000      		.word	0
 3538 02a2 0000      		.word	0
 3539 02a4 0000      		.word	0
 3540 02a6 0000      		.word	0
 3541 02a8 0000      		.word	0
 3542 02aa 0100      		.word	1
 3543 02ac 0100      		.word	1
 3544 02ae 0000      		.word	0
 3545 02b0 4000      		.word	64
 3546 02b2 4100      		.word	65
 3547 02b4 4200      		.word	66
 3548 02b6 4500      		.word	69
 3549 02b8 0855      		.word	21768
 3550 02ba 0155      		.word	21761
 3551 02bc 0455      		.word	21764
 3552 02be 0255      		.word	21762
 3553 02c0 0000      		.word	0
 3554 02c2 0100      		.word	1
 3555 02c4 0100      		.word	1
 3556 02c6 0000      		.word	0
 3557 02c8 3D00      		.word	61
 3558 02ca 3E00      		.word	62
 3559 02cc 3F00      		.word	63
 3560 02ce 4400      		.word	68
 3561 02d0 0000      		.word	0
 3562 02d2 0000      		.word	0
 3563 02d4 0000      		.word	0
 3564 02d6 0000      		.word	0
 3565 02d8 0000      		.word	0
 3566 02da 0100      		.word	1
 3567 02dc 0100      		.word	1
 3568 02de 0000      		.word	0
 3569 02e0 3A00      		.word	58
 3570 02e2 3B00      		.word	59
 3571 02e4 3C00      		.word	60
 3572 02e6 4300      		.word	67
 3573 02e8 0000      		.word	0
 3574 02ea 0000      		.word	0
 3575 02ec 0000      		.word	0
 3576 02ee 0000      		.word	0
 3577 02f0 0000      		.word	0
 3578 02f2 0100      		.word	1
 3579 02f4 2E02      		.word	558
 3580 02f6 0000      		.word	0
 3581 02f8 0000      		.word	0
 3582 02fa 0000      		.word	0
 3583 02fc 0000      		.word	0
 3584 02fe 0000      		.word	0
 3585 0300 0000      		.word	0
 3586 0302 0000      		.word	0
 3587 0304 0000      		.word	0
 3588 0306 0000      		.word	0
 3589 0308 0000      		.word	0
 3590 030a 0100      		.word	1
 3591 030c 0100      		.word	1
 3592 030e 0000      		.word	0
 3593 0310 FB00      		.word	251
 3594 0312 F000      		.word	240
 3595 0314 FC00      		.word	252
 3596 0316 F900      		.word	249
 3597 0318 0000      		.word	0
 3598 031a F600      		.word	246
 3599 031c F500      		.word	245
 3600 031e F400      		.word	244
 3601 0320 0000      		.word	0
 3602 0322 0100      		.word	1
 3603 0324 0100      		.word	1
 3604 0326 0000      		.word	0
 3605 0328 F200      		.word	242
 3606 032a F100      		.word	241
 3607 032c F300      		.word	243
 3608 032e FA00      		.word	250
 3609 0330 0000      		.word	0
 3610 0332 0000      		.word	0
 3611 0334 0000      		.word	0
 3612 0336 0000      		.word	0
 3613 0338 0000      		.word	0
 3614 033a 0100      		.word	1
 3615 033c 0100      		.word	1
 3616 033e 0000      		.word	0
 3617 0340 0000      		.word	0
 3618 0342 0000      		.word	0
 3619 0344 0000      		.word	0
 3620 0346 0000      		.word	0
 3621 0348 0000      		.word	0
 3622 034a 0000      		.word	0
 3623 034c 0000      		.word	0
 3624 034e 0000      		.word	0
 3625 0350 0000      		.word	0
 3626 0352 0100      		.word	1
 3627 0354 0000      		.word	0
 3628 0356 0100      		.word	1
 3629 0358 0000      		.word	0
 3630 035a 0000      		.word	0
 3631 035c 0000      		.word	0
 3632 035e 0000      		.word	0
 3633 0360 0000      		.word	0
 3634 0362 0900      		.word	9
 3635 0364 0865      		.word	25864
 3636 0366 0700      		.word	7
 3637 0368 0000      		.word	0
 3638 036a 0100      		.word	1
 3639 036c 0100      		.word	1
 3640 036e 3800      		.word	56
 3641 0370 2400      		.word	36
 3642 0372 2500      		.word	37
 3643 0374 2600      		.word	38
 3644 0376 2502      		.word	549
 3645 0378 0855      		.word	21768
 3646 037a 0661      		.word	24838
 3647 037c 0564      		.word	25605
 3648 037e 0462      		.word	25092
 3649 0380 0000      		.word	0
 3650 0382 0100      		.word	1
 3651 0384 0100      		.word	1
 3652 0386 0357      		.word	22275
 3653 0388 2100      		.word	33
 3654 038a 2200      		.word	34
 3655 038c 2300      		.word	35
 3656 038e 2D00      		.word	45
 3657 0390 0000      		.word	0
 3658 0392 2002      		.word	544
 3659 0394 E05C      		.word	23776
 3660 0396 3100      		.word	49
 3661 0398 0000      		.word	0
 3662 039a 0100      		.word	1
 3663 039c 0100      		.word	1
 3664 039e 0257      		.word	22274
 3665 03a0 1E00      		.word	30
 3666 03a2 1F00      		.word	31
 3667 03a4 2000      		.word	32
 3668 03a6 2E02      		.word	558
 3669 03a8 0000      		.word	0
 3670 03aa 0000      		.word	0
 3671 03ac 0000      		.word	0
 3672 03ae 0000      		.word	0
 3673 03b0 E55C      		.word	23781
 3674 03b2 2C00      		.word	44
 3675 03b4 2700      		.word	39
 3676 03b6 2E4E      		.word	20014
 3677 03b8 0000      		.word	0
 3678 03ba 0000      		.word	0
 3679 03bc 0000      		.word	0
 3680 03be 0000      		.word	0
 3681 03c0 0100      		.word	1
 3682 03c2 3502      		.word	565
 3683 03c4 2F02      		.word	559
 3684 03c6 3002      		.word	560
 3685 03c8 2402      		.word	548
 3686 03ca 0100      		.word	1
 3687 03cc 0100      		.word	1
 3688 03ce 2202      		.word	546
 3689 03d0 2F00      		.word	47
 3690 03d2 3000      		.word	48
 3691 03d4 1F02      		.word	543
 3692 03d6 0100      		.word	1
 3693 03d8 0100      		.word	1
 3694 03da 2302      		.word	547
 3695 03dc 3602      		.word	566
 3696 03de 3702      		.word	567
 3697 03e0 3802      		.word	568
 3698 03e2 0100      		.word	1
 3699 03e4 0100      		.word	1
 3700 03e6 3102      		.word	561
 3701 03e8 2602      		.word	550
 3702 03ea 2702      		.word	551
 3703 03ec 2102      		.word	545
 3704 03ee 0100      		.word	1
 3705 03f0 0100      		.word	1
 3706 03f2 3302      		.word	563
 3707 03f4 1E02      		.word	542
 3708 03f6 2E00      		.word	46
 3709 03f8 3800      		.word	56
 3710 03fa 0100      		.word	1
 3711 03fc 0100      		.word	1
 3712 03fe 3100      		.word	49
 3713 0400 2502      		.word	549
 3714 0402 3700      		.word	55
 3715 0404 2002      		.word	544
 3716 0406 0100      		.word	1
 3717 0408 0000      		.word	0
 3718 040a 0000      		.word	0
 3719 040c 0000      		.word	0
 3720 040e 0000      		.word	0
 3721 0410 E55C      		.word	23781
 3722 0412 2D00      		.word	45
 3723 0414 2E02      		.word	558
 3724 0416 2C00      		.word	44
 3725 0418 0000      		.word	0
 3726 041a 0000      		.word	0
 3727 041c 0000      		.word	0
 3728 041e 0000      		.word	0
 3729 0420 0000      		.word	0
 3730 0422 0000      		.word	0
 3731 0424 0000      		.word	0
 3732 0426 0000      		.word	0
 3733 0428 0000      		.word	0
 3734 042a 0100      		.word	1
 3735 042c 0100      		.word	1
 3736 042e 0000      		.word	0
 3737 0430 4000      		.word	64
 3738 0432 4100      		.word	65
 3739 0434 4200      		.word	66
 3740 0436 4500      		.word	69
 3741 0438 0855      		.word	21768
 3742 043a 0155      		.word	21761
 3743 043c 0455      		.word	21764
 3744 043e 0255      		.word	21762
 3745 0440 0000      		.word	0
 3746 0442 0100      		.word	1
 3747 0444 0100      		.word	1
 3748 0446 0000      		.word	0
 3749 0448 3D00      		.word	61
 3750 044a 3E00      		.word	62
 3751 044c 3F00      		.word	63
 3752 044e 4400      		.word	68
 3753 0450 0000      		.word	0
 3754 0452 0000      		.word	0
 3755 0454 0000      		.word	0
 3756 0456 0000      		.word	0
 3757 0458 0000      		.word	0
 3758 045a 0100      		.word	1
 3759 045c 0100      		.word	1
 3760 045e 0000      		.word	0
 3761 0460 3A00      		.word	58
 3762 0462 3B00      		.word	59
 3763 0464 3C00      		.word	60
 3764 0466 4300      		.word	67
 3765 0468 0000      		.word	0
 3766 046a 0000      		.word	0
 3767 046c 0000      		.word	0
 3768 046e 0000      		.word	0
 3769 0470 E55C      		.word	23781
 3770 0472 0000      		.word	0
 3771 0474 2E02      		.word	558
 3772 0476 0000      		.word	0
 3773 0478 0000      		.word	0
 3774 047a 0000      		.word	0
 3775 047c 0000      		.word	0
 3776 047e 0000      		.word	0
 3777 0480 0000      		.word	0
 3778 0482 0000      		.word	0
 3779 0484 0000      		.word	0
 3780 0486 0000      		.word	0
 3781 0488 0000      		.word	0
 3782 048a 0100      		.word	1
 3783 048c 0100      		.word	1
 3784 048e 0000      		.word	0
 3785 0490 4A00      		.word	74
 3786 0492 5200      		.word	82
 3787 0494 4D00      		.word	77
 3788 0496 4B00      		.word	75
 3789 0498 0855      		.word	21768
 3790 049a 0155      		.word	21761
 3791 049c 0455      		.word	21764
 3792 049e 0255      		.word	21762
 3793 04a0 0000      		.word	0
 3794 04a2 0100      		.word	1
 3795 04a4 0100      		.word	1
 3796 04a6 0000      		.word	0
 3797 04a8 5000      		.word	80
 3798 04aa 5100      		.word	81
 3799 04ac 4F00      		.word	79
 3800 04ae 4E00      		.word	78
 3801 04b0 0000      		.word	0
 3802 04b2 0000      		.word	0
 3803 04b4 0000      		.word	0
 3804 04b6 0000      		.word	0
 3805 04b8 0000      		.word	0
 3806 04ba 0100      		.word	1
 3807 04bc 0100      		.word	1
 3808 04be 0000      		.word	0
 3809 04c0 0000      		.word	0
 3810 04c2 0000      		.word	0
 3811 04c4 0000      		.word	0
 3812 04c6 0000      		.word	0
 3813 04c8 0000      		.word	0
 3814 04ca 0000      		.word	0
 3815 04cc 0000      		.word	0
 3816 04ce 0000      		.word	0
 3817 04d0 E55C      		.word	23781
 3818 04d2 0000      		.word	0
 3819 04d4 0000      		.word	0
 3820 04d6 0000      		.word	0
 3821 04d8 0000      		.word	0
 3822 04da 0000      		.word	0
 3823 04dc 0000      		.word	0
 3824 04de 0000      		.word	0
 3825 04e0 0000      		.word	0
 3826 04e2 0000      		.word	0
 3827 04e4 0000      		.word	0
 3828 04e6 0000      		.word	0
 3829 04e8 0000      		.word	0
 3830 04ea 0100      		.word	1
 3831 04ec 0100      		.word	1
 3832 04ee 0000      		.word	0
 3833 04f0 FB00      		.word	251
 3834 04f2 F000      		.word	240
 3835 04f4 FC00      		.word	252
 3836 04f6 F900      		.word	249
 3837 04f8 0000      		.word	0
 3838 04fa F600      		.word	246
 3839 04fc F500      		.word	245
 3840 04fe F400      		.word	244
 3841 0500 0000      		.word	0
 3842 0502 0100      		.word	1
 3843 0504 0100      		.word	1
 3844 0506 0000      		.word	0
 3845 0508 F200      		.word	242
 3846 050a F100      		.word	241
 3847 050c F300      		.word	243
 3848 050e FA00      		.word	250
 3849 0510 0000      		.word	0
 3850 0512 0000      		.word	0
 3851 0514 0000      		.word	0
 3852 0516 0000      		.word	0
 3853 0518 0000      		.word	0
 3854 051a 0100      		.word	1
 3855 051c 0100      		.word	1
 3856 051e 0000      		.word	0
 3857 0520 0000      		.word	0
 3858 0522 0000      		.word	0
 3859 0524 0000      		.word	0
 3860 0526 0000      		.word	0
 3861 0528 0000      		.word	0
 3862 052a 0000      		.word	0
 3863 052c 0000      		.word	0
 3864 052e 0000      		.word	0
 3865 0530 E55C      		.word	23781
 3866 0532 0000      		.word	0
 3867 0534 0000      		.word	0
 3868 0536 0000      		.word	0
 3869 0538 0000      		.word	0
 3870 053a 0000      		.word	0
 3871 053c 0000      		.word	0
 3872 053e 0000      		.word	0
 3873 0540 0000      		.word	0
 3874 0542 0000      		.word	0
 3875 0544 0605      		.word	1286
 3876 0546 1905      		.word	1305
 3877 0548 0000      		.word	0
 3878 054a 0000      		.word	0
 3879 054c 0000      		.word	0
 3880 054e 0000      		.word	0
 3881 0550 0000      		.word	0
 3882 0552 0000      		.word	0
 3883 0554 0000      		.word	0
 3884 0556 DD5C      		.word	23773
 3885 0558 1D01      		.word	285
 3886 055a 1B01      		.word	283
 3887 055c 0601      		.word	262
 3888 055e 1901      		.word	281
 3889 0560 0000      		.word	0
 3890 0562 0000      		.word	0
 3891 0564 0000      		.word	0
 3892 0566 0000      		.word	0
 3893 0568 0D57      		.word	22285
 3894 056a 1357      		.word	22291
 3895 056c 0000      		.word	0
 3896 056e 0000      		.word	0
 3897 0570 0000      		.word	0
 3898 0572 0000      		.word	0
 3899 0574 1801      		.word	280
 3900 0576 0701      		.word	263
 3901 0578 0000      		.word	0
 3902 057a 0000      		.word	0
 3903 057c 0000      		.word	0
 3904 057e 0000      		.word	0
 3905 0580 0000      		.word	0
 3906 0582 0000      		.word	0
 3907 0584 0000      		.word	0
 3908 0586 0000      		.word	0
 3909 0588 0000      		.word	0
 3910 058a 0000      		.word	0
 3911 058c 0000      		.word	0
 3912 058e 0000      		.word	0
 3913 0590 0100      		.word	1
 3914 0592 0000      		.word	0
 3915 0594 0000      		.word	0
 3916 0596 0100      		.word	1
 3917 0598 0000      		.word	0
 3918 059a 0000      		.word	0
 3919 059c 0000      		.word	0
 3920 059e 0000      		.word	0
 3921               		.text
 3922               	.Letext0:
 3923               		.file 6 "/usr/avr/include/stdint.h"
 3924               		.file 7 "/usr/lib/gcc/avr/7.3.0/include/stddef.h"
 3925               		.file 8 "./tmk_core/common/keyboard.h"
 3926               		.file 9 "./tmk_core/common/keycode.h"
 3927               		.file 10 "./tmk_core/common/action_code.h"
 3928               		.file 11 "./tmk_core/common/action.h"
 3929               		.file 12 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 3930               		.file 13 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 3931               		.file 14 "./lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 3932               		.file 15 "./lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 3933               		.file 16 "/usr/avr/include/stdio.h"
 3934               		.file 17 "./tmk_core/common/report.h"
 3935               		.file 18 "./tmk_core/common/host.h"
 3936               		.file 19 "./tmk_core/common/debug.h"
 3937               		.file 20 "./quantum/keycode_config.h"
 3938               		.file 21 "./quantum/quantum_keycodes.h"
 3939               		.file 22 "./quantum/keymap.h"
 3940               		.file 23 "./tmk_core/common/action_layer.h"
 3941               		.file 24 "./tmk_core/common/timer.h"
 3942               		.file 25 "./tmk_core/common/action_util.h"
 3943               		.file 26 "/usr/avr/include/stdlib.h"
 3944               		.file 27 "./quantum/process_keycode/process_steno.h"
 3945               		.file 28 "./quantum/process_keycode/process_tap_dance.h"
 3946               		.file 29 "./quantum/quantum.h"
 3947               		.file 30 "./quantum/keymap_extras/keymap_steno.h"
 3948               		.file 31 "/net/depot/qmk_firmware/keyboards/splitography/keymaps/hiea/common/tapdance.h"
 3949               		.file 32 "./tmk_core/common/eeconfig.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
     /tmp/ccVPiAse.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccVPiAse.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccVPiAse.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccVPiAse.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccVPiAse.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccVPiAse.s:13     .text.tilde_reset:0000000000000000 tilde_reset
     /tmp/ccVPiAse.s:38     .text.lparen_reset:0000000000000000 lparen_reset
     /tmp/ccVPiAse.s:58     .text.caps_reset:0000000000000000 caps_reset
     /tmp/ccVPiAse.s:78     .text.private:0000000000000000 private
     /tmp/ccVPiAse.s:3039   .progmem.data.__c.5774:0000000000000000 __c.5774
     /tmp/ccVPiAse.s:124    .text.send:0000000000000000 send
     /tmp/ccVPiAse.s:3034   .progmem.data.__c.5780:0000000000000000 __c.5780
     /tmp/ccVPiAse.s:169    .text.rparen_reset:0000000000000000 rparen_reset
     /tmp/ccVPiAse.s:184    .text.tap_key:0000000000000000 tap_key
     /tmp/ccVPiAse.s:216    .text.comma:0000000000000000 comma
     /tmp/ccVPiAse.s:266    .text.caps:0000000000000000 caps
     /tmp/ccVPiAse.s:301    .text.shift_key:0000000000000000 shift_key
     /tmp/ccVPiAse.s:344    .text.tilde:0000000000000000 tilde
     /tmp/ccVPiAse.s:415    .text.dot:0000000000000000 dot
     /tmp/ccVPiAse.s:467    .text.key_press:0000000000000000 key_press
     /tmp/ccVPiAse.s:3194   .bss.key_timer:0000000000000000 key_timer
     /tmp/ccVPiAse.s:541    .text.mt_shift:0000000000000000 mt_shift
     /tmp/ccVPiAse.s:651    .text.tap_mods:0000000000000000 tap_mods
     /tmp/ccVPiAse.s:3189   .bss.mods:0000000000000000 mods
     /tmp/ccVPiAse.s:697    .text.modifier:0000000000000000 modifier
     /tmp/ccVPiAse.s:774    .text.double_shift:0000000000000000 double_shift
     /tmp/ccVPiAse.s:3184   .bss.dt_shift:0000000000000000 dt_shift
     /tmp/ccVPiAse.s:807    .text.tap_shift:0000000000000000 tap_shift
     /tmp/ccVPiAse.s:930    .text.enter:0000000000000000 enter
     /tmp/ccVPiAse.s:952    .text.space:0000000000000000 space
     /tmp/ccVPiAse.s:974    .text.tap_reset:0000000000000000 tap_reset
     /tmp/ccVPiAse.s:1023   .text.enter_reset:0000000000000000 enter_reset
     /tmp/ccVPiAse.s:1046   .text.space_reset:0000000000000000 space_reset
     /tmp/ccVPiAse.s:1069   .text.double_max:0000000000000000 double_max
     /tmp/ccVPiAse.s:1150   .text.colon:0000000000000000 colon
     /tmp/ccVPiAse.s:1219   .text.eql:0000000000000000 eql
     /tmp/ccVPiAse.s:1288   .text.greater:0000000000000000 greater
     /tmp/ccVPiAse.s:1357   .text.lesser:0000000000000000 lesser
     /tmp/ccVPiAse.s:1426   .text.symbol_pair:0000000000000000 symbol_pair
     /tmp/ccVPiAse.s:1484   .text.tap_pair:0000000000000000 tap_pair
     /tmp/ccVPiAse.s:1640   .text.doublequote:0000000000000000 doublequote
     /tmp/ccVPiAse.s:1685   .text.grave:0000000000000000 grave
     /tmp/ccVPiAse.s:1730   .text.lbrace:0000000000000000 lbrace
     /tmp/ccVPiAse.s:1775   .text.lcurly:0000000000000000 lcurly
     /tmp/ccVPiAse.s:1820   .text.lparen:0000000000000000 lparen
     /tmp/ccVPiAse.s:1865   .text.quote:0000000000000000 quote
     /tmp/ccVPiAse.s:1910   .text.rangle:0000000000000000 rangle
     /tmp/ccVPiAse.s:1956   .text.rbrace:0000000000000000 rbrace
     /tmp/ccVPiAse.s:2002   .text.rcurly:0000000000000000 rcurly
     /tmp/ccVPiAse.s:2048   .text.rparen:0000000000000000 rparen
     /tmp/ccVPiAse.s:2094   .text.thumb_layer:0000000000000000 thumb_layer
     /tmp/ccVPiAse.s:3064   .bss.thumb:0000000000000000 thumb
     /tmp/ccVPiAse.s:3059   .bss.overlayer:0000000000000000 overlayer
     /tmp/ccVPiAse.s:2230   .text.lt_shift:0000000000000000 lt_shift
     /tmp/ccVPiAse.s:2306   .text.tap_layer:0000000000000000 tap_layer
     /tmp/ccVPiAse.s:2336   .text.clear_layers:0000000000000000 clear_layers
     /tmp/ccVPiAse.s:2373   .text.clear_tt:0000000000000000 clear_tt
     /tmp/ccVPiAse.s:3054   .bss.tt_keycode:0000000000000000 tt_keycode
     /tmp/ccVPiAse.s:2408   .text.toggle_plover:0000000000000000 toggle_plover
     /tmp/ccVPiAse.s:3049   .bss.plover:0000000000000000 plover
     /tmp/ccVPiAse.s:2463   .text.base_layer:0000000000000000 base_layer
     /tmp/ccVPiAse.s:2488   .text.steno:0000000000000000 steno
     /tmp/ccVPiAse.s:2549   .text.steno_exit:0000000000000000 steno_exit
     /tmp/ccVPiAse.s:2581   .text.process_record_user:0000000000000000 process_record_user
     /tmp/ccVPiAse.s:3044   .bss.base_n:0000000000000000 base_n
     /tmp/ccVPiAse.s:3015   .text.matrix_init_user:0000000000000000 matrix_init_user
     /tmp/ccVPiAse.s:3070   .data.tap_dance_actions:0000000000000000 tap_dance_actions
     /tmp/ccVPiAse.s:3200   .progmem.data.keymaps:0000000000000000 keymaps

UNDEFINED SYMBOLS
unregister_code
send_string_P
reset_tap_dance
register_code
set_oneshot_mods
timer_elapsed
timer_read
layer_on
set_oneshot_layer
clear_oneshot_layer_state
layer_off
clear_mods
set_single_persistent_default_layer
eeconfig_is_enabled
eeconfig_init
eeconfig_read_keymap
keymap_config
eeconfig_update_keymap
steno_set_mode
__do_copy_data
__do_clear_bss
